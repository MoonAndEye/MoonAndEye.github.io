<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.9.3">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2025-08-07T17:58:14+08:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">Marv[in]sight</title><subtitle>Welcome to my blog, a vibrant space dedicated to software development, investment insights, personal experiences, and life stories. Join me as we explore a diverse array of topics. I aim to share my journey and insights, fostering a community where we can interact, learn from each other, and grow together.</subtitle><author><name>Marvin Lin</name></author><entry xml:lang="en"><title type="html">Using Think Mode to Let Claude Code Plan Before Implementation</title><link href="http://localhost:4000/en/programming/think-mode-on-claude-code/" rel="alternate" type="text/html" title="Using Think Mode to Let Claude Code Plan Before Implementation" /><published>2025-08-07T12:05:00+08:00</published><updated>2025-08-07T12:05:00+08:00</updated><id>http://localhost:4000/en/programming/think-mode-on-claude-code</id><content type="html" xml:base="http://localhost:4000/en/programming/think-mode-on-claude-code/">&lt;p&gt;When using Claude Code, you can first enable think mode to let AI help you plan the code architecture and logic before starting implementation. You can wait until you approve and confirm Claude Code’s plan before letting Claude Code execute.&lt;/p&gt;

&lt;h2 id=&quot;how-to-switch-to-think-mode---shift--tab&quot;&gt;How to Switch to Think Mode - Shift + Tab&lt;/h2&gt;

&lt;p&gt;In Claude Code, you can use the shortcut Shift + Tab to switch modes. The first switch is to auto accept mode. You can see the prompt at the bottom of the terminal to know which mode you’re currently in. Press Shift + Tab a second time to enter think mode. When you enable think mode, Claude enters a state focused on thinking and planning. At this time, Claude Code will not modify your code but will list the steps it will take and the implementation blueprint. So you can safely conduct various confirmations and divergent thinking.&lt;/p&gt;

&lt;h3 id=&quot;first-press-of-shift--tab---enter-auto-accept-mode&quot;&gt;First Press of Shift + Tab - Enter Auto Accept Mode&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;/assets/programming/claude-code-think-mode/claude-code-accept-mode.png&quot; alt=&quot;auto accept mode&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;use-shift--tab-to-enter-think-mode&quot;&gt;Use Shift + Tab to Enter Think Mode&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;/assets/programming/claude-code-think-mode/claude-code-think-mode.png&quot; alt=&quot;claude code think mode&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;advantages-of-think-mode&quot;&gt;Advantages of Think Mode&lt;/h2&gt;

&lt;h3 id=&quot;plan-first-then-execute&quot;&gt;Plan First, Then Execute&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;/assets/programming/claude-code-think-mode/think-mode-request-prompt.png&quot; alt=&quot;think mode request prompt&quot; /&gt;&lt;/p&gt;

&lt;p&gt;When you make a request to Claude in think mode, Claude will first analyze and think about your requirements, then provide a detailed plan blueprint.&lt;/p&gt;

&lt;h3 id=&quot;view-implementation-blueprint&quot;&gt;View Implementation Blueprint&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;/assets/programming/claude-code-think-mode/plan-mode-blueprint.png&quot; alt=&quot;plan mode blueprint&quot; /&gt;&lt;/p&gt;

&lt;p&gt;In think mode, Claude will display a complete implementation plan, allowing you to understand the entire implementation process before actual execution.&lt;/p&gt;

&lt;h3 id=&quot;execute-after-confirmation&quot;&gt;Execute After Confirmation&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;/assets/programming/claude-code-think-mode/action-after-planing.png&quot; alt=&quot;action after planning&quot; /&gt;&lt;/p&gt;

&lt;p&gt;When you confirm the plan, Claude will start executing actual code modifications based on the previous planning.&lt;/p&gt;

&lt;h3 id=&quot;personal-thoughts&quot;&gt;Personal Thoughts&lt;/h3&gt;
&lt;p&gt;Before knowing about think mode, I used prompts to prevent Claude Code from directly modifying code, instead asking it to give me a general direction and steps first. However, when using prompts alone, sometimes Claude Code would still directly initiate modifications. Moreover, since I mostly develop iOS apps, it would often directly execute Xcode build or other Xcode CLI commands.&lt;/p&gt;

&lt;p&gt;In think mode, I feel the quality of modification context has improved, and the solutions it proposes in think mode have preserved the concept of Canvas or artifacts in the UI, allowing for minor modifications to the same file without affecting the overall structure and logic.&lt;/p&gt;

&lt;p&gt;This is what I like most about it. After all, I need to get things done right first before I can start asking AI to do things well.&lt;/p&gt;</content><author><name>Marvin Lin</name></author><category term="programming" /><category term="Claude" /><category term="AI" /><category term="AI Agent" /><summary type="html">When using Claude Code, you can first enable think mode to let AI help you plan the code architecture and logic before starting implementation. You can wait until you approve and confirm Claude Code’s plan before letting Claude Code execute.</summary></entry><entry xml:lang="zh"><title type="html">使用 think mode 先讓 claude code 規畫，再開始實作</title><link href="http://localhost:4000/zh/programming/think-mode-on-claude-code/" rel="alternate" type="text/html" title="使用 think mode 先讓 claude code 規畫，再開始實作" /><published>2025-08-07T12:02:00+08:00</published><updated>2025-08-07T12:02:00+08:00</updated><id>http://localhost:4000/zh/programming/think-mode-on-claude-code</id><content type="html" xml:base="http://localhost:4000/zh/programming/think-mode-on-claude-code/">&lt;p&gt;在使用 claude code 時，你可以先啟用 think mode，讓 AI 幫助你規劃程式碼的架構和邏輯，然後再開始實作。直到你認可和確認 Claude code 的規畫，再開始讓 claude code 執行。&lt;/p&gt;

&lt;h2 id=&quot;切換-think-mode-的方法---shift--tab&quot;&gt;切換 think mode 的方法 - shift + tab&lt;/h2&gt;

&lt;p&gt;在 Claude code 中，你可以使用快捷鍵 shift + tab 來切換 mode。第一次的切換是 auto accept mode，你可以看 terminal 下方的提示，來知道現在的 mode 是哪一種。按第二次 shift + tab 就會進入 think mode。當你啟用 think mode 後，Claude 會進入一種專注於思考和規劃的狀態，這時候 claude code 並不會去更動你的程式碼，而是列出他會進行的步驟，以及如何實作的藍圖 (blueprint)。所以你可以放心的進行各種確認和發散的思考。&lt;/p&gt;

&lt;h3 id=&quot;第一次按-shift--tab---進入-auto-accept-mode&quot;&gt;第一次按 shift + tab - 進入 auto accept mode&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;/assets/programming/claude-code-think-mode/claude-code-accept-mode.png&quot; alt=&quot;auto accept mode&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;用-shift--tab-進入-think-mode&quot;&gt;用 shift + tab 進入 think mode&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;/assets/programming/claude-code-think-mode/claude-code-think-mode.png&quot; alt=&quot;claude code think mode&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;think-mode-的優點&quot;&gt;think mode 的優點&lt;/h2&gt;

&lt;h3 id=&quot;先規劃再執行&quot;&gt;先規劃再執行&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;/assets/programming/claude-code-think-mode/think-mode-request-prompt.png&quot; alt=&quot;think mode request prompt&quot; /&gt;&lt;/p&gt;

&lt;p&gt;當你在 think mode 中向 Claude 提出請求時，Claude 會先分析和思考你的需求，然後提供一個詳細的計劃藍圖。&lt;/p&gt;

&lt;h3 id=&quot;查看實作藍圖&quot;&gt;查看實作藍圖&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;/assets/programming/claude-code-think-mode/plan-mode-blueprint.png&quot; alt=&quot;plan mode blueprint&quot; /&gt;&lt;/p&gt;

&lt;p&gt;在 think mode 中，Claude 會展示完整的實作計劃，讓你可以在實際執行之前就了解整個實作流程。&lt;/p&gt;

&lt;h3 id=&quot;確認後執行&quot;&gt;確認後執行&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;/assets/programming/claude-code-think-mode/action-after-planing.png&quot; alt=&quot;action after planning&quot; /&gt;&lt;/p&gt;

&lt;p&gt;當你確認計劃後，Claude 會根據之前的規劃開始執行實際的程式碼修改。&lt;/p&gt;

&lt;h3 id=&quot;心得&quot;&gt;心得&lt;/h3&gt;
&lt;p&gt;在不知道 think mode 之前的我，是使用 prompt 讓 Claude code 不要直接修改程式碼，而是先給我一個大概的方向和步驟。只是，單純用 prompt 時，有時候 claude code 還是會直接發動修改。而且因為我大多時間是開發 iOS，常常會直接執行到 xcode build or 其他 xcode cli 指令。&lt;/p&gt;

&lt;p&gt;在 think mode 下，我覺得修改的上下文品質有提高，而且他在 think mode 提出的方案， UI 有保留 Canvas or artifacts 的概念，可以做到同一份檔案做小幅度的修改，而不會影響到整體的結構和邏輯。&lt;/p&gt;

&lt;p&gt;這是我最喜歡的地方，畢竟，要先把事情做對，我才可以開始要求 AI 把事情做好。&lt;/p&gt;</content><author><name>Marvin Lin</name></author><category term="programming" /><category term="Claude" /><category term="AI" /><category term="AI Agent" /><summary type="html">在使用 claude code 時，你可以先啟用 think mode，讓 AI 幫助你規劃程式碼的架構和邏輯，然後再開始實作。直到你認可和確認 Claude code 的規畫，再開始讓 claude code 執行。</summary></entry><entry xml:lang="en"><title type="html">Mario Kart World - Wallpaper Downloads</title><link href="http://localhost:4000/en/life/mario-kart-world/" rel="alternate" type="text/html" title="Mario Kart World - Wallpaper Downloads" /><published>2025-07-25T21:10:00+08:00</published><updated>2025-07-25T21:10:00+08:00</updated><id>http://localhost:4000/en/life/mario-kart-world</id><content type="html" xml:base="http://localhost:4000/en/life/mario-kart-world/">&lt;p&gt;Nintendo’s website now has Mario Kart World wallpapers available for download.&lt;/p&gt;

&lt;h2 id=&quot;nintendo-mario-kart-download-link&quot;&gt;&lt;a href=&quot;https://www.nintendo.com/jp/download/mario_kart_world/index.html&quot;&gt;Nintendo Mario Kart Download Link&lt;/a&gt;&lt;/h2&gt;

&lt;h2 id=&quot;wallpaper-1&quot;&gt;Wallpaper 1&lt;/h2&gt;

&lt;h3 id=&quot;mobile---1320-x-2868&quot;&gt;Mobile - 1320 x 2868&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;/assets/life/mario-kart/pic1-smart1.jpg&quot; alt=&quot;Mario kart - Pic 1 - Smart1&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;mobile---1440-x-2560&quot;&gt;Mobile - 1440 x 2560&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/assets/life/mario-kart/pic1-smart2.jpg&quot; alt=&quot;Mario kart - Pic 1 - Smart2&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;desktop&quot;&gt;Desktop&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/assets/life/mario-kart/pic1-pc.jpg&quot; alt=&quot;Mario kart - pic 1 - pc&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;wallpaper-2&quot;&gt;Wallpaper 2&lt;/h2&gt;

&lt;h3 id=&quot;mobile---1320-x-2868-1&quot;&gt;Mobile - 1320 x 2868&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/assets/life/mario-kart/pic2-smart1.jpg&quot; alt=&quot;Mario kart - Pic 2 - Smart1&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;mobile---1440-x-2560-1&quot;&gt;Mobile - 1440 x 2560&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/assets/life/mario-kart/pic2-smart2.jpg&quot; alt=&quot;Mario kart - Pic 2 - Smart2&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;desktop-1&quot;&gt;Desktop&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/assets/life/mario-kart/pic2-pc.jpg&quot; alt=&quot;Mario kart - pic 2 - pc&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;other-wallpaper-links&quot;&gt;Other Wallpaper Links&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.marvinswift.com/en/life/mario-desktop-screen/&quot;&gt;Mario Wonder - Wallpapers Available for Download on Nintendo’s Official Website&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.marvinswift.com/en/life/zelda-kingdom-tear-wall-papers/&quot;&gt;The Legend of Zelda - Tears of the Kingdom Wallpapers Available on Nintendo’s Website&lt;/a&gt;&lt;/p&gt;</content><author><name>Marvin Lin</name></author><category term="life" /><category term="life" /><category term="Mario Kart World" /><summary type="html">Nintendo’s website now has Mario Kart World wallpapers available for download.</summary></entry><entry xml:lang="zh"><title type="html">馬力歐賽車世界 - Mario Kart 世界 桌布下載</title><link href="http://localhost:4000/zh/life/mario-kart-world/" rel="alternate" type="text/html" title="馬力歐賽車世界 - Mario Kart 世界 桌布下載" /><published>2025-07-25T21:03:00+08:00</published><updated>2025-07-25T21:03:00+08:00</updated><id>http://localhost:4000/zh/life/mario-kart-world</id><content type="html" xml:base="http://localhost:4000/zh/life/mario-kart-world/">&lt;p&gt;任天堂的網站，現在有 Mario Kart 世界的桌布下載。&lt;/p&gt;

&lt;h2 id=&quot;任天堂的馬力歐賽車下載連結&quot;&gt;&lt;a href=&quot;https://www.nintendo.com/jp/download/mario_kart_world/index.html&quot;&gt;任天堂的馬力歐賽車下載連結&lt;/a&gt;&lt;/h2&gt;

&lt;h2 id=&quot;桌布一&quot;&gt;桌布一&lt;/h2&gt;

&lt;h3 id=&quot;手機用---1320-x-2868&quot;&gt;手機用 - 1320 x 2868&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;/assets/life/mario-kart/pic1-smart1.jpg&quot; alt=&quot;Mario kart - Pic 1 - Smart1&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;手機用---1440-x-2560&quot;&gt;手機用 - 1440 x 2560&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/assets/life/mario-kart/pic1-smart2.jpg&quot; alt=&quot;Mario kart - Pic 1 - Smart2&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;電腦用&quot;&gt;電腦用&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/assets/life/mario-kart/pic1-pc.jpg&quot; alt=&quot;Mario kart - pic 1 - pc&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;桌布二&quot;&gt;桌布二&lt;/h2&gt;

&lt;h3 id=&quot;手機用---1320-x-2868-1&quot;&gt;手機用 - 1320 x 2868&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/assets/life/mario-kart/pic2-smart1.jpg&quot; alt=&quot;Mario kart - Pic 2 - Smart1&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;手機用---1440-x-2560-1&quot;&gt;手機用 - 1440 x 2560&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/assets/life/mario-kart/pic2-smart2.jpg&quot; alt=&quot;Mario kart - Pic 2 - Smart2&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;電腦用-1&quot;&gt;電腦用&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/assets/life/mario-kart/pic2-pc.jpg&quot; alt=&quot;Mario kart - pic 2 - pc&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;其他的桌布連結&quot;&gt;其他的桌布連結&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.marvinswift.com/life/mario-desktop-screen.html&quot;&gt;馬力歐驚奇 桌布下載&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.marvinswift.com/life/zelda-kingdom-tear-wall-papers.html&quot;&gt;薩爾達傳說 桌布下載&lt;/a&gt;&lt;/p&gt;</content><author><name>Marvin Lin</name></author><category term="life" /><category term="life" /><category term="Mario Kart World" /><summary type="html">任天堂的網站，現在有 Mario Kart 世界的桌布下載。</summary></entry><entry xml:lang="en"><title type="html">How to Paste Screen Captures to Claude Code Editor on macOS</title><link href="http://localhost:4000/en/programming/paste-capture-image-to-claude-code/" rel="alternate" type="text/html" title="How to Paste Screen Captures to Claude Code Editor on macOS" /><published>2025-07-14T16:25:00+08:00</published><updated>2025-07-14T16:25:00+08:00</updated><id>http://localhost:4000/en/programming/paste-capture-image-to-claude-code</id><content type="html" xml:base="http://localhost:4000/en/programming/paste-capture-image-to-claude-code/">&lt;p&gt;Currently, I’m extensively using Claude code for development. Claude code is a terminal-based AI coding interface that primarily works with text. So when developing, the collaboration feels like I mark files or highlight certain code sections, and Claude code in the VSCode terminal knows which code I want to discuss, and it also highlights them in the Claude code interface.&lt;/p&gt;

&lt;h2 id=&quot;cmd--ctrl--k---you-can-send-highlighted-code-from-another-file-to-claude-code&quot;&gt;Cmd + ctrl + K - You can send highlighted code from another file to Claude code&lt;/h2&gt;

&lt;p&gt;As shown in the image, you’ll see “1 line selected” in the bottom right of the terminal&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/programming/claude-code/claude-code-select-lines.png&quot; alt=&quot;claude-code-select-lines&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;what-about-images-theres-definitely-a-way-to-send-them-to-claude-code-too&quot;&gt;What about images? There’s definitely a way to send them to Claude code too&lt;/h2&gt;

&lt;p&gt;On macOS, you can use the following method to paste screen captures to Claude’s code editor:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Press ctrl + cmd + shift + 4, then select the area you want to capture.&lt;/li&gt;
  &lt;li&gt;After taking the screenshot, switch to Claude code’s editor.&lt;/li&gt;
  &lt;li&gt;Press ctrl + v to paste the screenshot.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/programming/claude-code/claude-code-screen-capture.png&quot; alt=&quot;claude-code-paste-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;At this point, you’ll see the text “image” pasted into the input box. You can use this technique to have Claude make modifications based on colors/layout.&lt;/p&gt;</content><author><name>Marvin Lin</name></author><category term="programming" /><category term="Claude" /><category term="AI" /><category term="AI Agent" /><summary type="html">Currently, I’m extensively using Claude code for development. Claude code is a terminal-based AI coding interface that primarily works with text. So when developing, the collaboration feels like I mark files or highlight certain code sections, and Claude code in the VSCode terminal knows which code I want to discuss, and it also highlights them in the Claude code interface.</summary></entry><entry xml:lang="zh"><title type="html">將螢幕的截圖貼上到 Claude 的程式碼編輯器的方法，macOS 適用</title><link href="http://localhost:4000/zh/programming/paste-capture-image-to-claude-code/" rel="alternate" type="text/html" title="將螢幕的截圖貼上到 Claude 的程式碼編輯器的方法，macOS 適用" /><published>2025-07-14T16:20:00+08:00</published><updated>2025-07-14T16:20:00+08:00</updated><id>http://localhost:4000/zh/programming/paste-capture-image-to-claude-code</id><content type="html" xml:base="http://localhost:4000/zh/programming/paste-capture-image-to-claude-code/">&lt;p&gt;現在的我，已大量使用 Claude code 進行開發，Claude code 是個 terminal 型的 AI coding 界面，以文字為主。所以在開發的時候，合作起來的感覺就是，我標記檔案，或是框起某些程式碼，在 VSCode terminal 中的 claude code 會知道我現在想要討論的程碼是哪些，在執行 Calude code 的界面也會標記出來。&lt;/p&gt;

&lt;h2 id=&quot;cmd--ctrl--k---就可以把另一個檔案框起來的程式碼傳給-claude-code&quot;&gt;Cmd + ctrl + K - 就可以把另一個檔案框起來的程式碼，傳給 claude code&lt;/h2&gt;

&lt;p&gt;如圖，在 terminal 的右下方，就會看到 1 line selected&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/programming/claude-code/claude-code-select-lines.png&quot; alt=&quot;claude-code-select-lines&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;那圖案呢當然也有方法傳給-claude-code&quot;&gt;那圖案呢？當然也有方法傳給 claude code&lt;/h2&gt;

&lt;p&gt;在 macOS 上，你可以使用以下方法將螢幕截圖貼上到 Claude 的程式碼編輯器中：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;按下 ctrl + cmd + shift + 4，然後選擇你想要截圖的區域。&lt;/li&gt;
  &lt;li&gt;截圖完成後，切換到 claude code 的程式碼編輯器。&lt;/li&gt;
  &lt;li&gt;按下 ctrl + v (注意，是 ctrl)，將截圖貼上。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/programming/claude-code/claude-code-screen-capture.png&quot; alt=&quot;claude-code-paste-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;這時候，你會看到 image 的文字被貼上輸入框，你可以使用這個技巧，讓 claude 針對顏色/排版，進行修改。&lt;/p&gt;</content><author><name>Marvin Lin</name></author><category term="programming" /><category term="Claude" /><category term="AI" /><category term="AI Agent" /><summary type="html">現在的我，已大量使用 Claude code 進行開發，Claude code 是個 terminal 型的 AI coding 界面，以文字為主。所以在開發的時候，合作起來的感覺就是，我標記檔案，或是框起某些程式碼，在 VSCode terminal 中的 claude code 會知道我現在想要討論的程碼是哪些，在執行 Calude code 的界面也會標記出來。</summary></entry><entry xml:lang="en"><title type="html">Prompt to Make AI Agents Present Design First Without Implementation</title><link href="http://localhost:4000/en/programming/ai-agent-coding-prompt/" rel="alternate" type="text/html" title="Prompt to Make AI Agents Present Design First Without Implementation" /><published>2025-04-26T11:50:00+08:00</published><updated>2025-04-26T11:50:00+08:00</updated><id>http://localhost:4000/en/programming/ai-agent-coding-prompt</id><content type="html" xml:base="http://localhost:4000/en/programming/ai-agent-coding-prompt/">&lt;p&gt;This year, I’ve been heavily using AI Agents in program development. Besides general debugging, Agents also participate in my program design process. However, if I don’t specifically mention “don’t start coding, I want to review your design first,” the AI Agent will immediately start writing code. Based on my experience over the past few months, it’s rare for an AI Agent to design exactly what I want on the first try. But if I continuously review the solutions proposed by the Agent and discuss them, the AI Agent gradually gets closer to the results I’m looking for.&lt;/p&gt;

&lt;p&gt;If you’re using Cursor, you can write the rules in &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.cursor/rules/think-mode.mdc&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;If you’re using VSCode Insiders, you can press &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;cmd + shift + P&lt;/code&gt;, then choose “create prompt”, which will open up the user settings. When giving commands, pressing the “add context” shortcut will add this prompt to the context, saving you typing time.&lt;/p&gt;

&lt;h2 id=&quot;think-mode-prompt&quot;&gt;Think-mode prompt&lt;/h2&gt;

&lt;div class=&quot;language-markdown highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gh&quot;&gt;# Thinking Mode Only: Ideas and Proposals Without Implementation&lt;/span&gt;

Act as a consultant for this conversation only. Help me think through problems without implementing code.

&lt;span class=&quot;gu&quot;&gt;## Guidelines:&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;-&lt;/span&gt; Analyze the problem or request I present
&lt;span class=&quot;p&quot;&gt;-&lt;/span&gt; Explore possible implementation approaches and architectures
&lt;span class=&quot;p&quot;&gt;-&lt;/span&gt; Provide high-level solutions or design considerations
&lt;span class=&quot;p&quot;&gt;-&lt;/span&gt; Explain pros and cons of different approaches
&lt;span class=&quot;p&quot;&gt;-&lt;/span&gt; Suggest technology choices and potential concerns

&lt;span class=&quot;gu&quot;&gt;## Do NOT:&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;-&lt;/span&gt; Do not write complete implementation code
&lt;span class=&quot;p&quot;&gt;-&lt;/span&gt; Do not modify my existing code
&lt;span class=&quot;p&quot;&gt;-&lt;/span&gt; Do not provide code blocks that can be directly copied and pasted

Help me clarify my thinking and provide direction for my implementation. If I need specific code assistance later, I will explicitly request it.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name>Marvin Lin</name></author><category term="programming" /><category term="Cursor" /><category term="AI" /><category term="AI Agent" /><summary type="html">This year, I’ve been heavily using AI Agents in program development. Besides general debugging, Agents also participate in my program design process. However, if I don’t specifically mention “don’t start coding, I want to review your design first,” the AI Agent will immediately start writing code. Based on my experience over the past few months, it’s rare for an AI Agent to design exactly what I want on the first try. But if I continuously review the solutions proposed by the Agent and discuss them, the AI Agent gradually gets closer to the results I’m looking for.</summary></entry><entry xml:lang="zh"><title type="html">讓 AI Agent 不要動手，先呈現設計結果的 prompt</title><link href="http://localhost:4000/zh/programming/ai-agent-coding-prompt/" rel="alternate" type="text/html" title="讓 AI Agent 不要動手，先呈現設計結果的 prompt" /><published>2025-04-26T11:39:00+08:00</published><updated>2025-04-26T11:39:00+08:00</updated><id>http://localhost:4000/zh/programming/ai-agent-coding-prompt</id><content type="html" xml:base="http://localhost:4000/zh/programming/ai-agent-coding-prompt/">&lt;p&gt;今年開始，我大量的使用 AI Agent 在程式開發。除了一般 debug 以外，Agent 也會參與我的程式設計過程。但是，AI Agent 如果沒有特別提到「不要動手，我要先 review 你的設計」時，AI Agent 會直接開始寫程式碼。而依這幾個月的經驗，AI Agent 很難一次就設計到我想要的結果。但如果我不斷的 review Agent 提出來的方案，在討論的過程中，AI Agent 會越來越接近我想要的結果。&lt;/p&gt;

&lt;p&gt;如果你用的是 cursor，你可以把 rules 寫在 .cursor/rules/think-mode.mdc&lt;/p&gt;

&lt;p&gt;如果你是用 VSCode insiders，你可以先按 cmd + shift + P，然後選擇 create prompt，接著他就會開到 user setting 下。在下指令時，你按下 add context 的 short cut 時，就會把這段 prompt 加在 context 裡面了，可以結省你打字的時間。&lt;/p&gt;

&lt;h2 id=&quot;think-mode-prompt&quot;&gt;Think-mode prompt&lt;/h2&gt;

&lt;div class=&quot;language-markdown highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gh&quot;&gt;# Thinking Mode Only: Ideas and Proposals Without Implementation&lt;/span&gt;

Act as a consultant for this conversation only. Help me think through problems without implementing code.

&lt;span class=&quot;gu&quot;&gt;## Guidelines:&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;-&lt;/span&gt; Analyze the problem or request I present
&lt;span class=&quot;p&quot;&gt;-&lt;/span&gt; Explore possible implementation approaches and architectures
&lt;span class=&quot;p&quot;&gt;-&lt;/span&gt; Provide high-level solutions or design considerations
&lt;span class=&quot;p&quot;&gt;-&lt;/span&gt; Explain pros and cons of different approaches
&lt;span class=&quot;p&quot;&gt;-&lt;/span&gt; Suggest technology choices and potential concerns

&lt;span class=&quot;gu&quot;&gt;## Do NOT:&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;-&lt;/span&gt; Do not write complete implementation code
&lt;span class=&quot;p&quot;&gt;-&lt;/span&gt; Do not modify my existing code
&lt;span class=&quot;p&quot;&gt;-&lt;/span&gt; Do not provide code blocks that can be directly copied and pasted

Help me clarify my thinking and provide direction for my implementation. If I need specific code assistance later, I will explicitly request it.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name>Marvin Lin</name></author><category term="programming" /><category term="Cursor" /><category term="AI" /><category term="AI Agent" /><summary type="html">今年開始，我大量的使用 AI Agent 在程式開發。除了一般 debug 以外，Agent 也會參與我的程式設計過程。但是，AI Agent 如果沒有特別提到「不要動手，我要先 review 你的設計」時，AI Agent 會直接開始寫程式碼。而依這幾個月的經驗，AI Agent 很難一次就設計到我想要的結果。但如果我不斷的 review Agent 提出來的方案，在討論的過程中，AI Agent 會越來越接近我想要的結果。</summary></entry><entry xml:lang="zh"><title type="html">在非開發職能上，使用 Cursor 在 Jira 寫 GWT (Given - When - Then) 需求單</title><link href="http://localhost:4000/zh/programming/using-cursor-in-jira/" rel="alternate" type="text/html" title="在非開發職能上，使用 Cursor 在 Jira 寫 GWT (Given - When - Then) 需求單" /><published>2025-03-15T11:39:00+08:00</published><updated>2025-03-15T11:39:00+08:00</updated><id>http://localhost:4000/zh/programming/using-cursor-in-jira</id><content type="html" xml:base="http://localhost:4000/zh/programming/using-cursor-in-jira/">&lt;p&gt;2025 年開始，我已經在開發的日常中，大量的使用 Cursor。但如果想法打開，Cursor 輸出的「文字」本來就可以超過「程式」的範圍。如果團隊中一起合作的 PM，使用 Cursor 開單，是不是開發者可以快速的跨越自然語言和程式語言的隔閤，然後快速的進入程式開發呢？首先，先從 Cursor IDE 下載開始。&lt;/p&gt;

&lt;h2 id=&quot;cursor-ide-下載&quot;&gt;&lt;a href=&quot;https://www.cursor.com/&quot;&gt;Cursor IDE 下載&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.cursor.com/&quot;&gt;&lt;img src=&quot;/assets/programming/cursor-in-jira/cursor_landing.png&quot; alt=&quot;Cursor IDE Landing Page&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;cursor-model-選擇的擴充&quot;&gt;Cursor Model 選擇的擴充&lt;/h2&gt;

&lt;p&gt;Model 的擴充，預設是 claude 系和 ChatGPT4o-mini, cursor-small, 預設不會打開 Gemini 2.0 或 ChatGPT o1，所以要打開才能使用其他模型。在這邊選擇 cursor setting。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/programming/cursor-in-jira/cursor_setting_touch.png&quot; alt=&quot;Cursor settings&quot; /&gt;&lt;/p&gt;

&lt;p&gt;這邊可以選擇在使用不同的 models，只要把想使用的 models 勾選起來，就可以選擇更多的 models。每一個 model 都有特性，像是 deepseek-v3 速度就很快，但選到 deepseek-r1 或 calude-sonnet 3.7 with think 就具備思考的特性。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/programming/cursor-in-jira/cursor_models_choose.png&quot; alt=&quot;Cursor models choose&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;右側欄---開始使用-ai-開始輔助-cmd---shift--b&quot;&gt;右側欄 - 開始使用 AI 開始輔助 (cmd  + shift + B)&lt;/h2&gt;

&lt;p&gt;你可以在右邊這一欄，寫上你想要問的，要求任務，問架構，所以在管理專案的職能上，當然可以寫出 GWT (Give - When - Then) 的 jira 單&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/programming/cursor-in-jira/cursor_right_bar.png&quot; alt=&quot;Cursor right bar&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;左側欄---folder-navigation-search-裝載的外掛-cmd--b&quot;&gt;左側欄 - folder navigation, search, 裝載的外掛 (cmd + B)&lt;/h2&gt;

&lt;p&gt;檔案導覽 (Folder Navigation)**&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;顯示專案目錄樹狀結構&lt;/li&gt;
  &lt;li&gt;支援快速檔案/資料夾建立 (右鍵 &amp;gt; New File/Folder)&lt;/li&gt;
  &lt;li&gt;拖曳檔案即可移動位置&lt;/li&gt;
  &lt;li&gt;快捷鍵: Cmd + 1 聚焦檔案導覽&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;全域搜尋 (Global Search)**&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;跨檔案內容搜尋 (支援正規表示式)&lt;/li&gt;
  &lt;li&gt;過濾搜尋範圍: 檔案類型/符號類型(類別/方法/屬性)&lt;/li&gt;
  &lt;li&gt;快捷鍵: Cmd + Shift + F&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;外掛管理 (Plugin Management)**&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;顯示已安裝擴充套件列表&lt;/li&gt;
  &lt;li&gt;一鍵連結至 &lt;a href=&quot;https://www.cursor.com/marketplace&quot;&gt;Cursor Marketplace&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;快捷鍵: Cmd + Shift + X 開啟擴充管理&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/programming/cursor-in-jira/cursor_left_bar.png&quot; alt=&quot;Cursor left bar&quot; /&gt;&lt;/p&gt;

&lt;p&gt;其他你裝的外掛太多，無法顯示，都會列在後面，長度如果太長的話，要按一個下拉式選單，就可以展開&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/programming/cursor-in-jira/cursor_left_drop_list.png&quot; alt=&quot;Cursor left drop list&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;jira-專案管理外掛的安裝---jira-atlassian&quot;&gt;Jira 專案管理外掛的安裝 - &lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=Atlassian.atlascode&quot;&gt;Jira Atlassian&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;如果能不切換視窗，對工作者的效率當然是好的，在這個 marketplace 裡面，是有 Jira 的外掛套件的，先選擇 marketplace，然後打上 Jira 開始找 Jira 套件，然後選擇 install。就可以開始在 VSCode or Cursor 中開始 編輯/修改 Jira 的票了。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/programming/cursor-in-jira/cursor_jira_plug_in.png&quot; alt=&quot;Jira plug in&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;開一個-folder-開始寫-jira-ticket-或是任何你要產生的文件&quot;&gt;開一個 Folder 開始寫 Jira ticket 或是任何你要產生的文件&lt;/h2&gt;
&lt;p&gt;基本用法 - 用 folder (資料夾) 來管理你的文件，不論那是什麼文件，git 版控有學習門檻，因為 git 有學習曲線高的狀況，非開發者實際上可以用 fileName_yyyyMMdd_version 來當版本控制也可以。因為在文案的撰寫和程式不一樣，文案可能要複數時間版本比較內容，但程式只需要發佈時，就出去一份&lt;/p&gt;

&lt;p&gt;先開一個資料夾&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/programming/cursor-in-jira/create_demo_folder.png&quot; alt=&quot;create folder image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;打開 cursor ，選擇那個資料夾&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/programming/cursor-in-jira/open_by_cursor.png&quot; alt=&quot;choose folder by folder&quot; /&gt;&lt;/p&gt;

&lt;p&gt;可以用這個 icon 直接開 file
&lt;img src=&quot;/assets/programming/cursor-in-jira/create_files.png&quot; alt=&quot;create files&quot; /&gt;&lt;/p&gt;

&lt;p&gt;接下來，就可以用 AI 來寫作了
&lt;img src=&quot;/assets/programming/cursor-in-jira/start_with_ai.png&quot; alt=&quot;Using AI create&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;agent-ask-edit-mode-解釋&quot;&gt;Agent, Ask, Edit mode 解釋&lt;/h2&gt;

&lt;p&gt;Cursor 這邊可以選不同的 models 進行你的任務。&lt;/p&gt;

&lt;p&gt;Ask: 就像 ChatGPT 的那個界面一樣，他會告訴你 prompt 指示的回應，然後出現在側邊欄。&lt;/p&gt;

&lt;p&gt;Edit: 這時候 AI 具備可以修改檔案的能力，他在指令中進行檔案的修改。修改完後你如果滿意，可以按 Accept 接受修改，可以按 Reject 不接受修改&lt;/p&gt;

&lt;p&gt;Agent: 可以接受更抽象化的指令，且具備開新檔案能力/改檔案名能力/操控 terminal 能力，但因為指令抽象化 + 可操控能力變強，在搭配 YOLO mode 時，建議最好一直盯著他的 respnose，要停手都還有機會。舉例: 你可以下，將這份檔案翻譯成 英文/德文/俄文/日文，並且把每種不同的翻譯都另存一份，並加上後綴 lang_code。「如果順利」，Agent 會在翻譯完成後，直接把檔案生出來，並完成 my_text_en.txt, my_text_ge.txt, my_text_ru.txt, my_text_jp.txt 。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/programming/cursor-in-jira/chat_with_diff_models.png&quot; alt=&quot;Chat with diff models&quot; /&gt;&lt;/p&gt;

&lt;p&gt;接下來，你就可以用 AI 來輔助開 jira ticket 了。&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;試產-gwt&quot;&gt;試產 GWT&lt;/h2&gt;

&lt;p&gt;接下來，你可以試這一段，在 Agent mode 中產出文件。&lt;/p&gt;
&lt;div class=&quot;language-markdown highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;請依 Give - When - Then (GWT) 的格式，將下列需求寫成 GWT 文件。
login
logout
reset password
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;試產的結果&quot;&gt;試產的結果&lt;/h2&gt;

&lt;p&gt;我會幫你將登入、登出和重設密碼的功能需求，用 Given-When-Then 的格式撰寫：&lt;/p&gt;

&lt;h3 id=&quot;登入功能&quot;&gt;登入功能&lt;/h3&gt;

&lt;div class=&quot;language-gherkin highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;Feature&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; 使用者登入

&lt;span class=&quot;kn&quot;&gt;Scenario&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; 成功登入
&lt;span class=&quot;nf&quot;&gt;Given &lt;/span&gt;使用者在登入頁面
&lt;span class=&quot;nf&quot;&gt;When &lt;/span&gt;使用者輸入正確的帳號和密碼
&lt;span class=&quot;nf&quot;&gt;And &lt;/span&gt;點擊登入按鈕
&lt;span class=&quot;nf&quot;&gt;Then &lt;/span&gt;系統應該成功登入
&lt;span class=&quot;nf&quot;&gt;And &lt;/span&gt;導向到首頁
&lt;span class=&quot;nf&quot;&gt;And &lt;/span&gt;顯示登入成功訊息

&lt;span class=&quot;kn&quot;&gt;Scenario&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; 登入失敗 - 錯誤的認證資訊
&lt;span class=&quot;nf&quot;&gt;Given &lt;/span&gt;使用者在登入頁面
&lt;span class=&quot;nf&quot;&gt;When &lt;/span&gt;使用者輸入錯誤的帳號或密碼
&lt;span class=&quot;nf&quot;&gt;And &lt;/span&gt;點擊登入按鈕
&lt;span class=&quot;nf&quot;&gt;Then &lt;/span&gt;系統應該顯示錯誤訊息
&lt;span class=&quot;nf&quot;&gt;And &lt;/span&gt;使用者停留在登入頁面
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;登出功能&quot;&gt;登出功能&lt;/h3&gt;

&lt;div class=&quot;language-gherkin highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;Feature&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; 使用者登出

&lt;span class=&quot;kn&quot;&gt;Scenario&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; 成功登出
&lt;span class=&quot;nf&quot;&gt;Given &lt;/span&gt;使用者已經登入系統
&lt;span class=&quot;nf&quot;&gt;When &lt;/span&gt;使用者點擊登出按鈕
&lt;span class=&quot;nf&quot;&gt;Then &lt;/span&gt;系統應該登出使用者
&lt;span class=&quot;nf&quot;&gt;And &lt;/span&gt;清除使用者的登入狀態
&lt;span class=&quot;nf&quot;&gt;And &lt;/span&gt;導向到登入頁面
&lt;span class=&quot;nf&quot;&gt;And &lt;/span&gt;顯示登出成功訊息
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;重設密碼功能&quot;&gt;重設密碼功能&lt;/h3&gt;

&lt;div class=&quot;language-gherkin highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;Feature&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; 重設密碼

&lt;span class=&quot;kn&quot;&gt;Scenario&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; 申請重設密碼
&lt;span class=&quot;nf&quot;&gt;Given &lt;/span&gt;使用者在忘記密碼頁面
&lt;span class=&quot;nf&quot;&gt;When &lt;/span&gt;使用者輸入註冊的電子郵件
&lt;span class=&quot;nf&quot;&gt;And &lt;/span&gt;點擊重設密碼按鈕
&lt;span class=&quot;nf&quot;&gt;Then &lt;/span&gt;系統應該發送重設密碼連結到該電子郵件
&lt;span class=&quot;nf&quot;&gt;And &lt;/span&gt;顯示確認訊息

&lt;span class=&quot;kn&quot;&gt;Scenario&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; 使用重設密碼連結
&lt;span class=&quot;nf&quot;&gt;Given &lt;/span&gt;使用者點擊重設密碼電子郵件中的連結
&lt;span class=&quot;nf&quot;&gt;When &lt;/span&gt;使用者輸入新密碼
&lt;span class=&quot;nf&quot;&gt;And &lt;/span&gt;確認新密碼
&lt;span class=&quot;nf&quot;&gt;And &lt;/span&gt;點擊確認按鈕
&lt;span class=&quot;nf&quot;&gt;Then &lt;/span&gt;系統應該更新使用者密碼
&lt;span class=&quot;nf&quot;&gt;And &lt;/span&gt;顯示密碼重設成功訊息
&lt;span class=&quot;nf&quot;&gt;And &lt;/span&gt;導向到登入頁面

&lt;span class=&quot;kn&quot;&gt;Scenario&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; 重設密碼失敗 - 密碼不符合規則
&lt;span class=&quot;nf&quot;&gt;Given &lt;/span&gt;使用者在重設密碼頁面
&lt;span class=&quot;nf&quot;&gt;When &lt;/span&gt;使用者輸入不符合規則的新密碼
&lt;span class=&quot;nf&quot;&gt;And &lt;/span&gt;點擊確認按鈕
&lt;span class=&quot;nf&quot;&gt;Then &lt;/span&gt;系統應該顯示密碼規則錯誤訊息
&lt;span class=&quot;nf&quot;&gt;And &lt;/span&gt;使用者停留在重設密碼頁面
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;這些 GWT 格式的需求描述涵蓋了主要的使用情境和預期結果。每個功能都包含了成功和失敗的情況，並且清楚說明了：&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;初始狀態（Given）&lt;/li&gt;
  &lt;li&gt;使用者的操作（When）&lt;/li&gt;
  &lt;li&gt;預期的系統回應（Then）&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;如果需要更詳細的情境或是其他特殊案例，我可以協助您進一步補充。&lt;/p&gt;</content><author><name>Marvin Lin</name></author><category term="programming" /><category term="Cursor" /><category term="AI" /><summary type="html">2025 年開始，我已經在開發的日常中，大量的使用 Cursor。但如果想法打開，Cursor 輸出的「文字」本來就可以超過「程式」的範圍。如果團隊中一起合作的 PM，使用 Cursor 開單，是不是開發者可以快速的跨越自然語言和程式語言的隔閤，然後快速的進入程式開發呢？首先，先從 Cursor IDE 下載開始。</summary></entry><entry xml:lang="en"><title type="html">Using Cursor for Writing GWT (Given-When-Then) Requirements in Jira for Non-Development Roles</title><link href="http://localhost:4000/en/programming/using-cursor-in-jira.md/" rel="alternate" type="text/html" title="Using Cursor for Writing GWT (Given-When-Then) Requirements in Jira for Non-Development Roles" /><published>2025-03-15T11:37:00+08:00</published><updated>2025-03-15T11:37:00+08:00</updated><id>http://localhost:4000/en/programming/using-cursor-in-jira.md</id><content type="html" xml:base="http://localhost:4000/en/programming/using-cursor-in-jira.md/">&lt;p&gt;Since 2025, I have been extensively using Cursor in my daily development work. However, if we think broadly, Cursor’s text output capabilities can extend beyond just “programming”. If Project Managers in the team use Cursor for creating tickets, could developers quickly bridge the gap between natural language and programming language, leading to faster development? Let’s start with downloading Cursor IDE.&lt;/p&gt;

&lt;h2 id=&quot;cursor-ide-download&quot;&gt;&lt;a href=&quot;https://www.cursor.com/&quot;&gt;Cursor IDE Download&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.cursor.com/&quot;&gt;&lt;img src=&quot;/assets/programming/cursor-in-jira/cursor_landing.png&quot; alt=&quot;Cursor IDE Landing Page&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;expanding-model-selection-in-cursor&quot;&gt;Expanding Model Selection in Cursor&lt;/h2&gt;

&lt;p&gt;By default, model expansion includes Claude series and ChatGPT4o-mini, cursor-small, but Gemini 2.0 or ChatGPT o1 are not enabled by default. To use other models, you need to enable them in Cursor settings.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/programming/cursor-in-jira/cursor_setting_touch.png&quot; alt=&quot;Cursor settings&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Here you can choose different models by selecting the ones you want to use. Each model has its characteristics - for example, deepseek-v3 is very fast, while deepseek-r1 or claude-sonnet 3.7 with think have thinking capabilities.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/programming/cursor-in-jira/cursor_models_choose.png&quot; alt=&quot;Cursor models choose&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;right-sidebar---start-using-ai-assistance-cmd--shift--b&quot;&gt;Right Sidebar - Start Using AI Assistance (cmd + shift + B)&lt;/h2&gt;

&lt;p&gt;In this sidebar, you can write your questions, task requirements, or ask about architecture. For project management roles, you can certainly write GWT (Given-When-Then) Jira tickets.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/programming/cursor-in-jira/cursor_right_bar.png&quot; alt=&quot;Cursor right bar&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;left-sidebar---folder-navigation-search-installed-plugins-cmd--b&quot;&gt;Left Sidebar - Folder Navigation, Search, Installed Plugins (cmd + B)&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;File Navigation (Folder Navigation)&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Displays project directory tree structure&lt;/li&gt;
  &lt;li&gt;Supports quick file/folder creation (right-click &amp;gt; New File/Folder)&lt;/li&gt;
  &lt;li&gt;Drag and drop files to move them&lt;/li&gt;
  &lt;li&gt;Shortcut: Cmd + 1 to focus on file navigation&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Global Search&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Cross-file content search (supports regex)&lt;/li&gt;
  &lt;li&gt;Filter search scope: file types/symbol types (classes/methods/properties)&lt;/li&gt;
  &lt;li&gt;Shortcut: Cmd + Shift + F&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Plugin Management&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Shows list of installed extensions&lt;/li&gt;
  &lt;li&gt;One-click access to &lt;a href=&quot;https://www.cursor.com/marketplace&quot;&gt;Cursor Marketplace&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Shortcut: Cmd + Shift + X to open extension management&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/programming/cursor-in-jira/cursor_left_bar.png&quot; alt=&quot;Cursor left bar&quot; /&gt;&lt;/p&gt;

&lt;p&gt;If you have too many installed plugins to display, they will be listed in a dropdown menu that you can expand&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/programming/cursor-in-jira/cursor_left_drop_list.png&quot; alt=&quot;Cursor left drop list&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;installing-jira-project-management-plugin---jira-atlassian&quot;&gt;Installing Jira Project Management Plugin - &lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=Atlassian.atlascode&quot;&gt;Jira Atlassian&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Working without switching windows naturally improves efficiency. In this marketplace, there’s a Jira plugin available. First select marketplace, then search for Jira, and click install. You can then start editing/modifying Jira tickets directly in VSCode or Cursor.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/programming/cursor-in-jira/cursor_jira_plug_in.png&quot; alt=&quot;Jira plug in&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;create-a-folder-to-start-writing-jira-tickets-or-any-documents&quot;&gt;Create a Folder to Start Writing Jira Tickets or Any Documents&lt;/h2&gt;
&lt;p&gt;Basic usage - use folders to manage your documents, regardless of their type. While git version control has a learning curve, non-developers can use fileName_yyyyMMdd_version for version control. This is because document writing differs from programming - documents might need multiple versions for comparison, while code only needs one version for release.&lt;/p&gt;

&lt;p&gt;First, create a folder&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/programming/cursor-in-jira/create_demo_folder.png&quot; alt=&quot;create folder image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Open Cursor and select that folder&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/programming/cursor-in-jira/open_by_cursor.png&quot; alt=&quot;choose folder by folder&quot; /&gt;&lt;/p&gt;

&lt;p&gt;You can use this icon to create files directly
&lt;img src=&quot;/assets/programming/cursor-in-jira/create_files.png&quot; alt=&quot;create files&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Now you can start writing with AI
&lt;img src=&quot;/assets/programming/cursor-in-jira/start_with_ai.png&quot; alt=&quot;Using AI create&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;explanation-of-agent-ask-and-edit-modes&quot;&gt;Explanation of Agent, Ask, and Edit Modes&lt;/h2&gt;

&lt;p&gt;Cursor allows you to select different models for your tasks.&lt;/p&gt;

&lt;p&gt;Ask: Similar to ChatGPT’s interface, it responds to your prompts and displays responses in the sidebar.&lt;/p&gt;

&lt;p&gt;Edit: AI gains the ability to modify files based on instructions. After modifications, you can Accept or Reject the changes.&lt;/p&gt;

&lt;p&gt;Agent: Can handle more abstract commands and has the ability to create new files, rename files, and control the terminal. Due to its abstract nature and increased control capabilities, when using YOLO mode, it’s recommended to monitor its responses closely. For example: you can request to translate a file into English/German/Russian/Japanese, saving each translation with different language codes. “If successful,” Agent will complete the translations and create my_text_en.txt, my_text_ge.txt, my_text_ru.txt, my_text_jp.txt.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/programming/cursor-in-jira/chat_with_diff_models.png&quot; alt=&quot;Chat with diff models&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Now you can start using AI to assist in creating Jira tickets.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Next, you can try this section to generate documents in Agent mode.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Please write the following requirements in GWT (Given-When-Then) format:
login
logout
reset password
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I’ll help you write the login, logout, and reset password requirements using the Given-When-Then format:&lt;/p&gt;

&lt;h3 id=&quot;login-function&quot;&gt;Login Function&lt;/h3&gt;

&lt;div class=&quot;language-gherkin highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;Feature&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; User Login

&lt;span class=&quot;kn&quot;&gt;Scenario&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; Successful Login
&lt;span class=&quot;nf&quot;&gt;Given &lt;/span&gt;user is on the login page
&lt;span class=&quot;nf&quot;&gt;When &lt;/span&gt;user enters correct username and password
&lt;span class=&quot;nf&quot;&gt;And &lt;/span&gt;clicks the login button
&lt;span class=&quot;nf&quot;&gt;Then &lt;/span&gt;system should successfully log in
&lt;span class=&quot;nf&quot;&gt;And &lt;/span&gt;redirect to homepage
&lt;span class=&quot;nf&quot;&gt;And &lt;/span&gt;display login success message

&lt;span class=&quot;kn&quot;&gt;Scenario&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; Login Failure - Invalid Credentials
&lt;span class=&quot;nf&quot;&gt;Given &lt;/span&gt;user is on the login page
&lt;span class=&quot;nf&quot;&gt;When &lt;/span&gt;user enters incorrect username or password
&lt;span class=&quot;nf&quot;&gt;And &lt;/span&gt;clicks the login button
&lt;span class=&quot;nf&quot;&gt;Then &lt;/span&gt;system should display error message
&lt;span class=&quot;nf&quot;&gt;And &lt;/span&gt;user remains on login page
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;logout-function&quot;&gt;Logout Function&lt;/h3&gt;

&lt;div class=&quot;language-gherkin highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;Feature&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; User Logout

&lt;span class=&quot;kn&quot;&gt;Scenario&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; Successful Logout
&lt;span class=&quot;nf&quot;&gt;Given &lt;/span&gt;user is logged into the system
&lt;span class=&quot;nf&quot;&gt;When &lt;/span&gt;user clicks the logout button
&lt;span class=&quot;nf&quot;&gt;Then &lt;/span&gt;system should log out the user
&lt;span class=&quot;nf&quot;&gt;And &lt;/span&gt;clear user&apos;s login status
&lt;span class=&quot;nf&quot;&gt;And &lt;/span&gt;redirect to login page
&lt;span class=&quot;nf&quot;&gt;And &lt;/span&gt;display logout success message
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;reset-password-function&quot;&gt;Reset Password Function&lt;/h3&gt;

&lt;div class=&quot;language-gherkin highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;Feature&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; Reset Password

&lt;span class=&quot;kn&quot;&gt;Scenario&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; Request Password Reset
&lt;span class=&quot;nf&quot;&gt;Given &lt;/span&gt;user is on the forgot password page
&lt;span class=&quot;nf&quot;&gt;When &lt;/span&gt;user enters their registered email
&lt;span class=&quot;nf&quot;&gt;And &lt;/span&gt;clicks the reset password button
&lt;span class=&quot;nf&quot;&gt;Then &lt;/span&gt;system should send a password reset link to the email
&lt;span class=&quot;nf&quot;&gt;And &lt;/span&gt;display confirmation message

&lt;span class=&quot;kn&quot;&gt;Scenario&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; Use Password Reset Link
&lt;span class=&quot;nf&quot;&gt;Given &lt;/span&gt;user clicks the reset password link from email
&lt;span class=&quot;nf&quot;&gt;When &lt;/span&gt;user enters new password
&lt;span class=&quot;nf&quot;&gt;And &lt;/span&gt;confirms new password
&lt;span class=&quot;nf&quot;&gt;And &lt;/span&gt;clicks confirm button
&lt;span class=&quot;nf&quot;&gt;Then &lt;/span&gt;system should update user&apos;s password
&lt;span class=&quot;nf&quot;&gt;And &lt;/span&gt;display password reset success message
&lt;span class=&quot;nf&quot;&gt;And &lt;/span&gt;redirect to login page

&lt;span class=&quot;kn&quot;&gt;Scenario&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; Reset Password Failure - Invalid Password Rules
&lt;span class=&quot;nf&quot;&gt;Given &lt;/span&gt;user is on the reset password page
&lt;span class=&quot;nf&quot;&gt;When &lt;/span&gt;user enters a password that doesn&apos;t meet requirements
&lt;span class=&quot;nf&quot;&gt;And &lt;/span&gt;clicks confirm button
&lt;span class=&quot;nf&quot;&gt;Then &lt;/span&gt;system should display password rule error message
&lt;span class=&quot;nf&quot;&gt;And &lt;/span&gt;user remains on reset password page
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;These GWT format requirement descriptions cover the main use cases and expected results. Each function includes both success and failure scenarios, and clearly states:&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;Initial state (Given)&lt;/li&gt;
  &lt;li&gt;User actions (When)&lt;/li&gt;
  &lt;li&gt;Expected system responses (Then)&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;If you need more detailed scenarios or other special cases, I can help you further supplement them.&lt;/p&gt;</content><author><name>Marvin Lin</name></author><category term="programming" /><category term="Cursor" /><category term="AI" /><summary type="html">Since 2025, I have been extensively using Cursor in my daily development work. However, if we think broadly, Cursor’s text output capabilities can extend beyond just “programming”. If Project Managers in the team use Cursor for creating tickets, could developers quickly bridge the gap between natural language and programming language, leading to faster development? Let’s start with downloading Cursor IDE.</summary></entry></feed>