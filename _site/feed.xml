<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.9.3">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2023-04-07T13:28:55+08:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">Marvin 的 Swift 與程式開發筆記</title><subtitle>這個 blog 是包含了的軟體開發、投資、經驗和生活故事。透過這個 blog，我希望分享自己的生活和見聞，同時也透過這個平台與讀者交流互動，建立起彼此的社群。</subtitle><author><name>Marvin Lin</name></author><entry><title type="html">開始使用 Github Copilot 服務，來讓 side project 加速</title><link href="http://localhost:4000/programming/start-using-copilot.html" rel="alternate" type="text/html" title="開始使用 Github Copilot 服務，來讓 side project 加速" /><published>2023-04-07T11:53:00+08:00</published><updated>2023-04-07T11:53:00+08:00</updated><id>http://localhost:4000/programming/start-using-copilot</id><content type="html" xml:base="http://localhost:4000/programming/start-using-copilot.html">&lt;h2 id=&quot;開始使用-copilot&quot;&gt;開始使用 Copilot&lt;/h2&gt;

&lt;p&gt;因為我主要工作是 iOS 開發，使用的 IDE 是 Xcode，目前在 Xcode 上並沒有整合 Copilot 很好的方法，所以我一直都沒有使用 Copilot。&lt;/p&gt;

&lt;p&gt;不過現在有寫幾個 projects，會需要用到 Python 和 Ruby，現在開始試用 GitHub 的 Copilot，希望這個在我不熟的領域，可以加速我開發。&lt;/p&gt;

&lt;h2 id=&quot;關於-copilot-服務&quot;&gt;關於 Copilot 服務&lt;/h2&gt;

&lt;p&gt;GitHub Copilot 是一款 AI 程式碼工具，它可以在你寫程式的時候依照內文給予你相對應的建議。 GitHub Copilot 由 OpenAI Codex AI 系統提供支持，該系統在公共互聯網文本和數十億行程式碼上進行訓練 。GitHub Copilot 可以幫助你節省開發時間，提高程式碼品質，並學習新的語言或框架。&lt;/p&gt;

&lt;p&gt;要使用 GitHub Copilot，你需要先申請試用，然後在 Visual Studio Code 中安裝 GitHub Copilot 擴充功能。你可以在任何語言或框架中使用 GitHub Copilot，但它尤其適用於 Python、JavaScript、TypeScript、Ruby、Java、Go 等主流語言。GitHub Copilot 會根據你的程式碼內容和註解，自動以灰色文本建議整行或整個函數。你可以按 Tab 接受建議，或按 Alt + \ 跳出建議。你也可以按 Ctrl + Enter 打開 GitHub Copilot 的建議視窗，查看更多的選項。&lt;/p&gt;

&lt;p&gt;GitHub Copilot 是一個強大的工具，但它不是完美的。它可能會產生不正確、不安全或不符合版權的程式碼。你應該始終審查 GitHub Copilot 的建議，並對自己寫的程式碼負責。GitHub Copilot 也不會替你做出架構或商業邏輯的決定，你還是需要理解技術的架構，並把問題拆解成簡單的步驟。&lt;/p&gt;

&lt;p&gt;Github Copilot 是一個基於人工智慧的程式碼生成工具，它可以幫助開發者快速編寫高品質的程式碼。Github Copilot 的主要特點有：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;它可以根據開發者的註釋、函數名稱、變數名稱等提示，自動生成符合邏輯和語法的程式碼片段。&lt;/li&gt;
  &lt;li&gt;它可以從開源代碼庫中學習各種程式語言和框架的用法，並適應開發者的風格和偏好。&lt;/li&gt;
  &lt;li&gt;它可以提供多個程式碼建議，讓開發者選擇最適合的一個，或者修改和組合成自己想要的程式碼。&lt;/li&gt;
  &lt;li&gt;它可以在任何編輯器或環境中使用，只需安裝 Github Copilot 擴充套件，並與 Github 帳號連接。&lt;/li&gt;
  &lt;li&gt;它是一個持續學習和改進的工具，隨著開發者的使用和回饋，它會變得更加智能和準確。&lt;/li&gt;
  &lt;li&gt;當看到灰色文本的建議時，按 Tab 接受，或按 Esc 忽略。&lt;/li&gt;
  &lt;li&gt;如果沒有看到建議，或想要更改建議，可以使用以下快捷鍵：
    &lt;ul&gt;
      &lt;li&gt;Alt + \ : 跳出建議&lt;/li&gt;
      &lt;li&gt;Alt + [ , Alt + ] : 切換不同建議&lt;/li&gt;
      &lt;li&gt;Ctrl + Enter : 打開建議視窗&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;開始使用-copilot-1&quot;&gt;開始使用 Copilot&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://docs.github.com/en/copilot/quickstart&quot;&gt;Copilot quickstart&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;在這個頁面，填進付款資訊，就可以開始使用了，如果你用的是 VSCode， Copilot 的 plugin 會聯動你的 github 帳號，接下來就可以在你的專案中，讓 copilot 來協助開發了。&lt;/p&gt;</content><author><name>Marvin Lin</name></author><category term="programming" /><category term="AI" /><category term="Copilot" /><category term="Github" /><summary type="html">開始使用 Copilot</summary></entry><entry><title type="html">Xcode 14.3 release note，使用 ChatGPT 翻譯</title><link href="http://localhost:4000/swift/xcode143-released.html" rel="alternate" type="text/html" title="Xcode 14.3 release note，使用 ChatGPT 翻譯" /><published>2023-04-05T11:22:00+08:00</published><updated>2023-04-05T11:22:00+08:00</updated><id>http://localhost:4000/swift/xcode143-released</id><content type="html" xml:base="http://localhost:4000/swift/xcode143-released.html">&lt;h2 id=&quot;對-ios-開發者可能影響較大的方面&quot;&gt;對 iOS 開發者可能影響較大的方面&lt;/h2&gt;

&lt;h3 id=&quot;停用功能---rosetta&quot;&gt;停用功能 - Rosetta&lt;/h3&gt;
&lt;p&gt;Xcode 不支援 Rosetta。有關更多信息，請參閱開發人員技術通告「解決 Apple Silicon 上的架構構建錯誤」。 (92772361)&lt;/p&gt;

&lt;h3 id=&quot;swift-的-backdeployed&quot;&gt;Swift 的 backDeployed&lt;/h3&gt;
&lt;p&gt;現在可以使用 @backDeployed(before:) 屬性來將函數的可用性擴展到介紹該函數作為 ABI 之前的 OS 版本。&lt;/p&gt;

&lt;h3 id=&quot;swift6-之後的語言改動&quot;&gt;Swift6 之後的語言改動&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;#swift6change&quot;&gt;Swift 的語言改變&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;xcode-143-release-note&quot;&gt;Xcode 14.3 release note&lt;/h2&gt;

&lt;p&gt;Xcode 14.3 包括 Swift 5.8 和 iOS 16.4、iPadOS 16.4、tvOS 16.4、watchOS 9.4 和 macOS Ventura 13.3 的 SDK。Xcode 14.3 可支援 iOS 11 及以上、tvOS 11 及以上和 watchOS 4 及以上的設備調試。Xcode 14.3 需要在運行 macOS Ventura 13.0 或更高版本的 Mac 上運行。&lt;/p&gt;

&lt;h2 id=&quot;一般&quot;&gt;一般&lt;/h2&gt;

&lt;h3 id=&quot;新功能&quot;&gt;新功能&lt;/h3&gt;

&lt;p&gt;Xcode 14.3 包括一個新的模塊驗證器，為框架模塊中的問題生成診斷信息。 (97345247)&lt;/p&gt;

&lt;p&gt;已解決問題
修復：從 App Extension 和基於擴展的 Watch App 中崩潰日誌未傳送到 Xcode 組織者的問題。此問題在 iOS 16.4、macOS 13.3、watchOS 9.4 和 tvOS 16.4 中已解決。 (90882288)&lt;/p&gt;

&lt;p&gt;修復：現在可以使用 Xcode 的文檔查看器查看 Xcode 文檔，或在 https://developer.apple.com/documentation/Xcode 上查看。 (102522035)&lt;/p&gt;

&lt;p&gt;停用功能
Xcode 不支援 Rosetta。有關更多信息，請參閱開發人員技術通告「解決 Apple Silicon 上的架構構建錯誤」。 (92772361)&lt;/p&gt;

&lt;p&gt;Apple Clang 編譯器
新功能
Clang 和構建系統支援一種新的模式用於構建模塊依賴關係，稱為顯式模塊，可以改善構建性能、可靠性和正確性。新模式是可選的，可以通過在啟用模塊的 C 和 Objective-C 項目中設置 _EXPERIMENTAL_CLANG_EXPLICIT_MODULES 作為用戶定義的構建設置來啟用。 (104438594)&lt;/p&gt;

&lt;p&gt;實現了以下 C++23 功能：&lt;/p&gt;

&lt;p&gt;多維下標運算符的新支援。 (P2128R6)&lt;/p&gt;

&lt;p&gt;放寬了在 constexpr 函數中存在非文字變量（和標籤和轉到）的限制 (P2242R3)。&lt;/p&gt;

&lt;p&gt;引入自動(x)作為語言中的衰變複制。 (P0849R8)。 (104887755)&lt;/p&gt;

&lt;p&gt;已解決問題
修復：編譯器不再對使用 &lt;img /&gt; 標記在 Objective-C 文檔註釋中包含的圖像發出錯誤警告。 (91464292)&lt;/p&gt;

&lt;p&gt;修復：在 C++ 語言模式設置為 C++20 的情況下，ObjectiveC++ 中禁用&lt;/p&gt;

&lt;h2 id=&quot;建構系統&quot;&gt;建構系統&lt;/h2&gt;

&lt;p&gt;新功能
現在 Xcode 會在執行清理操作之前提示使用者。使用者可以在執行清理時按住 option 鍵以繞過此提示，或者在提示中啟用「不要問我」設置以永久隱藏提示。(98914489)&lt;/p&gt;

&lt;p&gt;問題解決
已修正：UI 測試目標不再在構建時強制使用 SWIFT_SERIALIZE_DEBUGGING_OPTIONS 為 YES，而是尊重項目中的覆蓋該設置。(94845934)&lt;/p&gt;

&lt;p&gt;已修正：在構建部分的方案的前置操作和後置操作中運行腳本現在會在任何運行腳本退出時出現非零退出代碼，而不是報告錯誤的構建成功。(102896200)&lt;/p&gt;

&lt;p&gt;已知問題
在預覽包內的預覽在應用程式使用該包的依賴和依賴的包內預覽時可能會失敗。(103716225)&lt;/p&gt;

&lt;p&gt;解決方法：當在該包的檔案上使用 SwiftUI 預覽時，創建並選擇僅針對該包的方案。&lt;/p&gt;

&lt;p&gt;當預先構建方案操作（例如編譯包插件）遇到錯誤時，Xcode 工作區窗口頂部的狀態消息有時不會更新。這會留下先前的狀態，如果先前的狀態為“構建成功”，可能會引起混亂。(104306342)&lt;/p&gt;

&lt;p&gt;在預覽包內的預覽在應用程式使用該包的依賴和依賴的包內預覽時可能會失敗。(104683595)&lt;/p&gt;

&lt;p&gt;解決方法：當在該包的檔案上使用 SwiftUI 預覽時，創建並選擇僅針對該包的方案。&lt;/p&gt;

&lt;h2 id=&quot;c-標準庫&quot;&gt;C++ 標準庫&lt;/h2&gt;

&lt;p&gt;新功能
實現了以下新功能：&lt;/p&gt;

&lt;p&gt;P0896R4 - 唯一範圍提案&lt;/p&gt;

&lt;p&gt;P1004R2 - 使 std::vector constexpr&lt;/p&gt;

&lt;p&gt;P0627R6 - 標記無法到達的程式碼的函數&lt;/p&gt;

&lt;p&gt;P1165R1 - 使具有狀態的配置器傳播對於 operator+(basic_string) 更一致&lt;/p&gt;

&lt;p&gt;P0674R1 - 在 make_shared 和 allocate_shared 中支持數組&lt;/p&gt;

&lt;p&gt;P0980R1 - 使 std::string constexpr&lt;/p&gt;

&lt;p&gt;LWG3659 - 考慮 ATOMIC_FLAG_INIT 的取消停用&lt;/p&gt;

&lt;p&gt;P1423R3 - char8_t 的後向兼容性糾正&lt;/p&gt;

&lt;p&gt;std::pop_heap&lt;/p&gt;

&lt;p&gt;棄用項目
以下項目已被棄用：&lt;/p&gt;

&lt;p&gt;已移除 &amp;lt;experimental/filesystem&amp;gt; 標頭。請改用 &lt;filesystem&gt; 標頭。相關的 _LIBCPP_DEPRECATED_EXPERIMENTAL_FILESYSTEM 宏也已被刪除。&lt;/filesystem&gt;&lt;/p&gt;

&lt;p&gt;在 C++03 或 C++11 模式下不再支援 C++14 函數 std::quoted(const char*)。&lt;/p&gt;

&lt;p&gt;std::function 已在 C++03 中被移除。如果您正在使用它，請移除用途或升級到 C++11 或更高版本。&lt;/p&gt;

&lt;p&gt;std::unary_function 和 std::binary_function 在 C++17 和 C++20 中不再可用。它們可以通過定義 _LIBCPP_ENABLE_CXX17_REMOVED_UNARY_BINARY_FUNCTION 重新啟用。它們也在 C++11 及更高版本中標記為[[deprecated]]。要禁用廢棄警告，您必須定義 _LIBCPP_DISABLE_DEPRECATION_WARNINGS。請注意，這會禁用所有廢棄警告。&lt;/p&gt;

&lt;p&gt;std::wstring_convert 和 std::wbuffer_convert 的內容已被標記為棄用。要禁用廢棄警告，您必須定義 _LIBCPP_DISABLE_DEPRECATION_WARNINGS。請注意，這會禁用所有廢棄警告。&lt;/p&gt;

&lt;p&gt;整數分配 std::binomial_distribution、std::discrete_distribution、std::geometric_distribution、std::negative_binomial_distribution、std::poisson_distribution 和 std::uniform_int_distribution 現在遵循標準，拒絕使用除 short、int、long、long long 和它們的 unsigned 版本之外的模板參數類型。作為擴展，int8_t、__int128_t 及其 unsigned 版本也受支持。特別是，使用 bool 和 char 等非整數類型實例化這些分配不再能夠編譯。（105097623）&lt;/p&gt;

&lt;p&gt;調試
已解決問題
修復：當停在包含類方法中的 C++11 lambda 本體中時，LLDB 現在支持評估包含“this”指針成員的表達式。（50140179）&lt;/p&gt;

&lt;p&gt;修復：LLDB 現在對於先前會結束調試會話的 Swift 模塊反序列化失敗更有韌性。（64511878）&lt;/p&gt;

&lt;p&gt;文檔
新功能
Objective-C 的文檔工具鏈已遷移至開源 Clang 提取 API 工具。（101761719）&lt;/p&gt;

&lt;h2 id=&quot;driverkit&quot;&gt;DriverKit&lt;/h2&gt;

&lt;p&gt;新功能
Clang 現在會自動將未初始化的本地變數在堆疊上初始化為零，以供 DriverKit 擴展使用。(99166509)&lt;/p&gt;

&lt;h2 id=&quot;instruments&quot;&gt;Instruments&lt;/h2&gt;

&lt;p&gt;新功能
當使用 Instruments 在鎖定的目標設備上嘗試啟動應用程式時，Instruments 現在會提示使用者等待解鎖，而非顯示錯誤訊息。(41464216)&lt;/p&gt;

&lt;p&gt;xctrace export 現在支援在追蹤檔案中為進程請求二進位映像載入資訊。&lt;/p&gt;

&lt;p&gt;每個映像包括路徑、UUID、名稱、載入地址和架構。(76676504)&lt;/p&gt;

&lt;p&gt;Instruments 檢視器中的 Stores Inspector 現在允許在列出的儲存區上調用快捷選單後複製示例 xctrace export 命令。(89078433)&lt;/p&gt;

&lt;p&gt;xctrace export 現在包括在 Instruments 追蹤中記錄的回溯可解析的描述。回溯中的每個框架都包括 VM 位址和符號名稱 (如果存在)。(95850764)&lt;/p&gt;

&lt;p&gt;“檔案→符號”介面已更新，以使符號化工作流程更加流暢:&lt;/p&gt;

&lt;p&gt;更好的顯示/篩選進程和映像清單&lt;/p&gt;

&lt;p&gt;更多關於每個載入映像的資訊，包括 UUIS、版本、載入地址和載入時間。&lt;/p&gt;

&lt;p&gt;通過“添加符號”按鈕更輕鬆地重新符號化，允許一次選擇多個 dSYM。(97920704)&lt;/p&gt;

&lt;p&gt;擴展細節中的最重堆疊追蹤 UI 現在允許使用快捷選單複製符號的編碼名稱。(98017107)&lt;/p&gt;

&lt;p&gt;在 Instruments Package 中指定的 Graph 和 Detail 元素現在可以根據追蹤參數的值禁用。(101357705)&lt;/p&gt;

&lt;p&gt;最重堆疊追蹤 UI 現在有一個新的上下文選單，可以將框架顯示為載入地址和二進位偏移。(102116922)&lt;/p&gt;

&lt;p&gt;os-signpost-interval-schema 現在公開了一種將 CLIPS 變量綁定到 signpost 區間的持續時間字段並將其用作其他列定義的方法。(102447071)&lt;/p&gt;

&lt;p&gt;已解決的問題
修復: Instruments的啟動時間性能現在得到了改進。啟動應用程序應該快上3倍。(12219587)&lt;/p&gt;

&lt;p&gt;修復: 從Instruments源代碼查看器中選擇“在Xcode中打開”，現在會在現有工作區中打開所選文件。(76846286)&lt;/p&gt;

&lt;p&gt;修復: 在Instruments和Xcode之間轉換時，“在Xcode中打開”操作的源代碼查看器現在會保留行和文本範圍的選擇。(91005085)&lt;/p&gt;

&lt;p&gt;修復: 在詳細視圖中調用查找字段時，與之互動的可靠性得到了改善。(94526531)&lt;/p&gt;

&lt;p&gt;修復了在呼叫樹視圖中輸入多個篩選令牌並選擇“全部”匹配仍然會導致匹配任何指定令牌的問題。(97454950)&lt;/p&gt;

&lt;p&gt;修復了使用觸控板在呼叫樹視圖中水平滾動無法實現的問題。(97752177)&lt;/p&gt;

&lt;p&gt;修復: 當所選符號沒有可用的源代碼時，源代碼視圖現在會自動打開反汇編視圖。(99206757)&lt;/p&gt;

&lt;p&gt;修復: 將新Instruments從庫添加到現有跟踪文檔的性能已經得到顯著改進。(100873173)&lt;/p&gt;

&lt;p&gt;修復了在CPU計數器Instruments中，在蘋果硅機器上不會計算RETIRE_UOP事件的問題。(101330117)&lt;/p&gt;

&lt;h2 id=&quot;interface-builder&quot;&gt;Interface Builder&lt;/h2&gt;

&lt;p&gt;新功能
「Based On Introduced Variations」屬性面板現在會記住上次選擇的尺寸類別和變化設定。(98647372)&lt;/p&gt;

&lt;p&gt;通過屬性面板，可在UISearchBar上配置啟用屬性。(101423711)&lt;/p&gt;

&lt;p&gt;問題已解決
修復：可以在NS/UITextView的段落樣式和UILabel的屬性面板上配置斷行策略。(70369164)&lt;/p&gt;

&lt;p&gt;修復：SF Symbol庫的搜索結果已改進，包括除符號名稱以外的搜索詞。例如，搜索“寫作”還會顯示相關的“鉛筆”SF符號。(94857888)&lt;/p&gt;

&lt;p&gt;修復了在自定義類別屬性面板中，防止“在編輯器中顯示”按鈕顯示源代碼編輯器中的類別的問題。(100136260)&lt;/p&gt;

&lt;p&gt;修復了XIB只包含“User Defined Runtime Attributes”的文件無法在運行時加載的問題。(100357502)&lt;/p&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;修復：Xcodebuild支持使用“-downloadPlatform &amp;lt;watchOS&lt;/td&gt;
      &lt;td&gt;tvOS&amp;gt;”參數來請求下載單個平台。(100869261)&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;修復：在橫向模式下，安全區域的尺寸現在在畫布中的位置正確。(101164646)&lt;/p&gt;

&lt;p&gt;修復了當打開Storyboard時有時框架會移位的問題。(102221237)&lt;/p&gt;

&lt;p&gt;修復了調整NSViewController大小時無法顯示調整光標的問題。(102609072)&lt;/p&gt;

&lt;h2 id=&quot;本地化&quot;&gt;本地化&lt;/h2&gt;

&lt;p&gt;新功能
現在您可以指定Xcode專案的預設本地化。從專案編輯器的“資訊”選項卡中的語言列表中進行配置。(4886288)&lt;/p&gt;

&lt;p&gt;已解決問題
修復了一個在導出專案進行本地化時的問題，其中可能不會導出引用的專案。(91126400)&lt;/p&gt;

&lt;h2 id=&quot;playgrounds&quot;&gt;Playgrounds&lt;/h2&gt;

&lt;p&gt;已知問題
Xcode Playgrounds的手動執行模式可能失敗。(104976410)&lt;/p&gt;

&lt;h2 id=&quot;簽名和分發&quot;&gt;簽名和分發&lt;/h2&gt;

&lt;p&gt;已解決問題
修復：Xcode自動簽名現在可以為開發人員ID創建受管理的配置文件。這解決了在應用程式分發工作流程期間使用開發人員ID證書進行雲簽名時Xcode引發錯誤的問題。(90026719)&lt;/p&gt;

&lt;p&gt;已解決問題：解決了分發使用Game Center的應用程式時的問題。如有必要，Xcode自動簽名現在可以在分發期間啟用您的應用程式ID上的Game Center功能。(103426363)&lt;/p&gt;

&lt;p&gt;模擬器
已解決問題
修復：在iOS模擬器中模擬用戶手勢時，加載WebView可能會導致整個屏幕出現黑色方塊。(107143140)&lt;/p&gt;

&lt;p&gt;已知問題
重複構建和運行目標為iOS 16.1及更高版本模擬器運行時，有時可能導致啟動失敗。(101990080)&lt;/p&gt;

&lt;p&gt;解決方法：重新啟動模擬器設備，然後重新嘗試啟動。&lt;/p&gt;

&lt;h2 id=&quot;source-control&quot;&gt;Source Control&lt;/h2&gt;

&lt;p&gt;已解決問題
修復了：Xcode 的 Git 整合現在支援 mailmap。更改名稱或電子郵件地址的使用者可以在他們的存儲庫中設置 .mailmap 檔案，Xcode 現在在提交和分支歷史中顯示正確的規範名稱。 (62682973)&lt;/p&gt;

&lt;p&gt;修復了：重新添加對 perl 兼容正則表達式的 git grep 支援。 (101318680)&lt;/p&gt;

&lt;p&gt;修復了：解決了安全漏洞 CVE-2022-23521 和 CVE-2022-41903。 (102376850)&lt;/p&gt;

&lt;p&gt;已知問題
分支歷史檢視器在少數情況下可能顯示不完整的分支歷史。 (96024292)&lt;/p&gt;

&lt;p&gt;解決方法：選擇其他分支，然後再次選擇所需的分支。&lt;/p&gt;

&lt;h2 id=&quot;原始碼編輯器&quot;&gt;原始碼編輯器&lt;/h2&gt;

&lt;p&gt;新功能
Swift 的程式碼完成排名得到了改進。 (98687334)&lt;/p&gt;

&lt;h2 id=&quot;storekit&quot;&gt;StoreKit&lt;/h2&gt;

&lt;p&gt;新功能
StoreKit 測試框架現在支援測試 SKAdNetwork 4.0。 (91782868)&lt;/p&gt;

&lt;h2 id=&quot;swift&quot;&gt;Swift&lt;/h2&gt;

&lt;p&gt;新功能
現在可以使用 @backDeployed(before:) 屬性來將函數的可用性擴展到介紹該函數作為 ABI 之前的 OS 版本。&lt;/p&gt;

&lt;p&gt;例如，假設在 macOS 12 的 SDK 框架中引入了結構體 Temperature，稍後在 macOS 13 中，框架作者決定添加一個 degreesFahrenheit 屬性以方便使用：&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;@available(macOS 12, *)
public struct Temperature {
public var degreesCelsius: Double

// ...
}

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;extension Temperature {
@available(macOS 12, *)
@backDeployed(before: macOS 13)
public var degreesFahrenheit: Double {
return (degreesCelsius * 9 / 5) + 32
}
}

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;將 @backDeployed 屬性添加到 degreesFahrenheit 使得框架作者可以將此新聲明提供給最低部署目標為 macOS 12 的應用程式，即使 degreesFahrenheit 的 ABI 入口點僅存在於 macOS 13 及更高版本中。&lt;/p&gt;

&lt;p&gt;當呼叫具有 @backDeployed 的函數時，編譯器會將函數的調用包裝在 thunk 中。thunk 檢查是否在運行時可用該聲明的庫入口點，如果可用，則調用它。否則，將調用客戶端發出的函數的副本。SE-0376 (105198323)&lt;/p&gt;

&lt;p&gt;現在支援轉換模式中的Сollection downcasts。例如：&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;func collectionDowncast(_ arr: [Any]) {
switch arr {
case let ints as [Int]:
// ...
case is [Bool]:
// ...
}
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;(105198506)&lt;/p&gt;

&lt;p&gt;改進了 UnsafeMutableRawPointer、UnsafeMutableBufferPointer 和 UnsafeMutableRawBufferPointer 的 API，添加了先前缺失的初始化（和析構）方法，包括從 Collection 類型進行更高效的初始化。&lt;/p&gt;

&lt;p&gt;對於 UnsafeMutablePointer&lt;T&gt; 和 UnsafeMutableBufferPointer&lt;T&gt;，包含單詞“assign”的方法名已更名為使用單詞“update”，並添加了更多方法。現在，每個 UnsafeMutablePointer 和 UnsafeMutableBufferPointer 的多元素初始化方法都有相應的“update”方法。&lt;/T&gt;&lt;/T&gt;&lt;/p&gt;

&lt;p&gt;UnsafeBufferPointer、UnsafeRawBufferPointer、UnsafeMutableBufferPointer 和 UnsafeMutableRawBufferPointer 的切片現在共享其基類型的類似集合的 API。&lt;/p&gt;

&lt;p&gt;例如，給定已初始化的 b: UnsafeMutableBufferPointer&lt;Int&gt;，以下行是同義的：&lt;/Int&gt;&lt;/p&gt;

&lt;p&gt;b.update(repeating: 0)
b[b.startIndex..&amp;lt;b.endIndex].update(repeating: 0)
SE-0370 (105198642)&lt;/p&gt;

&lt;h3 id=&quot;隱式-self-現在允許在解開-self-之後弱引用捕獲例如以下隱式-self-用法是被允許的-&quot;&gt;隱式 self 現在允許在解開 self 之後弱引用捕獲，例如以下隱式 self 用法是被允許的 &lt;a name=&quot;swift6change&quot;&gt;&lt;/a&gt;&lt;/h3&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;class ViewController {
let button: Button

func setup() {
button.tapHandler = { [weak self] in
guard let self else { return }
dismiss() // 引用到 self.dismiss()
}
}

func dismiss() { ... }
}

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;在 Swift 5 語言模式中，即使 self 還未解開，隱式 self 也允許在非逃逸閉包中弱引用捕獲。例如，在 Swift 5 語言模式下，以下程式碼可以成功編譯：&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;class ExampleClass {
func makeArray() -&amp;gt; [String] {
// Array.map 採用非逃逸閉包：
[&quot;foo&quot;, &quot;bar&quot;, &quot;baaz&quot;].map { [weak self] string in
double(string) // 隱含地參照到 self!.double(string)
}
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;func double(_ string: String) -&amp;gt; String {
string + string
}
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;在 Swift 6 中，上述程式碼將不再編譯。非逃逸閉包中的弱引用捕獲現在具有與逃逸閉包中捕獲相同的行為（如 SE-0365 中所述）。依賴於以前行為的程式碼需要更新，以解開 self（例如通過添加 guard let self else return 語句）或使用不同的捕獲方法（例如使用 [self] 或 [unowned self] 而不是 [weak self]）。SE-0365 (105198849)&lt;/p&gt;

&lt;p&gt;現在可以使用編譯器標誌 -enable-upcoming-feature X 來啟用已被進化過程接受但其引入到語言中正在等待下一個主要版本（例如版本 6）的特定功能 X。X 是由任何屬於此類別的提案指定的：&lt;/p&gt;

&lt;p&gt;ConciseMagicFile 在 SE-0274 中啟用了新的 #file 語意。&lt;/p&gt;

&lt;p&gt;ForwardTrailingClosures 關閉了 SE-0286 的「後向」掃描行為。&lt;/p&gt;

&lt;p&gt;BareSlashRegexLiterals 啟用了 SE-0354 的正規表達式字面量語法。&lt;/p&gt;

&lt;p&gt;可以使用 #if hasFeature(X) 在原始碼中檢測特徵。SE-0362 (105198978)&lt;/p&gt;

&lt;p&gt;已解決的問題
修復了使用 Swift Concurrency 的應用程式在運行於 macOS 12.3 及更早版本、iOS 15.4 及更早版本、watchOS 8.5 及更早版本和 tvOS 15.4 及更早版本時，在 await 中暫停時偶爾會發生崩潰的問題。（101299662）&lt;/p&gt;

&lt;p&gt;修復了 Swift 編譯器可能無法為使用 BUILD_LIBRARY_FOR_DISTRIBUTION 啟用的 XCFramework 依賴項構建模組的問題。當 XCFramework 包含具有隱含添加 @MainActor 約束的公共 Swift 声明時，例如 UIView 或 NSView 的子類，將會發生這些失敗。Swift 編譯器期望這些聲明標有 @available，在支持 Swift Concurrency 的作業系統版本上可用。（105610970）&lt;/p&gt;

&lt;h2 id=&quot;swift-packages&quot;&gt;Swift Packages&lt;/h2&gt;

&lt;p&gt;新功能
當插件所需的工具在目標平台上不受支援時，現在會顯示正確的診斷信息而不是不明確的錯誤。 (91000836)&lt;/p&gt;

&lt;p&gt;現在允許有重複的產品名稱的套件。請注意，這只適用於命令行構建。 (94744134)&lt;/p&gt;

&lt;p&gt;實現了 SE-0378，為套件註冊請求添加了令牌驗證支持。 (99716571)&lt;/p&gt;

&lt;p&gt;二進制目標現在可以直接作為產品出售，而無需聲明額外的源目標。 (101096803)&lt;/p&gt;

&lt;p&gt;SwiftPM 現在支持根據 SE-0362 分步實現即將推出的 Swift 語言改進。 (104718540)&lt;/p&gt;

&lt;p&gt;已解決問題
修正：套件中的條件目標依賴（SE-0273）現在正確應用於二進制目標，並導致頂級目標從根套件構建中過濾掉。 (85762201)&lt;/p&gt;

&lt;p&gt;修正：刪除了在使用 tools-version 5.8 或更高版本的工具清單中隱含的 Foundation 可用性。如果在清單中使用 Foundation 的 API，現在需要顯式導入 Foundation。 (92879696)&lt;/p&gt;

&lt;p&gt;修正：當預建命令依賴於不是預建二進制文件的工具時，它顯示了一個不明確的錯誤信息。修復程序已添加以顯示正確的診斷信息。 (94712361)&lt;/p&gt;

&lt;p&gt;修正：當插件對不受支援的產品或目標有依賴時，現在會顯示正確的診斷信息而不是不明確的錯誤。 (95117424)&lt;/p&gt;

&lt;p&gt;修正：解決了一個錯誤，該錯誤有時會導致套件解析失敗，並出現類似以下消息：An unknown error occurred. reference ‘refs/remotes/origin/main’ not found (-1)。 (100387832)&lt;/p&gt;

&lt;p&gt;修正：當套件圖解析失敗時，Xcode 現在會顯示構建失敗，而不是讓構建開始，然後出現有關缺少構建產品的錯誤。 (101835157)&lt;/p&gt;

&lt;p&gt;修正：與套件相關的警告和錯誤現在在套件解析日誌中顯示，以適用於它們所適用的套件。 (102879707)&lt;/p&gt;

&lt;p&gt;已修正多個在使用套件時可能導致“無法解析建置檔案：XCBCore.BuildFile”建置錯誤的問題。(102912126)&lt;/p&gt;

&lt;p&gt;已知問題
當套件建置工具插件為特定的輸入檔案產生建置命令時，該檔案被視為已由插件處理，並不會傳遞到建置系統。如果該輸入檔案是源代碼文件（例如Swift或Objective-C源代碼文件），它將不會被編譯到正在建置的產品中。(102789077)&lt;/p&gt;

&lt;h2 id=&quot;swiftui-preview&quot;&gt;SwiftUI Preview&lt;/h2&gt;

&lt;h3 id=&quot;新功能-1&quot;&gt;新功能&lt;/h3&gt;

&lt;p&gt;在 SwiftUI 預覽中選擇“預覽”選項卡後，現在可以在控制台中看到 print 輸出。目前僅支持 Swift 的 print 函數。 (96569171)&lt;/p&gt;

&lt;h3 id=&quot;已解決的問題&quot;&gt;已解決的問題&lt;/h3&gt;

&lt;p&gt;修復：在預覽一個 Swift 套件目標內的檔案時，該 Swift 套件目標作為可執行目標的相依目標時，預覽可能會失敗。 (97630721)&lt;/p&gt;

&lt;p&gt;修復：當預覽兩個檔案並排顯示時，其中一個檔案位於 Swift 套件內時，Xcode 畫布中的預覽可能會失敗。 (99296071)&lt;/p&gt;

&lt;p&gt;修復：在預覽不支援預覽的目標（例如 XPC 服務或靜態庫）的相依目標中進行預覽時，預覽可能會失敗。 (99707713)&lt;/p&gt;

&lt;p&gt;修復：在 Swift 套件中使用二進制相依性時，預覽可能會失敗。 (99936678)&lt;/p&gt;

&lt;p&gt;修復：在最低部署目標為 &amp;lt;= iOS 14.0 的應用程式中使用 Swift Concurrency 時，預覽可能會失敗。 (99969698)&lt;/p&gt;

&lt;p&gt;修復：某些預覽崩潰的情況在畫布中不會顯示。 (100586176)&lt;/p&gt;

&lt;p&gt;修復：預覽在存在於 widget 目標和應用程式目標中的檔案時可能會失敗。 (101221314)&lt;/p&gt;

&lt;p&gt;修復：在另一個類型的返回類型中使用不透明類型作為泛型參數時，預覽可能會失敗。 (101832285)&lt;/p&gt;

&lt;p&gt;修復：在具有與捆綁識別符不同的應用程式識別符的應用程式中進行預覽可能會失敗。 (102753115)&lt;/p&gt;

&lt;h2 id=&quot;測試&quot;&gt;測試&lt;/h2&gt;

&lt;h3 id=&quot;新功能-2&quot;&gt;新功能&lt;/h3&gt;

&lt;p&gt;Xcode 現在預設為新專案使用測試計畫。測試計畫標記為「自動建立」，可在「測試計畫編輯器」中查看和修改。若要更改自動建立的測試計畫，使用者必須先將其存檔到磁碟上。可以在「測試計畫編輯器」中進行變更，然後透過畫面提示將檔案遷移至磁碟上的表示形式，或從「測試計畫編輯器」中明確存檔自動建立的測試計畫。(97048381)&lt;/p&gt;

&lt;p&gt;XCTestCase.wait(for:timeout:enforceOrder:) 和相關方法的 timeout 參數現在是可選的。如果未指定，該函式會無限等待（直到整個測試超時）。為確保合理的執行時間，請為正在運行的 XCTestCase 實例（self）設定適當的 executionTimeAllowance 屬性。(100811826)&lt;/p&gt;

&lt;p&gt;已解決問題
修正：若有符號資訊，async Swift 測試方法以及 async setUp 或 tearDown 方法拋出的錯誤現在會顯示它們被拋出的來源位置，並包含更高保真度的描述。(72813349)&lt;/p&gt;

&lt;p&gt;修正：如果測試計畫中啟用了測試超時，並且已向共用的 XCTestObservationCenter 註冊了測試觀察器，則觀察器的 -testCaseWillStart: 和 -testCaseDidFinish: 方法現在會計算每個測試的時間津貼。這允許控制系統防止觀察器實現這些方法時可能出現的掛起。(78408785)&lt;/p&gt;

&lt;p&gt;修正：XCTestCase.wait(for:timeout:enforceOrder:) 和相關方法現在在並行 Swift 函式中被標記為不可用，因為它們可能導致測試死鎖。代之以使用新的並行安全方法 XCTestCase.fulfillment(of:timeout:enforceOrder:)。(91453026)&lt;/p&gt;

&lt;p&gt;修正：當使用 xcodebuild build-for-testing 構建測試並使用 xcodebuild test-without-building 執行時，測試計畫的「失敗時收集診斷資訊」設置現在會生效。(93053592)&lt;/p&gt;

&lt;p&gt;修正：在較早的 setUp 或 tearDown 中使用 XCTSkip 後，記錄在稍後 setUp 或 tearDown 中出現的問題不再會將測試&lt;/p&gt;

&lt;p&gt;修正了:當在 async Swift 測試方法或 async setUp 或 tearDown 方法執行期間拋出錯誤，但在從該方法返回之前被捕獲時，XCTest 避免構建錯誤描述，因為這樣做可能是不安全的。(98847718)&lt;/p&gt;

&lt;p&gt;修正了:在 macOS 目的地上，如果目標的“在並行執行”核取方塊已選中，測試計劃中包含的具有不同調試器啟用的配置的測試目標(例如，一個配置啟用地址調試器，另一個配置啟用線&lt;/p&gt;

&lt;p&gt;已知問題
在 Xcode Cloud 中嘗試啟動 watchOS UI 測試應用程式時，測試可能會因為應用程式未載入輔助功能而失敗，並顯示錯誤訊息。(90334748)&lt;/p&gt;

&lt;p&gt;在執行、檢視效能、分析或封存動作中加入自動建立的測試計畫會導致專案檔案重新開啟時崩潰。(90378346)&lt;/p&gt;

&lt;p&gt;解決方法：刪除在 xcshareddata 目錄內被修改的方案。&lt;/p&gt;

&lt;p&gt;在執行測試並顯示覆蓋率報告後，Swift 檔案沒有顯示程式碼覆蓋率資料。(104935416)&lt;/p&gt;

&lt;p&gt;手動新增、移除測試計畫到已有自動建立的測試計畫的專案會導致測試導覽器顯示 “無測試計畫”，即使自動建立的測試計畫實際上支援該專案。(105433014)&lt;/p&gt;

&lt;p&gt;解決方法：關閉並重新開啟專案。&lt;/p&gt;

&lt;p&gt;有時候在方案中加入測試計畫會導致該測試計畫在後續專案開啟時無法顯示在方案或測試導覽器中。(105455341)&lt;/p&gt;

&lt;p&gt;解決方法：打開並關閉方案編輯器以讓 Xcode 將方案內容的更改持續到支援其的 .xcscheme 檔案。&lt;/p&gt;

&lt;h2 id=&quot;ui測試&quot;&gt;UI測試&lt;/h2&gt;

&lt;p&gt;新功能
現在您可以設置模擬位置供您的設備即時使用，或檢索先前設置的模擬位置。（18825683）&lt;/p&gt;

&lt;p&gt;您現在可以使用指定的應用程式打開URL，或告訴設備使用其默認應用程式打開URL。（21387710）&lt;/p&gt;

&lt;p&gt;您現在可以獲取或設置設備的淺色或深色外觀模式。（81016755）&lt;/p&gt;

&lt;p&gt;已解決問題
已修復：確保在UI測試期間如果使用者要求方向更改，則禁用方向鎖定。（98693525）&lt;/p&gt;

&lt;p&gt;已修復：單按鈕警告自動解除改進。（102036701）&lt;/p&gt;

&lt;h2 id=&quot;xcode-cloud&quot;&gt;Xcode Cloud&lt;/h2&gt;

&lt;p&gt;已解決的問題
修正：使用 Xcode 14.3 的 Xcode Cloud 工作流程現在可以正確地報告構建 Xcode 專案時遇到的構建警告和靜態分析問題。(99978366)&lt;/p&gt;

&lt;p&gt;已知問題
使用 Xcode 的 UI 連接 Slack 可能無法成功。(106153362)&lt;/p&gt;

&lt;p&gt;解決方法：從 Xcode Cloud 的 web UI 連接 Slack。&lt;/p&gt;

&lt;h2 id=&quot;xcode-預覽&quot;&gt;Xcode 預覽&lt;/h2&gt;

&lt;p&gt;新功能
使用 Xcode 預覽時，任何 print() 輸出都會記錄到調試控制台中。(71080261)&lt;/p&gt;</content><author><name>Marvin Lin</name></author><category term="swift" /><category term="Xcode" /><category term="Swift" /><category term="release note" /><summary type="html">對 iOS 開發者可能影響較大的方面</summary></entry><entry><title type="html">Twitter 將 icon 換成狗狗幣(Doge)了</title><link href="http://localhost:4000/programming/twitter-change-logo-to-doge.html" rel="alternate" type="text/html" title="Twitter 將 icon 換成狗狗幣(Doge)了" /><published>2023-04-04T10:04:00+08:00</published><updated>2023-04-04T10:04:00+08:00</updated><id>http://localhost:4000/programming/twitter-change-logo-to-doge</id><content type="html" xml:base="http://localhost:4000/programming/twitter-change-logo-to-doge.html">&lt;h2 id=&quot;twitter-將-icon-換成-doge&quot;&gt;Twitter 將 icon 換成 Doge&lt;/h2&gt;

&lt;p&gt;Twitter 在最近，將 icon 藍色的鳥，換成了加密貨幣 Doge 的 icon。直到現在，我在網頁上看到的 icon 還是 doge。這一舉動，讓 Doge 瞬間爆漲了 30% 左右。這也印證了所謂的「Doge 首席執行官」- Elon Musk 真的有「執行官」的能力。在買下了 Twitter 後，他在迷因界、幣圈的影響力，升級到了和收購前的 Musk 完全不同檔次啊。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/posts/twitter-change-icon/twitter-change-icon.jpeg&quot; alt=&quot;Twitter change icon&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;doge-相關資訊&quot;&gt;Doge 相關資訊&lt;/h2&gt;

&lt;h3 id=&quot;doge-瞬間爆漲的情況&quot;&gt;Doge 瞬間爆漲的情況&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/assets/posts/twitter-change-icon/doge-trend-aft-change-icon.jpeg&quot; alt=&quot;Doge 走勢爆漲&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;doge-資料&quot;&gt;Doge 資料&lt;/h3&gt;

&lt;script src=&quot;https://widgets.coingecko.com/coingecko-coin-ticker-widget.js&quot;&gt;&lt;/script&gt;

&lt;coingecko-coin-ticker-widget coin-id=&quot;dogecoin&quot; currency=&quot;usd&quot; locale=&quot;zh-tw&quot;&gt;&lt;/coingecko-coin-ticker-widget&gt;

&lt;h3 id=&quot;doge-走勢&quot;&gt;Doge 走勢&lt;/h3&gt;

&lt;script src=&quot;https://widgets.coingecko.com/coingecko-coin-price-chart-widget.js&quot;&gt;&lt;/script&gt;

&lt;coingecko-coin-price-chart-widget coin-id=&quot;dogecoin&quot; currency=&quot;usd&quot; height=&quot;300&quot; locale=&quot;zh-tw&quot;&gt;&lt;/coingecko-coin-price-chart-widget&gt;

&lt;h3 id=&quot;elon-musk-對-doge-的迷因&quot;&gt;Elon Musk 對 Doge 的迷因&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/assets/posts/twitter-change-icon/elon-change-doge.jpeg&quot; alt=&quot;elon musk 對 doge 改的 meme&quot; /&gt;&lt;/p&gt;

&lt;p&gt;這個迷因，原則他之前對於多模態 AI 的梗圖&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/posts/twitter-change-icon/elon-origin.jpeg&quot; alt=&quot;elon musk meme 原圖&quot; /&gt;&lt;/p&gt;</content><author><name>Marvin Lin</name></author><category term="programming" /><category term="Twitter" /><category term="Doge" /><category term="crypto currency" /><summary type="html">Twitter 將 icon 換成 Doge</summary></entry><entry><title type="html">Twitter 開源了推薦演算法</title><link href="http://localhost:4000/programming/twitter-algorithm.html" rel="alternate" type="text/html" title="Twitter 開源了推薦演算法" /><published>2023-04-03T00:11:00+08:00</published><updated>2023-04-03T00:11:00+08:00</updated><id>http://localhost:4000/programming/twitter-algorithm</id><content type="html" xml:base="http://localhost:4000/programming/twitter-algorithm.html">&lt;h2 id=&quot;twitter-開源了使用在-twitter-上的推薦演算法&quot;&gt;Twitter 開源了使用在 Twitter 上的推薦演算法&lt;/h2&gt;

&lt;p&gt;馬斯克實現了他在併購 Twitter 時講過的話，「要開源演算法」&lt;/p&gt;

&lt;p&gt;現在，這個 repo 已經在 github 上公開了，任何人都可以 fork 了&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/twitter/the-algorithm&quot;&gt;Twitter algorithm link&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;怎樣做你的-tweet-才會被演算法提高權重呢&quot;&gt;怎樣做你的 tweet 才會被演算法提高權重呢？&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://vocus.cc/article/6427f71ffd897800010fa4e6&quot;&gt;這篇文章有對演算法整理&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;以下有利觸及&quot;&gt;以下有利觸及&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;點擊推文愛心表示 favorite 喜歡 30X boost&lt;/li&gt;
  &lt;li&gt;轉推 retweet 20X boost&lt;/li&gt;
  &lt;li&gt;每個推文回覆只有 1X&lt;/li&gt;
  &lt;li&gt;推文有圖 2X boost&lt;/li&gt;
  &lt;li&gt;推文有影片 2X boost&lt;/li&gt;
  &lt;li&gt;在信任圈 Trusted Circle 3X&lt;/li&gt;
  &lt;li&gt;點擊進入推文，並在那停留至少2分鐘&lt;/li&gt;
  &lt;li&gt;用戶打開推文作者個人資料頁面並互動喜歡或回覆推文&lt;/li&gt;
  &lt;li&gt;回覆推文並被推文作者互動&lt;/li&gt;
  &lt;li&gt;付費藍勾，如果是你關注又有藍勾的 4X boost，沒關注的藍勾 2X boost&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;以下不利觸及&quot;&gt;以下不利觸及&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;非新聞媒體的外連連結 URL 對觸及不佳，除非有高互動，如果沒有高互動會被視為spam降觸及權重&lt;/li&gt;
  &lt;li&gt;有外連 URL 沒有文字，失敗中的失敗&lt;/li&gt;
  &lt;li&gt;如果出現大量unfollowed，你會自然被算法隱形&lt;/li&gt;
  &lt;li&gt;沒收功就罵髒話，講冒犯的話 0.1X&lt;/li&gt;
  &lt;li&gt;負面回饋：顯示較少、屏蔽、靜音、濫用和Spam舉報&lt;/li&gt;
  &lt;li&gt;用太多hashtag 0.6X&lt;/li&gt;
  &lt;li&gt;寫錯字或是創造字電腦認不出來 0.01X&lt;/li&gt;
  &lt;li&gt;推文是英文，但是UI語言不是英文 0.7X&lt;/li&gt;
  &lt;li&gt;UI語言是英文，但推文不是 0.3X&lt;/li&gt;
  &lt;li&gt;用戶語言和推文語言不同，兩者都不是英文 0.1X&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;參考連結&quot;&gt;參考連結&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://vocus.cc/article/6427f71ffd897800010fa4e6&quot;&gt;Twitter 開源推薦演算法，從中了解社群媒體推送邏輯&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://mobile.twitter.com/IEObserve&quot;&gt;Intl Econ Observe Twitter&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://mobile.twitter.com/IEObserve/status/1642148470944575488&quot;&gt;Intl Econ 的推&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;</content><author><name>Marvin Lin</name></author><category term="programming" /><category term="Twitter" /><category term="open source" /><category term="algorithm" /><summary type="html">Twitter 開源了使用在 Twitter 上的推薦演算法</summary></entry><entry><title type="html">現在 Edge 的外掛 bing chat 也可以用指令來畫圖了(限創意模式)</title><link href="http://localhost:4000/programming/bing-chat-can-creat-art.html" rel="alternate" type="text/html" title="現在 Edge 的外掛 bing chat 也可以用指令來畫圖了(限創意模式)" /><published>2023-04-02T23:09:00+08:00</published><updated>2023-04-02T23:09:00+08:00</updated><id>http://localhost:4000/programming/bing-chat-can-creat-art</id><content type="html" xml:base="http://localhost:4000/programming/bing-chat-can-creat-art.html">&lt;h2 id=&quot;bing-chat-的-更多創意-模式讓你可以使用-bing-來繪圖&quot;&gt;Bing Chat 的 &lt;strong&gt;更多創意&lt;/strong&gt; 模式，讓你可以使用 Bing 來繪圖&lt;/h2&gt;

&lt;p&gt;在前面的文章有提到&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://moonandeye.github.io/programming/2023/03/20/edge-update-embed-ai.html&quot;&gt;Edge 更新，這一版的 Edged 將 AI 功能直接放在側邊欄&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;/life/:title:output_ext&quot;&gt;Bing 釋出了 AI 繪圖工具 bing.com/create&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;而最近，我發現可以直接在 Edge 的外掛功能中，使用 Bing Chat 也能讓 AI 進行繪圖。而 Bing Chat 好處是，每次回答他都會給你三個選項，好讓使用者可以和 Bing 的聊天更容易持續下去，所以可以不斷的對 AI 進行新的繪圖指令。&lt;/p&gt;

&lt;p&gt;但使用上要注意，Bing Chat 模式中，我目前測試只有「更多富有創意」會幫你畫圖，其他模式他都只會回應「你的那個需求，要怎麼畫山來」。或是，「你的那個需求，有哪些網站有提供相關的技法」。&lt;/p&gt;

&lt;p&gt;以下是和 bing chat 的聊天截圖&lt;/p&gt;

&lt;h3 id=&quot;平衡模式---不能幫你畫圖&quot;&gt;平衡模式 - 不能幫你畫圖&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;/assets/posts/bing-create/bing-chat-balance-mode.jpeg&quot; alt=&quot;Bing chat creative mode - 不能幫你畫圖&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;創意模式---會輸出指令到-bing-create&quot;&gt;創意模式 - 會輸出指令到 bing create&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;/assets/posts/bing-create/bing-chat-creative-mode.jpeg&quot; alt=&quot;創意模式 - 會輸出指令到 bing create&quot; /&gt;&lt;/p&gt;

&lt;p&gt;但請注意，因為產圖在這個時代仍然要不短的時間，所以這個指令是會讓 bing chat 卡住的，也沒辦法在 bing create 完成後將圖案呈現。比較好的方法，是過一陣子後，再去 bing create 的網站，然後進入歷史紀錄去看圖案有沒有畫好。因為 bing create 和 edge 的帳號是有連動的，如果你在 bing create 網站上登入和 edge 一樣的帳號，你可以去看歷史紀錄。&lt;/p&gt;

&lt;h2 id=&quot;bing-create-畫出來的圖&quot;&gt;Bing Create 畫出來的圖&lt;/h2&gt;

&lt;h3 id=&quot;詠唱詞&quot;&gt;詠唱詞&lt;/h3&gt;
&lt;p&gt;a knight and a dragon fighting in a realistic style, the knight’s shield facing the dragon, showing a brave confrontation
&lt;img src=&quot;/assets/posts/bing-create/dragon-fight1.jpeg&quot; alt=&quot;dragon fight&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/posts/bing-create/dragon-fight2.jpeg&quot; alt=&quot;dragon fight&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;相關網址&quot;&gt;相關網址&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://www.bing.com/&quot;&gt;Bing chat&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://www.bing.com/create&quot;&gt;Bing create&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://www.microsoft.com/edge/download&quot;&gt;Edge 下載&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://moonandeye.github.io/programming/2023/03/20/edge-update-embed-ai.html&quot;&gt;Edge 更新，這一版的 Edged 將 AI 功能直接放在側邊欄&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;/life/:title:output_ext&quot;&gt;Bing 釋出了 AI 繪圖工具 bing.com/create&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;</content><author><name>Marvin Lin</name></author><category term="programming" /><category term="AI" /><category term="bing" /><category term="create" /><category term="art" /><category term="openAI" /><summary type="html">Bing Chat 的 更多創意 模式，讓你可以使用 Bing 來繪圖</summary></entry><entry><title type="html">美2月核心PCE增速低於預期</title><link href="http://localhost:4000/finance/pce-index-febuary.html" rel="alternate" type="text/html" title="美2月核心PCE增速低於預期" /><published>2023-04-01T00:17:00+08:00</published><updated>2023-04-01T00:17:00+08:00</updated><id>http://localhost:4000/finance/pce-index-febuary</id><content type="html" xml:base="http://localhost:4000/finance/pce-index-febuary.html">&lt;p&gt;美2月核心PCE增速低於預期&lt;/p&gt;

&lt;p&gt;美國商務部周五公布的數據顯示，2月份個人消費支出（PCE）物價指數按年增長5%，低於市場預期的5.1%和1月份修正後的5.3%。這是一項衡量美國通脹的關鍵指標，也是聯邦儲備局（Fed）制定貨幣政策時的首要參考。&lt;/p&gt;

&lt;p&gt;除去食品和能源等波動性因素，核心PCE物價指數按年增長4.6%，也低於市場預期的4.7%和1月份的4.7%。按月計算，核心PCE物價指數增長0.3%，與市場預期和1月份一致。&lt;/p&gt;

&lt;p&gt;數據公布後，美國公債收益率和美元指數均有所下跌，反映市場對美國通脹壓力有所緩和。美股主要指數則開盤上漲，投資者對Fed可能接近升息行動尾聲感到放心。&lt;/p&gt;

&lt;p&gt;分析師指出，雖然PCE物價指數仍處於高位，但已經出現放緩跡象，這與Fed的預期相符。隨著供應鏈瓶頸逐步解除和能源價格回落，通脹水平有望在今年下半年進一步回落。不過，Fed仍需密切關注通脹的持續性和穩定性，以及其對經濟和金融市場的影響。&lt;/p&gt;</content><author><name>Marvin Lin</name></author><category term="finance" /><category term="財經數據" /><category term="finance" /><category term="stock" /><category term="投資" /><summary type="html">美2月核心PCE增速低於預期</summary></entry><entry><title type="html">使用 Bing Chat 幫我發想一些 App 的 idea</title><link href="http://localhost:4000/programming/bing-chat-brain-storming.html" rel="alternate" type="text/html" title="使用 Bing Chat 幫我發想一些 App 的 idea" /><published>2023-03-31T17:24:00+08:00</published><updated>2023-03-31T17:24:00+08:00</updated><id>http://localhost:4000/programming/bing-chat-brain-storming</id><content type="html" xml:base="http://localhost:4000/programming/bing-chat-brain-storming.html">&lt;p&gt;把 Edge 升級之後，右上方會多一個 Bing Chat 的 icon，按下去後會彈出一個直接和 Bing Chat 溝通的 Widget。&lt;/p&gt;

&lt;p&gt;上方有三個頁籤，[聊天] [撰寫] [深入解析]&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/posts/edge-bing-chat/bing-tab.jpeg&quot; alt=&quot;bing edge chat&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;bing-chat-的回應&quot;&gt;Bing Chat 的回應&lt;/h2&gt;

&lt;p&gt;這是一個有趣的挑戰，我會盡力給你一些有創意的 App idea，但我不能保證它們都是可行或有市場的。以下是我想到的十個 App idea：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;一個可以讓你和陌生人共享夢境的 App，你可以在睡前選擇一個主題或情境，然後和其他選擇相同的用戶連接，並在早上分享你們的夢境。&lt;/li&gt;
  &lt;li&gt;一個可以讓你和你的寵物互動的 App，你可以用語音或圖像來傳達你的情感或指令，然後 App 會用相應的聲音或動作來回應你的寵物，讓你們更加親密。&lt;/li&gt;
  &lt;li&gt;一個可以讓你和你的偶像對話的 App，你可以選擇一個你喜歡的明星或名人，然後 App 會用人工智能來模擬他們的語音和風格，讓你感覺像是真的在和他們聊天。&lt;/li&gt;
  &lt;li&gt;一個可以讓你和你的未來自己對話的 App，你可以設定一個未來的時間點，然後 App 會用人工智能來預測你未來的狀況和心態，讓你可以向你未來的自己提問或建議。&lt;/li&gt;
  &lt;li&gt;一個可以讓你和其他用戶交換身份的 App，你可以選擇一個你想體驗的身份或角色，例如不同的國家、職業、性別等，然後 App 會隨機匹配一個符合條件的用戶，讓你們可以互相了解對方的生活- 和想法。&lt;/li&gt;
  &lt;li&gt;一個可以讓你和其他用戶共享記憶的 App，你可以選擇一個你想分享的記憶，例如童年、旅行、愛情等，然後 App 會用虛擬實境技術來重現你的記憶場景，讓其他用戶可以觀看或參與。&lt;/li&gt;
  &lt;li&gt;一個可以讓你和其他用戶共創故事的 App，你可以選擇一個故事類型或主題，例如恐怖、科幻、愛情等，然後 App 會隨機匹配一些有興趣的用戶，讓你們可以輪流添加故事情節或角色。&lt;/li&gt;
  &lt;li&gt;一個可以讓你和其他用戶共享秘密的 App，你可以選擇一個秘密類型或主題，例如罪惡、恥辱、渴望等，然後 App 會隨機匹配一些有興趣的用戶，讓你們可以互相傾訴或聆聽對方的秘密。&lt;/li&gt;
  &lt;li&gt;一個可以讓你和其他用戶共享才能的 App，你可以選擇一個才能類型或主題，例如音樂、繪畫、寫作等，然後 App 會隨機匹配一些有興趣的用戶，讓你們可以互相展示或欣賞對方的才能。&lt;/li&gt;
  &lt;li&gt;一個可以&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/posts/edge-bing-chat/bing-idea.jpeg&quot; alt=&quot;bing give me ideas&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;最後一個-idea-沒給&quot;&gt;最後一個 idea 沒給？&lt;/h2&gt;

&lt;p&gt;最後一個，因為 timeout 了，所以講到一半，當然我就補問。而 Bing Chat 也回答了，而且答的很好「還沒有想到」&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/posts/edge-bing-chat/last-idea.jpeg&quot; alt=&quot;last question&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;結論&quot;&gt;結論&lt;/h2&gt;

&lt;p&gt;把上面他所提供的 app ideas 收集起來，還是有幾個不錯，而且可以做出來玩的 App。&lt;/p&gt;

&lt;p&gt;在這個時代，當我心中沒有想法的時候，或許會大量的使用 GPT 型 AI，來進行一些發散的思考。我從「大腦喜歡這樣學」這本書中看到，發散思考的重要性。而且發散思考也是需要練習的。&lt;/p&gt;

&lt;h2 id=&quot;參考網站&quot;&gt;參考網站&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://blogs.microsoft.com/blog/2023/02/07/reinventing-search-with-a-new-ai-powered-microsoft-bing-and-edge-your-copilot-for-the-web/&quot;&gt;Microsoft blog, bing&lt;/a&gt;&lt;/p&gt;</content><author><name>Marvin Lin</name></author><category term="programming" /><category term="bing chat" /><category term="AI" /><category term="programming" /><summary type="html">把 Edge 升級之後，右上方會多一個 Bing Chat 的 icon，按下去後會彈出一個直接和 Bing Chat 溝通的 Widget。</summary></entry><entry><title type="html">FTX 向客戶發 email，裡面有你的客戶代碼以及資產</title><link href="http://localhost:4000/finance/ftx-email-announce.html" rel="alternate" type="text/html" title="FTX 向客戶發 email，裡面有你的客戶代碼以及資產" /><published>2023-03-31T15:04:00+08:00</published><updated>2023-03-31T15:04:00+08:00</updated><id>http://localhost:4000/finance/ftx-email-announce</id><content type="html" xml:base="http://localhost:4000/finance/ftx-email-announce.html">&lt;p&gt;今天，收到了 FTX 破產後，列出客戶在 FTX 的資產。如果在 FTX 破產當下還有資產在裡面的，記得確認一下有沒有收到這幫信，如果這幫信在垃圾筒或被認為是廣告信，記得把他撈出來。&lt;/p&gt;

&lt;p&gt;最下面會列出你的 Customer Code 還有資產，格式如下。&lt;/p&gt;

&lt;p&gt;Your Unique Customer Code is xxxxx
Your claim(s) were scheduled on the Schedules and Statements of FTX Trading Ltd. as:&lt;/p&gt;

&lt;p&gt;BNB[xxxxx], NFT (xxxxx)[1]
BNB[xxx], NFT (xxxxx)[1]&lt;/p&gt;

&lt;h2 id=&quot;用-chatgpt-翻譯成中文&quot;&gt;用 ChatGPT 翻譯成中文&lt;/h2&gt;

&lt;p&gt;本郵件底部附有您的獨特客戶代碼及預定索賠資訊。&lt;/p&gt;

&lt;p&gt;您收到此郵件是因為在FTX TRADING LTD.和其附屬債務人及債務人代表聯合提交的第11章破產案件中，您已被識別為截至2022年11月11日淨正帳戶餘額的客戶之一。這些案件正在美國特拉華州的聯邦破產法院進行，案件編號為22-11068，並由法院共同管理。您已被列入一個或多個債務人的清單和報告中。&lt;/p&gt;

&lt;p&gt;2023年3月14日和15日，FTX Trading Ltd.及其附屬債務人和債務人代表（統稱「債務人」）提交了其資產和負債表及財務狀況報告（「清單和報告」）。&lt;/p&gt;

&lt;p&gt;根據最終命令（I）授權債務人維護債權人合併名單，以代替提交每個債務人的單獨名冊，（II）授權債務人最終進行客戶機密信息和個人信息的隱去或保留，（III）授予相關救濟 [D.I. 545]，清單和報告中的客戶姓名和地址已被隱去。關於清單和報告中標識債務人具有非優先未擔保債權的債權人（包括截至2022年11月11日淨正帳戶餘額的客戶）的E/F清單 - 為了隱去客戶姓名和地址，債務人已通過一個獨特的客戶代碼（「獨特客戶代碼」）識別了截至2022年11月11日淨正帳戶餘額的每個客戶。您的獨特客戶代碼和您預定索賠的摘錄在本郵件底部。&lt;/p&gt;

&lt;p&gt;請注意，法院尚未設定提交債務人索賠或權益證明的最終期限。當法院設定最終期限時，所有已知債權人，包括所有在清單和報告中識別出的客戶，都將收到最終期限通知以及提交債權或權益&lt;/p&gt;

&lt;p&gt;下面會列出你的 custom code 和資產&lt;/p&gt;

&lt;p&gt;Your Unique Customer Code is xxxxx
Your claim(s) were scheduled on the Schedules and Statements of FTX Trading Ltd. as:&lt;/p&gt;

&lt;p&gt;BNB[xxxxx], NFT (xxxxx)[1]
BNB[xxx], NFT (xxxxx)[1]&lt;/p&gt;

&lt;h2 id=&quot;ftx-發過來的原文&quot;&gt;FTX 發過來的原文&lt;/h2&gt;

&lt;p&gt;YOUR UNIQUE CUSTOMER CODE(S) AND SCHEDULED CLAIM INFORMATION IS AT THE BOTTOM OF THIS EMAIL.&lt;/p&gt;

&lt;p&gt;YOU ARE RECEIVING THIS EMAIL BECAUSE YOU HAVE BEEN IDENTIFIED AS A CUSTOMER WITH A NET POSITIVE ACCOUNT BALANCE AS OF NOVEMBER 11, 2022 OF ONE OR MORE OF THE DEBTORS IN THE CHAPTER 11 CASES OF FTX TRADING LTD. AND CERTAIN OF ITS AFFILIATED DEBTORS AND DEBTORS-IN-POSSESSION PENDING IN THE UNITED STATES BANKRUPTCY COURT FOR THE DISTRICT OF DELAWARE AND JOINTLY ADMINISTERED UNDER THE CASE NUMBER 22-11068.  YOU HAVE BEEN LISTED IN ONE OR MORE OF THE DEBTORS’ SCHEDULES AND STATEMENTS.&lt;/p&gt;

&lt;p&gt;On March 14 and 15, 2023, the FTX Trading Ltd. and certain of its affiliated debtors and debtors-in-possession (collectively, the “Debtors”) filed their schedules of assets and liabilities and statements of financial affairs (the “Schedules and Statements”).&lt;/p&gt;

&lt;p&gt;Pursuant to the Final Order (I) Authorizing the Debtors to Maintain a Consolidated List of Creditors in Lieu of Submitting a Separate Matrix for Each Debtor, (II) Authorizing the Debtors to Redact or Withhold Certain Confidential Information of Customers and Personal Information of Individuals on a Final Basis and (III) Granting Certain Related Relief [D.I. 545], customer names and addresses in the Schedules and Statements are redacted.  With respect to Schedules E/F – which identify creditors of the Debtors with non-priority unsecured claims (including customers with a net positive account balance as of November 11, 2022) – in an effort to redact customer names and addresses, the Debtors have identified each customer with a net positive account balance as of November 11, 2022 by a unique customer code (a “Unique Customer Code”).  Your Unique Customer Code and an excerpt of your scheduled claim(s) are at the bottom of this email.&lt;/p&gt;

&lt;p&gt;PLEASE BE ADVISED THAT THE COURT HAS NOT YET SET A DEADLINE FOR SUBMITTING PROOFS OF CLAIMS OR INTERESTS AGAINST THE DEBTORS.  WHEN THE COURT SETS A DEADLINE, ALL KNOWN CREDITORS, INCLUDING ALL CUSTOMERS IDENTIFIED ON THE SCHEDULES AND STATEMENTS, WILL BE PROVIDED NOTICE OF THE DEADLINE AND INSTRUCTIONS ON HOW TO SUBMIT PROOFS OF CLAIM OR INTERESTS.&lt;/p&gt;

&lt;p&gt;PLEASE BE FURTHER ADVISED THAT RECEIPT OF THIS EMAIL AND A UNIQUE CUSTOMER CODE ONLY INDICATES THAT YOU HAD ONE OR MORE CLAIM(S) LISTED ON ONE OR MORE OF THE DEBTORS’ SCHEDULES AND STATEMENTS.  PROVISION OF A UNIQUE CUSTOMER CODE IS NOT AN ADMISSION BY THE DEBTORS OF THE VALIDITY OF SUCH CLAIM(S) OR A WAIVER OF ANY DEFENSES THERETO.  THE DEBTORS HEREBY INCORPORATE BY REFERENCE THE GLOBAL NOTES ATTACHED TO EACH OF THE DEBTORS’ SCHEDULES AND STATEMENTS AND RESERVE ALL RIGHTS.&lt;/p&gt;

&lt;p&gt;To view all of the Debtors’ Schedules and Statements, as well as the Global Notes, please visit https://restructuring.ra.kroll.com/FTX and navigate to the “Schedules &amp;amp; SOFA” page under “Quick Links.”  Standalone excerpts of the customer data can be found under “Customer Schedules.”&lt;/p&gt;</content><author><name>Marvin Lin</name></author><category term="finance" /><category term="FTX" /><category term="crypto coin" /><category term="加密貨幣" /><summary type="html">今天，收到了 FTX 破產後，列出客戶在 FTX 的資產。如果在 FTX 破產當下還有資產在裡面的，記得確認一下有沒有收到這幫信，如果這幫信在垃圾筒或被認為是廣告信，記得把他撈出來。</summary></entry><entry><title type="html">Michael Burry 發推 - I was wrong to say sell</title><link href="http://localhost:4000/finance/michael-burry.html" rel="alternate" type="text/html" title="Michael Burry 發推 - I was wrong to say sell" /><published>2023-03-31T13:52:00+08:00</published><updated>2023-03-31T13:52:00+08:00</updated><id>http://localhost:4000/finance/michael-burry</id><content type="html" xml:base="http://localhost:4000/finance/michael-burry.html">&lt;p&gt;&lt;img src=&quot;/assets/posts/michael-burry/wrong_to_say_sell.jpeg&quot; alt=&quot;I was wrong to say sell&quot; /&gt;&lt;/p&gt;

&lt;p&gt;電影「大賣空」主角原型 - Michael Burry，在今天(2023/03/31)發了一則推「I was wrong to say sell」。&lt;/p&gt;

&lt;p&gt;這表示未來的市場走向可能會…?&lt;/p&gt;

&lt;h2 id=&quot;大賣空-電影內容&quot;&gt;大賣空 電影內容&lt;/h2&gt;

&lt;p&gt;電影「大賣空」是一部根據真實事件改編的劇情片，講述了2008年金融危機前，一群投資者預見了美國房地產市場的崩潰，並利用信貸違約互換（credit default swap）這種金融衍生品，對抵押貸款證券（mortgage-backed security）進行大規模的賣空操作，從而獲得了巨大的利潤。電影通過四條故事線，展示了這些投資者的動機、策略、困難和成果，同時也揭露了金融體系的腐敗、貪婪和無能。電影以幽默、諷刺和直白的方式，向觀眾解釋了一些複雜的金融術語和概念，並讓觀眾思考金融危機對普通人的影響和意義。&lt;/p&gt;</content><author><name>Marvin Lin</name></author><category term="finance" /><category term="Finance" /><category term="Michael Burry" /><summary type="html"></summary></entry><entry><title type="html">WWDC2023 時間確定了! 6月6日登場</title><link href="http://localhost:4000/swift/wwdc23.html" rel="alternate" type="text/html" title="WWDC2023 時間確定了! 6月6日登場" /><published>2023-03-31T08:57:00+08:00</published><updated>2023-03-31T08:57:00+08:00</updated><id>http://localhost:4000/swift/wwdc23</id><content type="html" xml:base="http://localhost:4000/swift/wwdc23.html">&lt;h2 id=&quot;wwdc23-時間確定了-6月6日到6月10日&quot;&gt;WWDC23 時間確定了 6月6日到6月10日&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;/assets/posts/wwdc23/wwdc23.jpeg&quot; alt=&quot;WWDC 23&quot; /&gt;&lt;/p&gt;

&lt;p&gt;每年的三月底四月初，Apple 都會宣佈 WWDC 的新聞，在昨天我們看到了今年的 WWDC 新聞啦，這次的日期在 6月6日 ~ 6月10日。&lt;/p&gt;

&lt;h2 id=&quot;關於-wwdc&quot;&gt;關於 WWDC&lt;/h2&gt;

&lt;p&gt;今年的 WWDC 將於 6 月 5 日至 9 日在美國，這是蘋果公司每年一度的全球開發者大會，旨在展示其最新的軟體和技術。WWDC 是開發者和蘋果工程師交流的絕佳機會，也是了解蘋果未來發展方向的重要窗口。&lt;/p&gt;

&lt;p&gt;今年的 WWDC 預計將發佈 iOS 15、macOS 12、watchOS 8 和 tvOS 15 等系統更新，以及可能的硬體產品，如新款 MacBook Pro、AirPods 3 和 AirTags 等。此外，WWDC 也將舉辦多場主題演講、工作坊、實驗室和獎項頒發等活動，讓開發者能夠深入學習蘋果的平台和工具，並與同行和專家分享經驗和創意。&lt;/p&gt;

&lt;p&gt;由於疫情的影響，今年的 WWDC 將採用線上形式進行，所有的活動都將通過蘋果開發者應用程式和網站免費提供給全球的開發者。開發者可以在現在起至 3 月 31 日之前申請免費的 WWDC 票券，並有機會參加一對一的指導會議。此外，學生和教育工作者也可以參加 Swift 學生挑戰賽，通過創作一個 Swift Playground 的互動場景來展示自己的編程技能，並有機會贏得獨家的 WWDC 外套和徽章。&lt;/p&gt;

&lt;p&gt;WWDC 是蘋果公司與開發者社群的重要橋樑，也是推動創新和改善人們生活的強大動力。我們期待今年的 WWDC 能夠帶來更多令人驚艷的產品和服務，並讓我們更加了解蘋果公司的願景和使命。&lt;/p&gt;

&lt;h2 id=&quot;special-event&quot;&gt;Special event&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;/assets/posts/wwdc23/wwdc-special-event.jpeg&quot; alt=&quot;special event&quot; /&gt;&lt;/p&gt;

&lt;p&gt;此外，蘋果公司還將於6月5日在蘋果園區為開發者和學生舉辦一個特別的全天活動。屆時，參與者將一起觀看主題演講和國情咨文視頻，與蘋果團隊的一些成員會面，參加蘋果設計獎頒獎典禮，並享受整個晚上的活動。與我們一起親身參加活動，觀看主題演講和國情咨文視頻，與 Apple 團隊的部分成員見面，慶祝 Apple 設計獎優秀應用程式，享受到深夜的活動。&lt;/p&gt;

&lt;h2 id=&quot;student-challenge---學生挑戰&quot;&gt;Student Challenge - 學生挑戰&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;/assets/posts/wwdc23/swift-icon.jpeg&quot; alt=&quot;swift&quot; /&gt;&lt;/p&gt;

&lt;p&gt;呼喚所有有才華的學生！展示你們的創造力和對編程的熱情，有機會獲得獎項。申請截止日期為4月19日。通過提交一個關於你選擇的主題的令人難以置信的應用場景，向我們展示你對編程的熱情。獲勝者將獲得獨家的WWDC23外套、AirPods Pro、定制徽章組和一年的蘋果開發者計劃會員資格。此外，我們還將為選中的獲勝者舉辦一個特別的活動，而這些獲勝者是選擇參加這個機會的。&lt;/p&gt;

&lt;h2 id=&quot;apple-park&quot;&gt;Apple park&lt;/h2&gt;

&lt;iframe src=&quot;https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d3172.3321782432827!2d-122.008972!3d37.33464379999999!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x808fb596e9e188fd%3A0x3b0d8391510688f0!2sApple%20Park!5e0!3m2!1szh-TW!2stw!4v1680224743201!5m2!1szh-TW!2stw&quot; width=&quot;400&quot; height=&quot;300&quot; style=&quot;border:0;&quot; allowfullscreen=&quot;&quot; loading=&quot;lazy&quot; referrerpolicy=&quot;no-referrer-when-downgrade&quot;&gt;&lt;/iframe&gt;</content><author><name>Marvin Lin</name></author><category term="swift" /><category term="Swift" /><category term="WWDC" /><category term="Apple" /><category term="iOS" /><summary type="html">WWDC23 時間確定了 6月6日到6月10日</summary></entry></feed>