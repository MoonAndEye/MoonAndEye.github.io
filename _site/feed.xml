<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.9.3">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2025-07-14T17:14:12+08:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">Marv[in]sight</title><subtitle>Welcome to my blog, a vibrant space dedicated to software development, investment insights, personal experiences, and life stories. Join me as we explore a diverse array of topics. I aim to share my journey and insights, fostering a community where we can interact, learn from each other, and grow together.</subtitle><author><name>Marvin Lin</name></author><entry xml:lang="en"><title type="html">How to Paste Screen Captures to Claude Code Editor on macOS</title><link href="http://localhost:4000/en/programming/paste-capture-image-to-claude-code/" rel="alternate" type="text/html" title="How to Paste Screen Captures to Claude Code Editor on macOS" /><published>2025-07-14T16:25:00+08:00</published><updated>2025-07-14T16:25:00+08:00</updated><id>http://localhost:4000/en/programming/paste-capture-image-to-claude-code</id><content type="html" xml:base="http://localhost:4000/en/programming/paste-capture-image-to-claude-code/">&lt;p&gt;Currently, I’m extensively using Claude code for development. Claude code is a terminal-based AI coding interface that primarily works with text. So when developing, the collaboration feels like I mark files or highlight certain code sections, and Claude code in the VSCode terminal knows which code I want to discuss, and it also highlights them in the Claude code interface.&lt;/p&gt;

&lt;h2 id=&quot;cmd--ctrl--k---you-can-send-highlighted-code-from-another-file-to-claude-code&quot;&gt;Cmd + ctrl + K - You can send highlighted code from another file to Claude code&lt;/h2&gt;

&lt;p&gt;As shown in the image, you’ll see “1 line selected” in the bottom right of the terminal&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/programming/claude-code/claude-code-select-lines.png&quot; alt=&quot;claude-code-select-lines&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;what-about-images-theres-definitely-a-way-to-send-them-to-claude-code-too&quot;&gt;What about images? There’s definitely a way to send them to Claude code too&lt;/h2&gt;

&lt;p&gt;On macOS, you can use the following method to paste screen captures to Claude’s code editor:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Press ctrl + cmd + shift + 4, then select the area you want to capture.&lt;/li&gt;
  &lt;li&gt;After taking the screenshot, switch to Claude code’s editor.&lt;/li&gt;
  &lt;li&gt;Press cmd + v to paste the screenshot.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/programming/claude-code/claude-code-screen-capture.png&quot; alt=&quot;claude-code-paste-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;At this point, you’ll see the text “image” pasted into the input box. You can use this technique to have Claude make modifications based on colors/layout.&lt;/p&gt;</content><author><name>Marvin Lin</name></author><category term="programming" /><category term="Claude" /><category term="AI" /><category term="AI Agent" /><summary type="html">Currently, I’m extensively using Claude code for development. Claude code is a terminal-based AI coding interface that primarily works with text. So when developing, the collaboration feels like I mark files or highlight certain code sections, and Claude code in the VSCode terminal knows which code I want to discuss, and it also highlights them in the Claude code interface.</summary></entry><entry xml:lang="zh"><title type="html">將螢幕的截圖貼上到 Claude 的程式碼編輯器的方法，macOS 適用</title><link href="http://localhost:4000/zh/programming/paste-capture-image-to-claude-code/" rel="alternate" type="text/html" title="將螢幕的截圖貼上到 Claude 的程式碼編輯器的方法，macOS 適用" /><published>2025-07-14T16:20:00+08:00</published><updated>2025-07-14T16:20:00+08:00</updated><id>http://localhost:4000/zh/programming/paste-capture-image-to-claude-code</id><content type="html" xml:base="http://localhost:4000/zh/programming/paste-capture-image-to-claude-code/">&lt;p&gt;現在的我，已大量使用 Claude code 進行開發，Claude code 是個 terminal 型的 AI coding 界面，以文字為主。所以在開發的時候，合作起來的感覺就是，我標記檔案，或是框起某些程式碼，在 VSCode terminal 中的 claude code 會知道我現在想要討論的程碼是哪些，在執行 Calude code 的界面也會標記出來。&lt;/p&gt;

&lt;h2 id=&quot;cmd--ctrl--k---就可以把另一個檔案框起來的程式碼傳給-claude-code&quot;&gt;Cmd + ctrl + K - 就可以把另一個檔案框起來的程式碼，傳給 claude code&lt;/h2&gt;

&lt;p&gt;如圖，在 terminal 的右下方，就會看到 1 line selected&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/programming/claude-code/claude-code-select-lines.png&quot; alt=&quot;claude-code-select-lines&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;那圖案呢當然也有方法傳給-claude-code&quot;&gt;那圖案呢？當然也有方法傳給 claude code&lt;/h2&gt;

&lt;p&gt;在 macOS 上，你可以使用以下方法將螢幕截圖貼上到 Claude 的程式碼編輯器中：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;按下 ctrl + cmd + shift + 4，然後選擇你想要截圖的區域。&lt;/li&gt;
  &lt;li&gt;截圖完成後，切換到 claude code 的程式碼編輯器。&lt;/li&gt;
  &lt;li&gt;按下 cmd + v，將截圖貼上。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/programming/claude-code/claude-code-screen-capture.png&quot; alt=&quot;claude-code-paste-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;這時候，你會看到 image 的文字被貼上輸入框，你可以使用這個技巧，讓 claude 針對顏色/排版，進行修改。&lt;/p&gt;</content><author><name>Marvin Lin</name></author><category term="programming" /><category term="Claude" /><category term="AI" /><category term="AI Agent" /><summary type="html">現在的我，已大量使用 Claude code 進行開發，Claude code 是個 terminal 型的 AI coding 界面，以文字為主。所以在開發的時候，合作起來的感覺就是，我標記檔案，或是框起某些程式碼，在 VSCode terminal 中的 claude code 會知道我現在想要討論的程碼是哪些，在執行 Calude code 的界面也會標記出來。</summary></entry><entry xml:lang="en"><title type="html">Prompt to Make AI Agents Present Design First Without Implementation</title><link href="http://localhost:4000/en/programming/ai-agent-coding-prompt/" rel="alternate" type="text/html" title="Prompt to Make AI Agents Present Design First Without Implementation" /><published>2025-04-26T11:50:00+08:00</published><updated>2025-04-26T11:50:00+08:00</updated><id>http://localhost:4000/en/programming/ai-agent-coding-prompt</id><content type="html" xml:base="http://localhost:4000/en/programming/ai-agent-coding-prompt/">&lt;p&gt;This year, I’ve been heavily using AI Agents in program development. Besides general debugging, Agents also participate in my program design process. However, if I don’t specifically mention “don’t start coding, I want to review your design first,” the AI Agent will immediately start writing code. Based on my experience over the past few months, it’s rare for an AI Agent to design exactly what I want on the first try. But if I continuously review the solutions proposed by the Agent and discuss them, the AI Agent gradually gets closer to the results I’m looking for.&lt;/p&gt;

&lt;p&gt;If you’re using Cursor, you can write the rules in &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.cursor/rules/think-mode.mdc&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;If you’re using VSCode Insiders, you can press &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;cmd + shift + P&lt;/code&gt;, then choose “create prompt”, which will open up the user settings. When giving commands, pressing the “add context” shortcut will add this prompt to the context, saving you typing time.&lt;/p&gt;

&lt;h2 id=&quot;think-mode-prompt&quot;&gt;Think-mode prompt&lt;/h2&gt;

&lt;div class=&quot;language-markdown highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gh&quot;&gt;# Thinking Mode Only: Ideas and Proposals Without Implementation&lt;/span&gt;

Act as a consultant for this conversation only. Help me think through problems without implementing code.

&lt;span class=&quot;gu&quot;&gt;## Guidelines:&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;-&lt;/span&gt; Analyze the problem or request I present
&lt;span class=&quot;p&quot;&gt;-&lt;/span&gt; Explore possible implementation approaches and architectures
&lt;span class=&quot;p&quot;&gt;-&lt;/span&gt; Provide high-level solutions or design considerations
&lt;span class=&quot;p&quot;&gt;-&lt;/span&gt; Explain pros and cons of different approaches
&lt;span class=&quot;p&quot;&gt;-&lt;/span&gt; Suggest technology choices and potential concerns

&lt;span class=&quot;gu&quot;&gt;## Do NOT:&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;-&lt;/span&gt; Do not write complete implementation code
&lt;span class=&quot;p&quot;&gt;-&lt;/span&gt; Do not modify my existing code
&lt;span class=&quot;p&quot;&gt;-&lt;/span&gt; Do not provide code blocks that can be directly copied and pasted

Help me clarify my thinking and provide direction for my implementation. If I need specific code assistance later, I will explicitly request it.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name>Marvin Lin</name></author><category term="programming" /><category term="Cursor" /><category term="AI" /><category term="AI Agent" /><summary type="html">This year, I’ve been heavily using AI Agents in program development. Besides general debugging, Agents also participate in my program design process. However, if I don’t specifically mention “don’t start coding, I want to review your design first,” the AI Agent will immediately start writing code. Based on my experience over the past few months, it’s rare for an AI Agent to design exactly what I want on the first try. But if I continuously review the solutions proposed by the Agent and discuss them, the AI Agent gradually gets closer to the results I’m looking for.</summary></entry><entry xml:lang="zh"><title type="html">讓 AI Agent 不要動手，先呈現設計結果的 prompt</title><link href="http://localhost:4000/zh/programming/ai-agent-coding-prompt/" rel="alternate" type="text/html" title="讓 AI Agent 不要動手，先呈現設計結果的 prompt" /><published>2025-04-26T11:39:00+08:00</published><updated>2025-04-26T11:39:00+08:00</updated><id>http://localhost:4000/zh/programming/ai-agent-coding-prompt</id><content type="html" xml:base="http://localhost:4000/zh/programming/ai-agent-coding-prompt/">&lt;p&gt;今年開始，我大量的使用 AI Agent 在程式開發。除了一般 debug 以外，Agent 也會參與我的程式設計過程。但是，AI Agent 如果沒有特別提到「不要動手，我要先 review 你的設計」時，AI Agent 會直接開始寫程式碼。而依這幾個月的經驗，AI Agent 很難一次就設計到我想要的結果。但如果我不斷的 review Agent 提出來的方案，在討論的過程中，AI Agent 會越來越接近我想要的結果。&lt;/p&gt;

&lt;p&gt;如果你用的是 cursor，你可以把 rules 寫在 .cursor/rules/think-mode.mdc&lt;/p&gt;

&lt;p&gt;如果你是用 VSCode insiders，你可以先按 cmd + shift + P，然後選擇 create prompt，接著他就會開到 user setting 下。在下指令時，你按下 add context 的 short cut 時，就會把這段 prompt 加在 context 裡面了，可以結省你打字的時間。&lt;/p&gt;

&lt;h2 id=&quot;think-mode-prompt&quot;&gt;Think-mode prompt&lt;/h2&gt;

&lt;div class=&quot;language-markdown highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gh&quot;&gt;# Thinking Mode Only: Ideas and Proposals Without Implementation&lt;/span&gt;

Act as a consultant for this conversation only. Help me think through problems without implementing code.

&lt;span class=&quot;gu&quot;&gt;## Guidelines:&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;-&lt;/span&gt; Analyze the problem or request I present
&lt;span class=&quot;p&quot;&gt;-&lt;/span&gt; Explore possible implementation approaches and architectures
&lt;span class=&quot;p&quot;&gt;-&lt;/span&gt; Provide high-level solutions or design considerations
&lt;span class=&quot;p&quot;&gt;-&lt;/span&gt; Explain pros and cons of different approaches
&lt;span class=&quot;p&quot;&gt;-&lt;/span&gt; Suggest technology choices and potential concerns

&lt;span class=&quot;gu&quot;&gt;## Do NOT:&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;-&lt;/span&gt; Do not write complete implementation code
&lt;span class=&quot;p&quot;&gt;-&lt;/span&gt; Do not modify my existing code
&lt;span class=&quot;p&quot;&gt;-&lt;/span&gt; Do not provide code blocks that can be directly copied and pasted

Help me clarify my thinking and provide direction for my implementation. If I need specific code assistance later, I will explicitly request it.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name>Marvin Lin</name></author><category term="programming" /><category term="Cursor" /><category term="AI" /><category term="AI Agent" /><summary type="html">今年開始，我大量的使用 AI Agent 在程式開發。除了一般 debug 以外，Agent 也會參與我的程式設計過程。但是，AI Agent 如果沒有特別提到「不要動手，我要先 review 你的設計」時，AI Agent 會直接開始寫程式碼。而依這幾個月的經驗，AI Agent 很難一次就設計到我想要的結果。但如果我不斷的 review Agent 提出來的方案，在討論的過程中，AI Agent 會越來越接近我想要的結果。</summary></entry><entry xml:lang="zh"><title type="html">在非開發職能上，使用 Cursor 在 Jira 寫 GWT (Given - When - Then) 需求單</title><link href="http://localhost:4000/zh/programming/using-cursor-in-jira/" rel="alternate" type="text/html" title="在非開發職能上，使用 Cursor 在 Jira 寫 GWT (Given - When - Then) 需求單" /><published>2025-03-15T11:39:00+08:00</published><updated>2025-03-15T11:39:00+08:00</updated><id>http://localhost:4000/zh/programming/using-cursor-in-jira</id><content type="html" xml:base="http://localhost:4000/zh/programming/using-cursor-in-jira/">&lt;p&gt;2025 年開始，我已經在開發的日常中，大量的使用 Cursor。但如果想法打開，Cursor 輸出的「文字」本來就可以超過「程式」的範圍。如果團隊中一起合作的 PM，使用 Cursor 開單，是不是開發者可以快速的跨越自然語言和程式語言的隔閤，然後快速的進入程式開發呢？首先，先從 Cursor IDE 下載開始。&lt;/p&gt;

&lt;h2 id=&quot;cursor-ide-下載&quot;&gt;&lt;a href=&quot;https://www.cursor.com/&quot;&gt;Cursor IDE 下載&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.cursor.com/&quot;&gt;&lt;img src=&quot;/assets/programming/cursor-in-jira/cursor_landing.png&quot; alt=&quot;Cursor IDE Landing Page&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;cursor-model-選擇的擴充&quot;&gt;Cursor Model 選擇的擴充&lt;/h2&gt;

&lt;p&gt;Model 的擴充，預設是 claude 系和 ChatGPT4o-mini, cursor-small, 預設不會打開 Gemini 2.0 或 ChatGPT o1，所以要打開才能使用其他模型。在這邊選擇 cursor setting。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/programming/cursor-in-jira/cursor_setting_touch.png&quot; alt=&quot;Cursor settings&quot; /&gt;&lt;/p&gt;

&lt;p&gt;這邊可以選擇在使用不同的 models，只要把想使用的 models 勾選起來，就可以選擇更多的 models。每一個 model 都有特性，像是 deepseek-v3 速度就很快，但選到 deepseek-r1 或 calude-sonnet 3.7 with think 就具備思考的特性。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/programming/cursor-in-jira/cursor_models_choose.png&quot; alt=&quot;Cursor models choose&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;右側欄---開始使用-ai-開始輔助-cmd---shift--b&quot;&gt;右側欄 - 開始使用 AI 開始輔助 (cmd  + shift + B)&lt;/h2&gt;

&lt;p&gt;你可以在右邊這一欄，寫上你想要問的，要求任務，問架構，所以在管理專案的職能上，當然可以寫出 GWT (Give - When - Then) 的 jira 單&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/programming/cursor-in-jira/cursor_right_bar.png&quot; alt=&quot;Cursor right bar&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;左側欄---folder-navigation-search-裝載的外掛-cmd--b&quot;&gt;左側欄 - folder navigation, search, 裝載的外掛 (cmd + B)&lt;/h2&gt;

&lt;p&gt;檔案導覽 (Folder Navigation)**&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;顯示專案目錄樹狀結構&lt;/li&gt;
  &lt;li&gt;支援快速檔案/資料夾建立 (右鍵 &amp;gt; New File/Folder)&lt;/li&gt;
  &lt;li&gt;拖曳檔案即可移動位置&lt;/li&gt;
  &lt;li&gt;快捷鍵: Cmd + 1 聚焦檔案導覽&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;全域搜尋 (Global Search)**&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;跨檔案內容搜尋 (支援正規表示式)&lt;/li&gt;
  &lt;li&gt;過濾搜尋範圍: 檔案類型/符號類型(類別/方法/屬性)&lt;/li&gt;
  &lt;li&gt;快捷鍵: Cmd + Shift + F&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;外掛管理 (Plugin Management)**&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;顯示已安裝擴充套件列表&lt;/li&gt;
  &lt;li&gt;一鍵連結至 &lt;a href=&quot;https://www.cursor.com/marketplace&quot;&gt;Cursor Marketplace&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;快捷鍵: Cmd + Shift + X 開啟擴充管理&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/programming/cursor-in-jira/cursor_left_bar.png&quot; alt=&quot;Cursor left bar&quot; /&gt;&lt;/p&gt;

&lt;p&gt;其他你裝的外掛太多，無法顯示，都會列在後面，長度如果太長的話，要按一個下拉式選單，就可以展開&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/programming/cursor-in-jira/cursor_left_drop_list.png&quot; alt=&quot;Cursor left drop list&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;jira-專案管理外掛的安裝---jira-atlassian&quot;&gt;Jira 專案管理外掛的安裝 - &lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=Atlassian.atlascode&quot;&gt;Jira Atlassian&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;如果能不切換視窗，對工作者的效率當然是好的，在這個 marketplace 裡面，是有 Jira 的外掛套件的，先選擇 marketplace，然後打上 Jira 開始找 Jira 套件，然後選擇 install。就可以開始在 VSCode or Cursor 中開始 編輯/修改 Jira 的票了。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/programming/cursor-in-jira/cursor_jira_plug_in.png&quot; alt=&quot;Jira plug in&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;開一個-folder-開始寫-jira-ticket-或是任何你要產生的文件&quot;&gt;開一個 Folder 開始寫 Jira ticket 或是任何你要產生的文件&lt;/h2&gt;
&lt;p&gt;基本用法 - 用 folder (資料夾) 來管理你的文件，不論那是什麼文件，git 版控有學習門檻，因為 git 有學習曲線高的狀況，非開發者實際上可以用 fileName_yyyyMMdd_version 來當版本控制也可以。因為在文案的撰寫和程式不一樣，文案可能要複數時間版本比較內容，但程式只需要發佈時，就出去一份&lt;/p&gt;

&lt;p&gt;先開一個資料夾&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/programming/cursor-in-jira/create_demo_folder.png&quot; alt=&quot;create folder image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;打開 cursor ，選擇那個資料夾&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/programming/cursor-in-jira/open_by_cursor.png&quot; alt=&quot;choose folder by folder&quot; /&gt;&lt;/p&gt;

&lt;p&gt;可以用這個 icon 直接開 file
&lt;img src=&quot;/assets/programming/cursor-in-jira/create_files.png&quot; alt=&quot;create files&quot; /&gt;&lt;/p&gt;

&lt;p&gt;接下來，就可以用 AI 來寫作了
&lt;img src=&quot;/assets/programming/cursor-in-jira/start_with_ai.png&quot; alt=&quot;Using AI create&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;agent-ask-edit-mode-解釋&quot;&gt;Agent, Ask, Edit mode 解釋&lt;/h2&gt;

&lt;p&gt;Cursor 這邊可以選不同的 models 進行你的任務。&lt;/p&gt;

&lt;p&gt;Ask: 就像 ChatGPT 的那個界面一樣，他會告訴你 prompt 指示的回應，然後出現在側邊欄。&lt;/p&gt;

&lt;p&gt;Edit: 這時候 AI 具備可以修改檔案的能力，他在指令中進行檔案的修改。修改完後你如果滿意，可以按 Accept 接受修改，可以按 Reject 不接受修改&lt;/p&gt;

&lt;p&gt;Agent: 可以接受更抽象化的指令，且具備開新檔案能力/改檔案名能力/操控 terminal 能力，但因為指令抽象化 + 可操控能力變強，在搭配 YOLO mode 時，建議最好一直盯著他的 respnose，要停手都還有機會。舉例: 你可以下，將這份檔案翻譯成 英文/德文/俄文/日文，並且把每種不同的翻譯都另存一份，並加上後綴 lang_code。「如果順利」，Agent 會在翻譯完成後，直接把檔案生出來，並完成 my_text_en.txt, my_text_ge.txt, my_text_ru.txt, my_text_jp.txt 。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/programming/cursor-in-jira/chat_with_diff_models.png&quot; alt=&quot;Chat with diff models&quot; /&gt;&lt;/p&gt;

&lt;p&gt;接下來，你就可以用 AI 來輔助開 jira ticket 了。&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;試產-gwt&quot;&gt;試產 GWT&lt;/h2&gt;

&lt;p&gt;接下來，你可以試這一段，在 Agent mode 中產出文件。&lt;/p&gt;
&lt;div class=&quot;language-markdown highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;請依 Give - When - Then (GWT) 的格式，將下列需求寫成 GWT 文件。
login
logout
reset password
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;試產的結果&quot;&gt;試產的結果&lt;/h2&gt;

&lt;p&gt;我會幫你將登入、登出和重設密碼的功能需求，用 Given-When-Then 的格式撰寫：&lt;/p&gt;

&lt;h3 id=&quot;登入功能&quot;&gt;登入功能&lt;/h3&gt;

&lt;div class=&quot;language-gherkin highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;Feature&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; 使用者登入

&lt;span class=&quot;kn&quot;&gt;Scenario&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; 成功登入
&lt;span class=&quot;nf&quot;&gt;Given &lt;/span&gt;使用者在登入頁面
&lt;span class=&quot;nf&quot;&gt;When &lt;/span&gt;使用者輸入正確的帳號和密碼
&lt;span class=&quot;nf&quot;&gt;And &lt;/span&gt;點擊登入按鈕
&lt;span class=&quot;nf&quot;&gt;Then &lt;/span&gt;系統應該成功登入
&lt;span class=&quot;nf&quot;&gt;And &lt;/span&gt;導向到首頁
&lt;span class=&quot;nf&quot;&gt;And &lt;/span&gt;顯示登入成功訊息

&lt;span class=&quot;kn&quot;&gt;Scenario&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; 登入失敗 - 錯誤的認證資訊
&lt;span class=&quot;nf&quot;&gt;Given &lt;/span&gt;使用者在登入頁面
&lt;span class=&quot;nf&quot;&gt;When &lt;/span&gt;使用者輸入錯誤的帳號或密碼
&lt;span class=&quot;nf&quot;&gt;And &lt;/span&gt;點擊登入按鈕
&lt;span class=&quot;nf&quot;&gt;Then &lt;/span&gt;系統應該顯示錯誤訊息
&lt;span class=&quot;nf&quot;&gt;And &lt;/span&gt;使用者停留在登入頁面
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;登出功能&quot;&gt;登出功能&lt;/h3&gt;

&lt;div class=&quot;language-gherkin highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;Feature&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; 使用者登出

&lt;span class=&quot;kn&quot;&gt;Scenario&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; 成功登出
&lt;span class=&quot;nf&quot;&gt;Given &lt;/span&gt;使用者已經登入系統
&lt;span class=&quot;nf&quot;&gt;When &lt;/span&gt;使用者點擊登出按鈕
&lt;span class=&quot;nf&quot;&gt;Then &lt;/span&gt;系統應該登出使用者
&lt;span class=&quot;nf&quot;&gt;And &lt;/span&gt;清除使用者的登入狀態
&lt;span class=&quot;nf&quot;&gt;And &lt;/span&gt;導向到登入頁面
&lt;span class=&quot;nf&quot;&gt;And &lt;/span&gt;顯示登出成功訊息
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;重設密碼功能&quot;&gt;重設密碼功能&lt;/h3&gt;

&lt;div class=&quot;language-gherkin highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;Feature&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; 重設密碼

&lt;span class=&quot;kn&quot;&gt;Scenario&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; 申請重設密碼
&lt;span class=&quot;nf&quot;&gt;Given &lt;/span&gt;使用者在忘記密碼頁面
&lt;span class=&quot;nf&quot;&gt;When &lt;/span&gt;使用者輸入註冊的電子郵件
&lt;span class=&quot;nf&quot;&gt;And &lt;/span&gt;點擊重設密碼按鈕
&lt;span class=&quot;nf&quot;&gt;Then &lt;/span&gt;系統應該發送重設密碼連結到該電子郵件
&lt;span class=&quot;nf&quot;&gt;And &lt;/span&gt;顯示確認訊息

&lt;span class=&quot;kn&quot;&gt;Scenario&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; 使用重設密碼連結
&lt;span class=&quot;nf&quot;&gt;Given &lt;/span&gt;使用者點擊重設密碼電子郵件中的連結
&lt;span class=&quot;nf&quot;&gt;When &lt;/span&gt;使用者輸入新密碼
&lt;span class=&quot;nf&quot;&gt;And &lt;/span&gt;確認新密碼
&lt;span class=&quot;nf&quot;&gt;And &lt;/span&gt;點擊確認按鈕
&lt;span class=&quot;nf&quot;&gt;Then &lt;/span&gt;系統應該更新使用者密碼
&lt;span class=&quot;nf&quot;&gt;And &lt;/span&gt;顯示密碼重設成功訊息
&lt;span class=&quot;nf&quot;&gt;And &lt;/span&gt;導向到登入頁面

&lt;span class=&quot;kn&quot;&gt;Scenario&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; 重設密碼失敗 - 密碼不符合規則
&lt;span class=&quot;nf&quot;&gt;Given &lt;/span&gt;使用者在重設密碼頁面
&lt;span class=&quot;nf&quot;&gt;When &lt;/span&gt;使用者輸入不符合規則的新密碼
&lt;span class=&quot;nf&quot;&gt;And &lt;/span&gt;點擊確認按鈕
&lt;span class=&quot;nf&quot;&gt;Then &lt;/span&gt;系統應該顯示密碼規則錯誤訊息
&lt;span class=&quot;nf&quot;&gt;And &lt;/span&gt;使用者停留在重設密碼頁面
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;這些 GWT 格式的需求描述涵蓋了主要的使用情境和預期結果。每個功能都包含了成功和失敗的情況，並且清楚說明了：&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;初始狀態（Given）&lt;/li&gt;
  &lt;li&gt;使用者的操作（When）&lt;/li&gt;
  &lt;li&gt;預期的系統回應（Then）&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;如果需要更詳細的情境或是其他特殊案例，我可以協助您進一步補充。&lt;/p&gt;</content><author><name>Marvin Lin</name></author><category term="programming" /><category term="Cursor" /><category term="AI" /><summary type="html">2025 年開始，我已經在開發的日常中，大量的使用 Cursor。但如果想法打開，Cursor 輸出的「文字」本來就可以超過「程式」的範圍。如果團隊中一起合作的 PM，使用 Cursor 開單，是不是開發者可以快速的跨越自然語言和程式語言的隔閤，然後快速的進入程式開發呢？首先，先從 Cursor IDE 下載開始。</summary></entry><entry xml:lang="en"><title type="html">Using Cursor for Writing GWT (Given-When-Then) Requirements in Jira for Non-Development Roles</title><link href="http://localhost:4000/en/programming/using-cursor-in-jira.md/" rel="alternate" type="text/html" title="Using Cursor for Writing GWT (Given-When-Then) Requirements in Jira for Non-Development Roles" /><published>2025-03-15T11:37:00+08:00</published><updated>2025-03-15T11:37:00+08:00</updated><id>http://localhost:4000/en/programming/using-cursor-in-jira.md</id><content type="html" xml:base="http://localhost:4000/en/programming/using-cursor-in-jira.md/">&lt;p&gt;Since 2025, I have been extensively using Cursor in my daily development work. However, if we think broadly, Cursor’s text output capabilities can extend beyond just “programming”. If Project Managers in the team use Cursor for creating tickets, could developers quickly bridge the gap between natural language and programming language, leading to faster development? Let’s start with downloading Cursor IDE.&lt;/p&gt;

&lt;h2 id=&quot;cursor-ide-download&quot;&gt;&lt;a href=&quot;https://www.cursor.com/&quot;&gt;Cursor IDE Download&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.cursor.com/&quot;&gt;&lt;img src=&quot;/assets/programming/cursor-in-jira/cursor_landing.png&quot; alt=&quot;Cursor IDE Landing Page&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;expanding-model-selection-in-cursor&quot;&gt;Expanding Model Selection in Cursor&lt;/h2&gt;

&lt;p&gt;By default, model expansion includes Claude series and ChatGPT4o-mini, cursor-small, but Gemini 2.0 or ChatGPT o1 are not enabled by default. To use other models, you need to enable them in Cursor settings.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/programming/cursor-in-jira/cursor_setting_touch.png&quot; alt=&quot;Cursor settings&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Here you can choose different models by selecting the ones you want to use. Each model has its characteristics - for example, deepseek-v3 is very fast, while deepseek-r1 or claude-sonnet 3.7 with think have thinking capabilities.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/programming/cursor-in-jira/cursor_models_choose.png&quot; alt=&quot;Cursor models choose&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;right-sidebar---start-using-ai-assistance-cmd--shift--b&quot;&gt;Right Sidebar - Start Using AI Assistance (cmd + shift + B)&lt;/h2&gt;

&lt;p&gt;In this sidebar, you can write your questions, task requirements, or ask about architecture. For project management roles, you can certainly write GWT (Given-When-Then) Jira tickets.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/programming/cursor-in-jira/cursor_right_bar.png&quot; alt=&quot;Cursor right bar&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;left-sidebar---folder-navigation-search-installed-plugins-cmd--b&quot;&gt;Left Sidebar - Folder Navigation, Search, Installed Plugins (cmd + B)&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;File Navigation (Folder Navigation)&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Displays project directory tree structure&lt;/li&gt;
  &lt;li&gt;Supports quick file/folder creation (right-click &amp;gt; New File/Folder)&lt;/li&gt;
  &lt;li&gt;Drag and drop files to move them&lt;/li&gt;
  &lt;li&gt;Shortcut: Cmd + 1 to focus on file navigation&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Global Search&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Cross-file content search (supports regex)&lt;/li&gt;
  &lt;li&gt;Filter search scope: file types/symbol types (classes/methods/properties)&lt;/li&gt;
  &lt;li&gt;Shortcut: Cmd + Shift + F&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Plugin Management&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Shows list of installed extensions&lt;/li&gt;
  &lt;li&gt;One-click access to &lt;a href=&quot;https://www.cursor.com/marketplace&quot;&gt;Cursor Marketplace&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Shortcut: Cmd + Shift + X to open extension management&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/programming/cursor-in-jira/cursor_left_bar.png&quot; alt=&quot;Cursor left bar&quot; /&gt;&lt;/p&gt;

&lt;p&gt;If you have too many installed plugins to display, they will be listed in a dropdown menu that you can expand&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/programming/cursor-in-jira/cursor_left_drop_list.png&quot; alt=&quot;Cursor left drop list&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;installing-jira-project-management-plugin---jira-atlassian&quot;&gt;Installing Jira Project Management Plugin - &lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=Atlassian.atlascode&quot;&gt;Jira Atlassian&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Working without switching windows naturally improves efficiency. In this marketplace, there’s a Jira plugin available. First select marketplace, then search for Jira, and click install. You can then start editing/modifying Jira tickets directly in VSCode or Cursor.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/programming/cursor-in-jira/cursor_jira_plug_in.png&quot; alt=&quot;Jira plug in&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;create-a-folder-to-start-writing-jira-tickets-or-any-documents&quot;&gt;Create a Folder to Start Writing Jira Tickets or Any Documents&lt;/h2&gt;
&lt;p&gt;Basic usage - use folders to manage your documents, regardless of their type. While git version control has a learning curve, non-developers can use fileName_yyyyMMdd_version for version control. This is because document writing differs from programming - documents might need multiple versions for comparison, while code only needs one version for release.&lt;/p&gt;

&lt;p&gt;First, create a folder&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/programming/cursor-in-jira/create_demo_folder.png&quot; alt=&quot;create folder image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Open Cursor and select that folder&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/programming/cursor-in-jira/open_by_cursor.png&quot; alt=&quot;choose folder by folder&quot; /&gt;&lt;/p&gt;

&lt;p&gt;You can use this icon to create files directly
&lt;img src=&quot;/assets/programming/cursor-in-jira/create_files.png&quot; alt=&quot;create files&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Now you can start writing with AI
&lt;img src=&quot;/assets/programming/cursor-in-jira/start_with_ai.png&quot; alt=&quot;Using AI create&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;explanation-of-agent-ask-and-edit-modes&quot;&gt;Explanation of Agent, Ask, and Edit Modes&lt;/h2&gt;

&lt;p&gt;Cursor allows you to select different models for your tasks.&lt;/p&gt;

&lt;p&gt;Ask: Similar to ChatGPT’s interface, it responds to your prompts and displays responses in the sidebar.&lt;/p&gt;

&lt;p&gt;Edit: AI gains the ability to modify files based on instructions. After modifications, you can Accept or Reject the changes.&lt;/p&gt;

&lt;p&gt;Agent: Can handle more abstract commands and has the ability to create new files, rename files, and control the terminal. Due to its abstract nature and increased control capabilities, when using YOLO mode, it’s recommended to monitor its responses closely. For example: you can request to translate a file into English/German/Russian/Japanese, saving each translation with different language codes. “If successful,” Agent will complete the translations and create my_text_en.txt, my_text_ge.txt, my_text_ru.txt, my_text_jp.txt.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/programming/cursor-in-jira/chat_with_diff_models.png&quot; alt=&quot;Chat with diff models&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Now you can start using AI to assist in creating Jira tickets.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Next, you can try this section to generate documents in Agent mode.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Please write the following requirements in GWT (Given-When-Then) format:
login
logout
reset password
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I’ll help you write the login, logout, and reset password requirements using the Given-When-Then format:&lt;/p&gt;

&lt;h3 id=&quot;login-function&quot;&gt;Login Function&lt;/h3&gt;

&lt;div class=&quot;language-gherkin highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;Feature&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; User Login

&lt;span class=&quot;kn&quot;&gt;Scenario&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; Successful Login
&lt;span class=&quot;nf&quot;&gt;Given &lt;/span&gt;user is on the login page
&lt;span class=&quot;nf&quot;&gt;When &lt;/span&gt;user enters correct username and password
&lt;span class=&quot;nf&quot;&gt;And &lt;/span&gt;clicks the login button
&lt;span class=&quot;nf&quot;&gt;Then &lt;/span&gt;system should successfully log in
&lt;span class=&quot;nf&quot;&gt;And &lt;/span&gt;redirect to homepage
&lt;span class=&quot;nf&quot;&gt;And &lt;/span&gt;display login success message

&lt;span class=&quot;kn&quot;&gt;Scenario&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; Login Failure - Invalid Credentials
&lt;span class=&quot;nf&quot;&gt;Given &lt;/span&gt;user is on the login page
&lt;span class=&quot;nf&quot;&gt;When &lt;/span&gt;user enters incorrect username or password
&lt;span class=&quot;nf&quot;&gt;And &lt;/span&gt;clicks the login button
&lt;span class=&quot;nf&quot;&gt;Then &lt;/span&gt;system should display error message
&lt;span class=&quot;nf&quot;&gt;And &lt;/span&gt;user remains on login page
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;logout-function&quot;&gt;Logout Function&lt;/h3&gt;

&lt;div class=&quot;language-gherkin highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;Feature&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; User Logout

&lt;span class=&quot;kn&quot;&gt;Scenario&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; Successful Logout
&lt;span class=&quot;nf&quot;&gt;Given &lt;/span&gt;user is logged into the system
&lt;span class=&quot;nf&quot;&gt;When &lt;/span&gt;user clicks the logout button
&lt;span class=&quot;nf&quot;&gt;Then &lt;/span&gt;system should log out the user
&lt;span class=&quot;nf&quot;&gt;And &lt;/span&gt;clear user&apos;s login status
&lt;span class=&quot;nf&quot;&gt;And &lt;/span&gt;redirect to login page
&lt;span class=&quot;nf&quot;&gt;And &lt;/span&gt;display logout success message
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;reset-password-function&quot;&gt;Reset Password Function&lt;/h3&gt;

&lt;div class=&quot;language-gherkin highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;Feature&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; Reset Password

&lt;span class=&quot;kn&quot;&gt;Scenario&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; Request Password Reset
&lt;span class=&quot;nf&quot;&gt;Given &lt;/span&gt;user is on the forgot password page
&lt;span class=&quot;nf&quot;&gt;When &lt;/span&gt;user enters their registered email
&lt;span class=&quot;nf&quot;&gt;And &lt;/span&gt;clicks the reset password button
&lt;span class=&quot;nf&quot;&gt;Then &lt;/span&gt;system should send a password reset link to the email
&lt;span class=&quot;nf&quot;&gt;And &lt;/span&gt;display confirmation message

&lt;span class=&quot;kn&quot;&gt;Scenario&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; Use Password Reset Link
&lt;span class=&quot;nf&quot;&gt;Given &lt;/span&gt;user clicks the reset password link from email
&lt;span class=&quot;nf&quot;&gt;When &lt;/span&gt;user enters new password
&lt;span class=&quot;nf&quot;&gt;And &lt;/span&gt;confirms new password
&lt;span class=&quot;nf&quot;&gt;And &lt;/span&gt;clicks confirm button
&lt;span class=&quot;nf&quot;&gt;Then &lt;/span&gt;system should update user&apos;s password
&lt;span class=&quot;nf&quot;&gt;And &lt;/span&gt;display password reset success message
&lt;span class=&quot;nf&quot;&gt;And &lt;/span&gt;redirect to login page

&lt;span class=&quot;kn&quot;&gt;Scenario&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; Reset Password Failure - Invalid Password Rules
&lt;span class=&quot;nf&quot;&gt;Given &lt;/span&gt;user is on the reset password page
&lt;span class=&quot;nf&quot;&gt;When &lt;/span&gt;user enters a password that doesn&apos;t meet requirements
&lt;span class=&quot;nf&quot;&gt;And &lt;/span&gt;clicks confirm button
&lt;span class=&quot;nf&quot;&gt;Then &lt;/span&gt;system should display password rule error message
&lt;span class=&quot;nf&quot;&gt;And &lt;/span&gt;user remains on reset password page
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;These GWT format requirement descriptions cover the main use cases and expected results. Each function includes both success and failure scenarios, and clearly states:&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;Initial state (Given)&lt;/li&gt;
  &lt;li&gt;User actions (When)&lt;/li&gt;
  &lt;li&gt;Expected system responses (Then)&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;If you need more detailed scenarios or other special cases, I can help you further supplement them.&lt;/p&gt;</content><author><name>Marvin Lin</name></author><category term="programming" /><category term="Cursor" /><category term="AI" /><summary type="html">Since 2025, I have been extensively using Cursor in my daily development work. However, if we think broadly, Cursor’s text output capabilities can extend beyond just “programming”. If Project Managers in the team use Cursor for creating tickets, could developers quickly bridge the gap between natural language and programming language, leading to faster development? Let’s start with downloading Cursor IDE.</summary></entry><entry xml:lang="zh"><title type="html">在 iOS 開發上，現在使用的 cursorrules (2025.Mar.10th)</title><link href="http://localhost:4000/zh/swift/swift-cursorrules/" rel="alternate" type="text/html" title="在 iOS 開發上，現在使用的 cursorrules (2025.Mar.10th)" /><published>2025-03-10T15:28:00+08:00</published><updated>2025-03-10T15:28:00+08:00</updated><id>http://localhost:4000/zh/swift/swift-cursorrules</id><content type="html" xml:base="http://localhost:4000/zh/swift/swift-cursorrules/">&lt;p&gt;在 Cursor 有 Agent 模式後，我已經大量的在使用 cursorrules 開發。當然現在開發可以下各種 prompt 進行，也還沒架出 MCP server。但先從 cursorrules 開始。現在網路上不錯 awesome cursorrules.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/PatrickJS/awesome-cursorrules&quot;&gt;Awesome CursorRules&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/PatrickJS/awesome-cursorrules/blob/main/rules/swiftui-guidelines-cursorrules-prompt-file/.cursorrules&quot;&gt;SwiftUI CursorRules&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;但是現在的-repo-沒有-ios-uikit-的-cursorrules這邊先試寫一本&quot;&gt;但是，現在的 repo 沒有 iOS UIKit 的 cursorrules，這邊先試寫一本&lt;/h3&gt;
&lt;p&gt;我已經提交了 PR 給 repo 的擁有者，這邊可以看後續的狀況，等到 PR 合併了，那就會有 iOS UIKit 的 cursorrules。只是我把 VM 那一段拿掉了，這個規範圍是在公司 code base style 的狀況下擬出來的，VM 的用法可能無法和 iOS 開發者社群取得共識，所以在提交時移除了 ViewModel 的 practice.&lt;/p&gt;

&lt;h4 id=&quot;ios---uikit-cursorrules&quot;&gt;iOS - UIKit cursorrules&lt;/h4&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;// Start of Selection

you are an expert in coding with swift, iOS, UIKit. you always write maintainable code and clean code.
focus on latest documentation and features.
your descriptions should be short and concise.
don&apos;t remove any comments.


UIKit UI Design Principles:
1. Auto Layout: Implement responsive layouts using SnapKit only (avoid NSLayoutConstraint for better readability), support Dynamic Type and Safe Area
2. Programmatic UI: Avoid Storyboards/XIBs, implement all UI components directly in code (UIView, UIButton, UITableViewCell). Use view composition and custom view subclasses for reusability
3. UI Components must not directly access models or DTOs. Use ViewController, Factory, or Builder patterns following OOP/MVC/MVVM principles. Below are good and bad practice examples:

good practice:
```swift
let user = User(name: &quot;Alice&quot;, email: &quot;john@example.com&quot;)
let factory = UserFactory()
/// This way UserView doesn&apos;t access User model directly, following Apple&apos;s MVC principles
let userView = factory.createUserView(user: user)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;bad practice:&lt;/p&gt;
&lt;div class=&quot;language-swift highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;user&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;User&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Alice&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;email&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;john@example.com&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;/// This exposes UserView to User model, violating MVC principles&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;userView&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;UserView&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;ol&gt;
  &lt;li&gt;Every UIViewController should have a corresponding ViewModel that handles all UI-related logic. Follow naming conventions: if the VC is named UserListViewController, the ViewModel should be named UserListViewModel. Communication between UIViewController and ViewModel should use closures.&lt;/li&gt;
&lt;/ol&gt;

&lt;div class=&quot;language-swift highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;UserListViewModel&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;users&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;User&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;didFetchUsers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)?&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;fetchUsers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;// fetch users from network&lt;/span&gt;
        &lt;span class=&quot;nf&quot;&gt;didFetchUsers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;?()&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;UserListViewController&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;UIViewController&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;lazy&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;viewModel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;UserListViewModel&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;viewModel&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;UserListViewModel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;viewModel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;didFetchUsers&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;weak&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;guard&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;self&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;tableView&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;reloadData&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;viewModel&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}()&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;tableView&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;UITableView&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ol&gt;
  &lt;li&gt;UI components should pass events using closures, and the closure must pass ‘self’ as a parameter to allow external objects to identify the source component&lt;/li&gt;
&lt;/ol&gt;

&lt;div class=&quot;language-swift highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;SampleView&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;UIView&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;didTapButton&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;SampleView&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)?&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;button&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;UIButton&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;override&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;init&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;frame&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;CGRect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;super&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;init&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;frame&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;frame&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;nf&quot;&gt;setupUI&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;button&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addTarget&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;action&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;#selector(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;buttonTapped&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;touchUpInside&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;setupUI&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;// setup UI&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;@objc&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;buttonTapped&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nf&quot;&gt;didTapButton&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;?(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;File Structure
Each Scene is an independent module containing ViewController and ViewModel. UITableViewCell should be placed under UI/Elements. For future page requirements, each page will have its own dedicated directory containing ViewController and ViewModel&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Project
├── UI
│   ├── MainTabBar
│   │   ├── ViewControllers
│   │   ├── ViewModels
│   │   └── Views
│   ├── Scenes
│   │   ├── ArticleFeed
│   │   │   ├── ViewController
│   │   │   ├── ViewModel
│   │   │   
│   │   │   
│   │   └── UserProfile
│   │       ├── ViewController
│   │       ├── ViewModel
│   │       
│   │       
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name>Marvin Lin</name></author><category term="swift" /><category term="Cursor" /><category term="AI" /><category term="Swift" /><summary type="html">在 Cursor 有 Agent 模式後，我已經大量的在使用 cursorrules 開發。當然現在開發可以下各種 prompt 進行，也還沒架出 MCP server。但先從 cursorrules 開始。現在網路上不錯 awesome cursorrules.</summary></entry><entry xml:lang="en"><title type="html">Current Usage of cursorrules in iOS Development (2025.Mar.10th)</title><link href="http://localhost:4000/en/swift/swift-cursorrules-en/" rel="alternate" type="text/html" title="Current Usage of cursorrules in iOS Development (2025.Mar.10th)" /><published>2025-03-10T15:27:00+08:00</published><updated>2025-03-10T15:27:00+08:00</updated><id>http://localhost:4000/en/swift/swift-cursorrules-en</id><content type="html" xml:base="http://localhost:4000/en/swift/swift-cursorrules-en/">&lt;p&gt;Since Cursor introduced the Agent mode, I have been extensively using cursorrules for development. Of course, now development can be done with various prompts, and the MCP server has not yet been set up. But let’s start with cursorrules first. Currently, there are some great awesome cursorrules available online.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/PatrickJS/awesome-cursorrules&quot;&gt;Awesome CursorRules&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/PatrickJS/awesome-cursorrules/blob/main/rules/swiftui-guidelines-cursorrules-prompt-file/.cursorrules&quot;&gt;SwiftUI CursorRules&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;however-there-are-no-ios-uikit-cursorrules-in-the-current-repository-so-i-am-drafting-one-here&quot;&gt;However, there are no iOS UIKit cursorrules in the current repository, so I am drafting one here&lt;/h3&gt;
&lt;p&gt;I have submitted a PR to the repository owner, and we can observe the progress. Once the PR is merged, there will be iOS UIKit cursorrules available. However, I have removed the VM section from it. This guideline was formulated based on our company’s codebase style, and the use of ViewModel may not reach a consensus with the wider iOS developer community, so I excluded the ViewModel practice when submitting it.&lt;/p&gt;

&lt;h4 id=&quot;ios---uikit-cursorrules&quot;&gt;iOS - UIKit cursorrules&lt;/h4&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;// Start of Selection  
  
you are an expert in coding with swift, iOS, UIKit. you always write maintainable code and clean code.  
focus on latest documentation and features.  
your descriptions should be short and concise.  
don&apos;t remove any comments.  

UIKit UI Design Principles:  
1. **Auto Layout:** Implement responsive layouts using SnapKit only (avoid NSLayoutConstraint for better readability), support Dynamic Type and Safe Area.  
2. **Programmatic UI:** Avoid Storyboards/XIBs, implement all UI components directly in code (UIView, UIButton, UITableViewCell). Use view composition and custom view subclasses for reusability.  
3. **UI Components must not directly access models or DTOs.** Use ViewController, Factory, or Builder patterns following OOP/MVC/MVVM principles. Below are good and bad practice examples:  

**Good Practice:**  
```swift  
let user = User(name: &quot;Alice&quot;, email: &quot;john@example.com&quot;)  
let factory = UserFactory()  
/// This way UserView doesn&apos;t access User model directly, following Apple&apos;s MVC principles  
let userView = factory.createUserView(user: user)  
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Bad Practice:&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;language-swift highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;user&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;User&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Alice&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;email&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;john@example.com&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;  
&lt;span class=&quot;c1&quot;&gt;/// This exposes UserView to User model, violating MVC principles  &lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;userView&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;UserView&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;  
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;strong&gt;Every UIViewController should have a corresponding ViewModel&lt;/strong&gt; that handles all UI-related logic. Follow naming conventions: if the VC is named &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;UserListViewController&lt;/code&gt;, the ViewModel should be named &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;UserListViewModel&lt;/code&gt;. Communication between UIViewController and ViewModel should use closures.&lt;/li&gt;
&lt;/ol&gt;

&lt;div class=&quot;language-swift highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;UserListViewModel&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;  
    &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;users&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;User&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;  
    &lt;span class=&quot;k&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;didFetchUsers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)?&lt;/span&gt;  
    &lt;span class=&quot;kd&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;fetchUsers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;  
        &lt;span class=&quot;c1&quot;&gt;// fetch users from network  &lt;/span&gt;
        &lt;span class=&quot;nf&quot;&gt;didFetchUsers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;?()&lt;/span&gt;  
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;  
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;  

&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;UserListViewController&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;UIViewController&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;  
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;lazy&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;viewModel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;UserListViewModel&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;  
        &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;viewModel&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;UserListViewModel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;  
        &lt;span class=&quot;n&quot;&gt;viewModel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;didFetchUsers&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;weak&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt;  
            &lt;span class=&quot;k&quot;&gt;guard&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;self&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;  
            &lt;span class=&quot;n&quot;&gt;tableView&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;reloadData&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;  
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;  
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;viewModel&lt;/span&gt;  
    &lt;span class=&quot;p&quot;&gt;}()&lt;/span&gt;  
    &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;tableView&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;UITableView&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;  
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;  
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;strong&gt;UI components should pass events using closures, and the closure must pass &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;self&lt;/code&gt; as a parameter&lt;/strong&gt; to allow external objects to identify the source component.&lt;/li&gt;
&lt;/ol&gt;

&lt;div class=&quot;language-swift highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;SampleView&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;UIView&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;  
    &lt;span class=&quot;k&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;didTapButton&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;SampleView&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)?&lt;/span&gt;  
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;button&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;UIButton&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;  
    &lt;span class=&quot;k&quot;&gt;override&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;init&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;frame&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;CGRect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;  
        &lt;span class=&quot;k&quot;&gt;super&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;init&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;frame&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;frame&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;  
        &lt;span class=&quot;nf&quot;&gt;setupUI&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;  
        &lt;span class=&quot;n&quot;&gt;button&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addTarget&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;action&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;#selector(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;buttonTapped&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;touchUpInside&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;  
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;  

    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;setupUI&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;  
        &lt;span class=&quot;c1&quot;&gt;// setup UI  &lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;  

    &lt;span class=&quot;kd&quot;&gt;@objc&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;buttonTapped&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;  
        &lt;span class=&quot;nf&quot;&gt;didTapButton&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;?(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;  
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;  
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;  
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;file-structure&quot;&gt;File Structure&lt;/h3&gt;
&lt;p&gt;Each Scene is an independent module containing ViewController and ViewModel. UITableViewCell should be placed under &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;UI/Elements&lt;/code&gt;. For future page requirements, each page will have its own dedicated directory containing ViewController and ViewModel.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Project  
├── UI  
│   ├── MainTabBar  
│   │   ├── ViewControllers  
│   │   ├── ViewModels  
│   │   └── Views  
│   ├── Scenes  
│   │   ├── ArticleFeed  
│   │   │   ├── ViewController  
│   │   │   ├── ViewModel  
│   │   │   
│   │   │   
│   │   └── UserProfile  
│   │       ├── ViewController  
│   │       ├── ViewModel  
│   │       
│   │       
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name>Marvin Lin</name></author><category term="swift" /><category term="Cursor" /><category term="AI" /><category term="Swift" /><summary type="html">Since Cursor introduced the Agent mode, I have been extensively using cursorrules for development. Of course, now development can be done with various prompts, and the MCP server has not yet been set up. But let’s start with cursorrules first. Currently, there are some great awesome cursorrules available online.</summary></entry><entry xml:lang="zh"><title type="html">歐洲 奧地利-匈牙利-捷克 奧匈捷之旅，交通方式</title><link href="http://localhost:4000/zh/life/eu-travel-cz-au/" rel="alternate" type="text/html" title="歐洲 奧地利-匈牙利-捷克 奧匈捷之旅，交通方式" /><published>2025-02-01T21:23:00+08:00</published><updated>2025-02-01T21:23:00+08:00</updated><id>http://localhost:4000/zh/life/eu-travel-cz-au</id><content type="html" xml:base="http://localhost:4000/zh/life/eu-travel-cz-au/">&lt;p&gt;這篇介紹在捷克、奧地利、匈牙利三個國家的交通方式，出發地設定在台北(TPE)出發。如果行程有在一個禮拜以上，可以這樣來安排這三個國家的行程。景點的 post 會寫在另一篇。&lt;/p&gt;

&lt;h2 id=&quot;飛機&quot;&gt;飛機&lt;/h2&gt;

&lt;p&gt;台灣飛捷克 - 布拉格，是直飛，每週的二、六都有航班。然後回程可以選擇從 奧地利 - 維也納機場飛回台北，也有直飛。目前查下來，只有 China Airline 有從台北直飛布拉格。這樣的安排，就可以不用轉機。如果想中轉其他城市，那變化就很多，這邊就不再綴述。&lt;/p&gt;

&lt;h2 id=&quot;火車&quot;&gt;火車&lt;/h2&gt;

&lt;h3 id=&quot;長途移動的火車---regiojet&quot;&gt;長途移動的火車 - &lt;a href=&quot;https://regiojet.com/&quot;&gt;RegioJet&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;先上圖，這是 RegioJet 火車路線網，如果你要去的地方在這個圖案的路徑上，你可以用便宜的價格達成你的旅程。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/life/travel-eu-czech-aus/regio_jet_map.jpeg&quot; alt=&quot;RegioJet 路線圖&quot; /&gt;&lt;/p&gt;

&lt;p&gt;適合使用的行程&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;布拉格 - 維也納 (約 4.5 小時)&lt;/li&gt;
  &lt;li&gt;布拉格 - 布爾諾 (約 2.5 小時)&lt;/li&gt;
  &lt;li&gt;維也納 - 布達佩斯 (約 2.5 小時)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;RegioJet 的車廂有分等級，如果你有帶小孩，你還可以選親子車廂的親子包廂，整個包廂只有一間，所以被訂走了，就沒有了。車廂內有小孩沙發，而且空間比較大，小孩可以一直對著電視看。&lt;/p&gt;

&lt;p&gt;在布拉格車站，RegioJet 還設有 Launge，如果發車時間還沒到，可以先在這邊休息。&lt;/p&gt;

&lt;p&gt;RegioJet 布拉格車站 Lounge
&lt;img src=&quot;/assets/life/travel-eu-czech-aus/regio_jet_2.jpeg&quot; alt=&quot;RegioJet 布拉格車站 Lounge&quot; /&gt;&lt;/p&gt;

&lt;p&gt;RegioJet 布拉格車站 Lounge 2
&lt;img src=&quot;/assets/life/travel-eu-czech-aus/regio_jet_1.jpeg&quot; alt=&quot;RegioJet 布拉格車站 Lounge 2&quot; /&gt;
用機器買票，比櫃台便宜喔
&lt;img src=&quot;/assets/life/travel-eu-czech-aus/using_machine_buy_is_better.jpeg&quot; alt=&quot;用機器買票&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;布拉格市內交通&quot;&gt;布拉格市內交通&lt;/h2&gt;

&lt;p&gt;在機場一出來就有售票機，然後就可以搭車到市區。&lt;/p&gt;

&lt;h3 id=&quot;布拉格交通票券&quot;&gt;布拉格交通票券&lt;/h3&gt;
&lt;p&gt;布拉格交通票券是用「時間」來計算的。基本是 30 min, 也可以買 24 h 或 72 h 的票。但計算上，如果當天會用到三次的路面電車或是 bus，就可以買 24h 的票。&lt;/p&gt;

&lt;h2 id=&quot;維也納市內交通&quot;&gt;維也納市內交通&lt;/h2&gt;
&lt;p&gt;如果在市區內，可以買 24 h 或 72 h 的票，建議是用 mobile app 買，因為這樣出示票券很方便。但要注意的是，在購買完後，就開始計算使用時間，所以建議在使用的前一刻再買下去。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://play.google.com/store/apps/details?id=at.wienerlinien.wienmobillab&amp;amp;pli=1&quot;&gt;Google App Wien Mobile App&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://apps.apple.com/us/app/wienmobil/id1107918142&quot;&gt;iOS App Wien Mobile App&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;貨幣&quot;&gt;貨幣&lt;/h2&gt;
&lt;p&gt;布拉格用克朗，維也納用歐元，布達佩斯用福林。雖然使用的貨幣不同，但都可以接受歐元，當然匯率會稍微的差一點。如果你使用智慧型手機的 Apple Pay 或 Google Pay，直接刷手機也是很方便，這次的旅程，在交通方面，機器都可以接受信用卡付費。但，真的有些餐館只收現金，原因是 POS 機當下壞了，除了現金以外，沒辦法刷卡。&lt;/p&gt;</content><author><name>Marvin Lin</name></author><category term="life" /><category term="life" /><category term="travel" /><category term="Europe" /><summary type="html">這篇介紹在捷克、奧地利、匈牙利三個國家的交通方式，出發地設定在台北(TPE)出發。如果行程有在一個禮拜以上，可以這樣來安排這三個國家的行程。景點的 post 會寫在另一篇。</summary></entry><entry xml:lang="en"><title type="html">Transportation Guide for Austria, Hungary, and Czech Republic</title><link href="http://localhost:4000/en/life/eu-travel-cz-au/" rel="alternate" type="text/html" title="Transportation Guide for Austria, Hungary, and Czech Republic" /><published>2025-02-01T21:22:00+08:00</published><updated>2025-02-01T21:22:00+08:00</updated><id>http://localhost:4000/en/life/eu-travel-cz-au</id><content type="html" xml:base="http://localhost:4000/en/life/eu-travel-cz-au/">&lt;p&gt;This guide covers transportation options in Austria, Hungary, and the Czech Republic, starting from Taipei (TPE). If your trip is longer than a week, this guide will help plan your travel between these three countries. Sightseeing recommendations will be in a separate post.&lt;/p&gt;

&lt;h2 id=&quot;flights&quot;&gt;Flights&lt;/h2&gt;

&lt;p&gt;Flights from Taiwan to Prague operate directly on Tuesdays and Saturdays. The return journey can be from Vienna, which also offers a direct flight to Taipei. Currently, only China Airlines offers direct flights between Taipei and Prague. If you prefer layovers, there are many alternatives.&lt;/p&gt;

&lt;h2 id=&quot;trains&quot;&gt;Trains&lt;/h2&gt;

&lt;h3 id=&quot;long-distance-train---regiojet&quot;&gt;Long-Distance Train - &lt;a href=&quot;https://regiojet.com/&quot;&gt;RegioJet&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;Below is the RegioJet train network map. If your destination is on this route, you can travel affordably.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/life/travel-eu-czech-aus/regio_jet_map.jpeg&quot; alt=&quot;RegioJet Route Map&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Recommended routes:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Prague - Vienna (Approx. 4.5 hours)&lt;/li&gt;
  &lt;li&gt;Prague - Brno (Approx. 2.5 hours)&lt;/li&gt;
  &lt;li&gt;Vienna - Budapest (Approx. 2.5 hours)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;RegioJet offers different class levels, and if traveling with children, a family compartment is available, though limited in number. These family cabins include a child-friendly sofa and extra space with onboard entertainment.&lt;/p&gt;

&lt;p&gt;At Prague Station, RegioJet provides a lounge where passengers can relax before departure.&lt;/p&gt;

&lt;p&gt;RegioJet Lounge at Prague Station:
&lt;img src=&quot;/assets/life/travel-eu-czech-aus/regio_jet_2.jpeg&quot; alt=&quot;RegioJet Lounge&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/life/travel-eu-czech-aus/regio_jet_1.jpeg&quot; alt=&quot;RegioJet Lounge 2&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Buying tickets from machines is cheaper than purchasing at the counter.
&lt;img src=&quot;/assets/life/travel-eu-czech-aus/using_machine_buy_is_better.jpeg&quot; alt=&quot;Ticket Machine Purchase&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;public-transport-in-prague&quot;&gt;Public Transport in Prague&lt;/h2&gt;

&lt;p&gt;Tickets are available at vending machines at the airport, allowing easy access to the city center.&lt;/p&gt;

&lt;h3 id=&quot;prague-transport-tickets&quot;&gt;Prague Transport Tickets&lt;/h3&gt;

&lt;p&gt;Prague’s public transport system uses time-based tickets. Options include 30-minute, 24-hour, and 72-hour tickets. If you plan to take three or more trips in a day, a 24-hour ticket is more economical.&lt;/p&gt;

&lt;h2 id=&quot;public-transport-in-vienna&quot;&gt;Public Transport in Vienna&lt;/h2&gt;

&lt;p&gt;For city travel, 24-hour and 72-hour tickets are available. It is recommended to buy them via mobile apps for convenience. However, note that ticket validity starts immediately upon purchase, so buy it just before your first use.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://play.google.com/store/apps/details?id=at.wienerlinien.wienmobillab&amp;amp;pli=1&quot;&gt;Google Play Wien Mobile App&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://apps.apple.com/us/app/wienmobil/id1107918142&quot;&gt;iOS Wien Mobile App&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;currency&quot;&gt;Currency&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Prague: Czech Koruna (CZK)&lt;/li&gt;
  &lt;li&gt;Vienna: Euro (EUR)&lt;/li&gt;
  &lt;li&gt;Budapest: Hungarian Forint (HUF)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Although these countries use different currencies, euros are generally accepted, though at less favorable exchange rates. Apple Pay and Google Pay are widely accepted for transportation payments. However, some restaurants only accept cash, often due to temporary POS machine issues.&lt;/p&gt;</content><author><name>Marvin Lin</name></author><category term="life" /><category term="life" /><category term="travel" /><category term="Europe" /><summary type="html">This guide covers transportation options in Austria, Hungary, and the Czech Republic, starting from Taipei (TPE). If your trip is longer than a week, this guide will help plan your travel between these three countries. Sightseeing recommendations will be in a separate post.</summary></entry></feed>