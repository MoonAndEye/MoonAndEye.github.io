<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.9.3">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2023-03-20T10:34:52+08:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">Marvin Lin’s Blogger</title><subtitle>這個 blog 是包含了的軟體開發、投資、經驗和生活故事。透過這個 blog，我希望分享自己的生活和見聞，同時也透過這個平台與讀者交流互動，建立起彼此的社群。</subtitle><author><name>Marvin Lin</name></author><entry><title type="html">小吃推薦：楊家紅豆餅-新北板橋江子翠</title><link href="http://localhost:4000/life/2023/03/20/yang-red-been.html" rel="alternate" type="text/html" title="小吃推薦：楊家紅豆餅-新北板橋江子翠" /><published>2023-03-20T09:16:00+08:00</published><updated>2023-03-20T09:16:00+08:00</updated><id>http://localhost:4000/life/2023/03/20/yang-red-been</id><content type="html" xml:base="http://localhost:4000/life/2023/03/20/yang-red-been.html">&lt;p&gt;&lt;img src=&quot;/assets/life/food/yang_red_been.jpeg&quot; alt=&quot;楊家紅豆餅&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;楊家紅豆餅&quot;&gt;楊家紅豆餅&lt;/h2&gt;

&lt;h2 id=&quot;營業時間早上11點開始賣完為止&quot;&gt;營業時間：早上11點開始，賣完為止&lt;/h2&gt;

&lt;p&gt;這家紅豆餅店位於江子翠地區，已經經營十年以上。這家店的特色是他們只賣兩種口味的餅點：紅豆餅和奶油餅。但是這兩種口味都被做到了極致，令人回味無窮。&lt;/p&gt;

&lt;p&gt;紅豆餅的內餡香甜，且每一口都有紅豆的口感，而餅皮則是脆而不硬，口感非常好。奶油餅則是濃郁的奶油香氣和鬆軟的餅體融合在一起，給人一種非常獨特的口感。雖然店家只賣這兩種口味，但是每一種口味都非常優秀，是一種無法用言語形容的美味。&lt;/p&gt;

&lt;p&gt;此外，這家店的餅點使用的是優質的食材，每天限量販售也保證了餅點的新鮮度，因此如果您想嚐試這家店的餅點，建議您早一點來，以免向隅。&lt;/p&gt;

&lt;p&gt;總之，如果您對紅豆餅和奶油餅感興趣，不妨到這家店品嚐一下。我相信您一定不會失望。&lt;/p&gt;

&lt;iframe src=&quot;https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d3615.2511399399245!2d121.46905985062942!3d25.025549883897703!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x3442a83fa20267a7%3A0xa8542f3b1b1b8b!2z5qWK5a6257SF6LGG6aSF!5e0!3m2!1szh-TW!2stw!4v1679275706894!5m2!1szh-TW!2stw&quot; width=&quot;600&quot; height=&quot;450&quot; style=&quot;border:0;&quot; allowfullscreen=&quot;&quot; loading=&quot;lazy&quot; referrerpolicy=&quot;no-referrer-when-downgrade&quot;&gt;&lt;/iframe&gt;</content><author><name>Marvin Lin</name></author><category term="life" /><category term="food" /><category term="美食" /><summary type="html"></summary></entry><entry><title type="html">使用 ChatGPT 串接 ChatGPT：(1)</title><link href="http://localhost:4000/swift/2023/03/19/using-chatgpt-connect-chatgpt1.html" rel="alternate" type="text/html" title="使用 ChatGPT 串接 ChatGPT：(1)" /><published>2023-03-19T12:36:00+08:00</published><updated>2023-03-19T12:36:00+08:00</updated><id>http://localhost:4000/swift/2023/03/19/using-chatgpt-connect-chatgpt1</id><content type="html" xml:base="http://localhost:4000/swift/2023/03/19/using-chatgpt-connect-chatgpt1.html">&lt;h2 id=&quot;申請-chatgpt-api-key&quot;&gt;申請 ChatGPT api key&lt;/h2&gt;

&lt;p&gt;ChatGPT 是有開放 API 讓使用者串接的，申請是免費的，但免費額度的用量是 18 USD，或是三個月到期，之後就需要升級成 plus 才能繼續使用。詳細情況，建議關注 open.ai 的網站，因為上面的資訊才是最新且最正確的。&lt;/p&gt;

&lt;h3 id=&quot;openai-價格說明網頁&quot;&gt;&lt;a href=&quot;https://openai.com/pricing&quot;&gt;Open.ai 價格說明網頁&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;那麼，我們就開始串接 ChatGPT 了，要進行 client 的串接，我們需要 api key。&lt;/p&gt;

&lt;h3 id=&quot;申請-api-key的網頁&quot;&gt;&lt;a href=&quot;https://platform.openai.com/account/api-keys&quot;&gt;申請 api key的網頁&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;你可以在這個網頁申請 api key，記得，拿到 key 後要馬上找到地方存起來，不然就再也看不到 keys 了。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;這個網頁也有提醒，api key 不要放在 client 端，也不要放在公開的 repo 上&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;接下來，我們就不斷的去問 ChatGPT，怎麼串接 ChatGPT。&lt;/p&gt;

&lt;h2 id=&quot;使用-chatgpt-來串接-chatgpt&quot;&gt;使用 ChatGPT 來串接 ChatGPT&lt;/h2&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;問：
怎麼串接 ChatGPT
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;答：
要使用 ChatGPT API，您需要遵循以下步驟：

1 註冊 ChatGPT API 帳戶。前往 ChatGPT API 官方網站，點擊「註冊」按鈕，並填寫必要的註冊信息。

2 創建 API 金鑰。登錄到您的 ChatGPT API 帳戶後，創建一個新的 API 金鑰。API 金鑰是連接到 ChatGPT API 的唯一憑證，您需要使用它才能訪問 API 服務。

3 選擇適合的 API。ChatGPT API 提供了多個 API 功能，例如文字生成、對話系統、語言翻譯等。選擇適合您需求的 API。

4 創建 API 請求。使用您的 API 金鑰和適合的 API 端點創建 API 請求。API 端點是 API 服務的網址，您可以在 API 文檔中找到相關信息。在 API 請求中，您可以傳遞相應的參數和數據以訪問 API 服務。

5 處理 API 響應。一旦發送 API 請求，您會收到一個響應，其中包含 API 服務返回的結果。您可以根據響應中的數據進行下一步處理。

以上是使用 ChatGPT API 的一般步驟。您可以參考 ChatGPT API 官方文檔，以了解更多關於 API 的詳細信息，並且可以通過使用相關的庫和SDKs，使API集成更加容易。
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;問：
給我一個串接 chat gpt 的範例
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;答：
好的，以下是一個使用 Python 語言，並且使用 ChatGPT API 文本生成功能的簡單範例：

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;答：
import openai
import os

# 設置 API 金鑰
openai.api_key = os.getenv(&quot;OPENAI_API_KEY&quot;)

# 準備 API 請求
prompt = &quot;Once upon a time,&quot;
model_engine = &quot;text-davinci-002&quot;
temperature = 0.5
max_tokens = 50

# 訪問 API 服務
response = openai.Completion.create(
    engine=model_engine,
    prompt=prompt,
    max_tokens=max_tokens,
    temperature=temperature,
)

# 處理 API 響應
generated_text = response.choices[0].text.strip()

# 輸出結果
print(generated_text)
這個範例會生成一段文本，該文本是在「Once upon a time,」這個開頭之後，使用 ChatGPT API 文本生成功能生成的。在這個例子中，我們使用了 openai Python 包，並且將 API 金鑰設置為環境變量。我們使用 openai.Completion.create 方法向 API 服務提交了一個文本生成的請求，並且通過處理 API 響應來獲得了生成的文本結果。
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;直接拿-code-去跑的結果&quot;&gt;直接拿 code 去跑的結果&lt;/h2&gt;

&lt;p&gt;把 ChatGPT 給你的 Code 直接拿去跑，並照著指示換掉 api key，到底會不會動呢? 我們來看一下。&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# 結果

Traceback (most recent call last):
  File &quot;/Users/cm0679/5python/foo.py&quot;, line 14, in &amp;lt;module&amp;gt;
    response = openai.Completion.create(
  File &quot;/Users/cm0679/anaconda3/lib/python3.8/site-packages/openai/api_resources/completion.py&quot;, line 25, in create
    return super().create(*args, **kwargs)
  File &quot;/Users/cm0679/anaconda3/lib/python3.8/site-packages/openai/api_resources/abstract/engine_api_resource.py&quot;, line 149, in create
    ) = cls.__prepare_create_request(
  File &quot;/Users/cm0679/anaconda3/lib/python3.8/site-packages/openai/api_resources/abstract/engine_api_resource.py&quot;, line 106, in __prepare_create_request
    requestor = api_requestor.APIRequestor(
  File &quot;/Users/cm0679/anaconda3/lib/python3.8/site-packages/openai/api_requestor.py&quot;, line 130, in __init__
    self.api_key = key or util.default_api_key()
  File &quot;/Users/cm0679/anaconda3/lib/python3.8/site-packages/openai/util.py&quot;, line 186, in default_api_key
    raise openai.error.AuthenticationError(
openai.error.AuthenticationError: No API key provided. You can set your API key in code using &apos;openai.api_key = &amp;lt;API-KEY&amp;gt;&apos;, or you can set the environment variable OPENAI_API_KEY=&amp;lt;API-KEY&amp;gt;). If your API key is stored in a file, you can point the openai module at it with &apos;openai.api_key_path = &amp;lt;PATH&amp;gt;&apos;. You can generate API keys in the OpenAI web interface. See https://onboard.openai.com for details, or email support@openai.com if you have any questions.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;我們得到了 AuthenticationError，從結果來看，一定是 api key 的設定有問題。但現在先不人工介入，我們先試試看 ChatGPT 能不能從這個結果給我一個改正後的 code。&lt;/p&gt;

&lt;h2 id=&quot;拿-error-的結果去問-chatgpt&quot;&gt;拿 Error 的結果去問 ChatGPT&lt;/h2&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# 問：
error message 如下
Traceback (most recent call last):
  File &quot;/Users/cm0679/5python/foo.py&quot;, line 14, in &amp;lt;module&amp;gt;
    response = openai.Completion.create(
  File &quot;/Users/cm0679/anaconda3/lib/python3.8/site-packages/openai/api_resources/completion.py&quot;, line 25, in create
    return super().create(*args, **kwargs)
  File &quot;/Users/cm0679/anaconda3/lib/python3.8/site-packages/openai/api_resources/abstract/engine_api_resource.py&quot;, line 149, in create
    ) = cls.__prepare_create_request(
  File &quot;/Users/cm0679/anaconda3/lib/python3.8/site-packages/openai/api_resources/abstract/engine_api_resource.py&quot;, line 106, in __prepare_create_request
    requestor = api_requestor.APIRequestor(
  File &quot;/Users/cm0679/anaconda3/lib/python3.8/site-packages/openai/api_requestor.py&quot;, line 130, in __init__
    self.api_key = key or util.default_api_key()
  File &quot;/Users/cm0679/anaconda3/lib/python3.8/site-packages/openai/util.py&quot;, line 186, in default_api_key
    raise openai.error.AuthenticationError(
openai.error.AuthenticationError: No API key provided. You can set your API key in code using &apos;openai.api_key = &amp;lt;API-KEY&amp;gt;&apos;, or you can set the environment variable OPENAI_API_KEY=&amp;lt;API-KEY&amp;gt;). If your API key is stored in a file, you can point the openai module at it with &apos;openai.api_key_path = &amp;lt;PATH&amp;gt;&apos;. You can generate API keys in the OpenAI web interface. See https://onboard.openai.com for details, or email support@openai.com if you have any questions.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# 答：
這個錯誤信息顯示了在代碼中並沒有提供 ChatGPT API 金鑰。你需要設置你的 API 金鑰才能使用 ChatGPT API。你可以按照下列步驟操作：

訪問 OpenAI 控制台 (https://beta.openai.com/docs/quickstart)
創建一個帳戶 (如果你還沒有帳戶)
創建一個新的 API 金鑰 (https://beta.openai.com/docs/api-reference/authentication/create-api-key)
複製你的新 API 金鑰
在你的代碼中設置 openai.api_key 為你的 API 金鑰。
以下是代碼示例：
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
python
Copy code
import openai

# 設置你的 API 金鑰
openai.api_key = &quot;YOUR_API_KEY_HERE&quot;

# 調用 ChatGPT API 文本生成功能
prompt = &quot;Once upon a time,&quot;
model_engine = &quot;text-davinci-002&quot;
temperature = 0.5
max_tokens = 50

response = openai.Completion.create(
    engine=model_engine,
    prompt=prompt,
    max_tokens=max_tokens,
    temperature=temperature,
)

# 處理 API 響應
generated_text = response.choices[0].text.strip()

# 輸出結果
print(generated_text)
請務必將 YOUR_API_KEY_HERE 替換為你自己的 ChatGPT API 金鑰。
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;這次，ChatGPT 換掉了設定 api key 的那一段&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# 更換前
openai.api_key = os.getenv(&quot;OPENAI_API_KEY&quot;)

# 更換後
openai.api_key = &quot;YOUR_API_KEY_HERE&quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;然後，再跑一次，我們得到了&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# response：
here was a little girl who loved to read. She would spend hours upon hours reading books of all kinds. She loved the smell of old books and the way they made her feel.

One day, she came across a book that she had
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;得到了一個故事的結果，因為我們的 prmopt 為 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Once upon a time,&lt;/code&gt; 所以 ChatGPT 就把他接成一個故事了。&lt;/p&gt;

&lt;h2 id=&quot;chatgpt-api-的那些參數&quot;&gt;ChatGPT API 的那些參數&lt;/h2&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;prompt = &quot;Once upon a time,&quot;
model_engine = &quot;text-davinci-002&quot;
temperature = 0.5
max_tokens = 50
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;prompt&quot;&gt;prompt&lt;/h3&gt;
&lt;p&gt;詠唱詞，ChatGPT 會依這個輸入，來回傳 response&lt;/p&gt;

&lt;h3 id=&quot;model_engin&quot;&gt;model_engin&lt;/h3&gt;
&lt;p&gt;使用的 ai model，模型的種類不同，建議從官網去找你想完成任務的模型。
注意，雖然 ChatGPT 給的是 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;text-davinci-002&lt;/code&gt; 但後面還有個 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;text-davinci-003&lt;/code&gt;，然後2023年3月之後，還出了個 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;gpt-3.5-turbo&lt;/code&gt;。每個模型的用途不同，能力也不同，請依使用場景去調整。&lt;/p&gt;

&lt;h3 id=&quot;temperature&quot;&gt;temperature&lt;/h3&gt;
&lt;p&gt;表示同樣的 prompt，給出一樣的 response 的機率，如果設定為 0，那一樣的 input 就會得到一樣的 response。調高一點，讓結果會不同。&lt;/p&gt;

&lt;h3 id=&quot;max_tokens&quot;&gt;max_tokens&lt;/h3&gt;
&lt;p&gt;token 可以想成是 response 的字數限制，每個模型的 max_token 都是不同的，所以調到 500，1000 都是可以的。注意，這和使用量有關，token 是算費用的。價格在下方的參考資料有列出來&lt;/p&gt;

&lt;h2 id=&quot;參考資料&quot;&gt;參考資料&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://openai.com/pricing&quot;&gt;open.ai pricing&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://platform.openai.com/docs/models&quot;&gt;API 可以選擇的 model 列表和 model 說明&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;</content><author><name>Marvin Lin</name></author><category term="swift" /><category term="swift" /><category term="programming" /><category term="ai" /><category term="chatgpt" /><category term="python" /><summary type="html">申請 ChatGPT api key</summary></entry><entry><title type="html">Swift 程式碼標準化工具 - swiftlint &amp;amp; swiftformat</title><link href="http://localhost:4000/swift/2023/03/18/swift-standard-tool.html" rel="alternate" type="text/html" title="Swift 程式碼標準化工具 - swiftlint &amp;amp; swiftformat" /><published>2023-03-18T14:26:00+08:00</published><updated>2023-03-18T14:26:00+08:00</updated><id>http://localhost:4000/swift/2023/03/18/swift-standard-tool</id><content type="html" xml:base="http://localhost:4000/swift/2023/03/18/swift-standard-tool.html">&lt;h1 id=&quot;swift-程式碼的標準化&quot;&gt;Swift 程式碼的標準化&lt;/h1&gt;

&lt;p&gt;在多人共同協作的專案中，Swift 程式碼的標準化是一個重要的主題，如果你的專案只有一個人，那標準化只需要那一位開發者，但我在實務上是會有三、四個人同時在一個專案的，想憑著過去的經驗讓這群人有程式碼風格的共識，是不可能的。。使用 Swiftlint 和 Swiftformat 可以幫助所有成員檢視和自動修正程式碼風格。&lt;/p&gt;

&lt;h2 id=&quot;swiftlint&quot;&gt;Swiftlint&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/realm/SwiftLint&quot;&gt;Swiftlint github link&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Swiftlint 是一種靜態程式碼分析工具，可以檢查我們的程式碼是否符合 Swift 的標準風格和最佳實踐。它可以檢測和警告我們的程式碼中的一些常見錯誤和風格問題，例如缺少註釋、空格、括號和命名不一致等。使用 Swiftlint 可以使我們的程式碼更加一致和易於閱讀，從而提高程式碼品質和可維護性。&lt;/p&gt;

&lt;p&gt;你可以使用 –fix 指令，讓 swiftformat 一次處理掉簡單的 format，像是空行等。但這個指令沒辦法處理太複雜的 lint，像是我實測後，他不會移動 trailing closure 中，參數不在 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;{&lt;/code&gt; 同一行的狀況。&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# swiftlint 自動更正指令
swiftlint --fix
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;swiftformat&quot;&gt;Swiftformat&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/nicklockwood/SwiftFormat&quot;&gt;Swiftformat github link&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;和 swiftformat 是類似的工具，我平常會同時用這兩個工具，因為 lint 的能力不太一樣，這個工具可以調整到 indent 的規範，opaque 型別是不是該處理，甚致細緻到 import 的順序是不是依照英文字母排序。&lt;/p&gt;

&lt;h2 id=&quot;好處&quot;&gt;好處&lt;/h2&gt;

&lt;p&gt;程式碼標準化的好處在於提高程式碼質量和可讀性，從而使得我們的程式碼更加易於維護和擴展。通過使用 Swiftlint 和 Swiftformat，我們可以自動檢測和修正我們的程式碼風格問題，從而使得我們的程式碼更加一致和易於閱讀。此外，這些工具還可以提高我們的開發效率，從而使我們更加專注於開發高品質的應用程式。&lt;/p&gt;

&lt;p&gt;總的來說，Swift 程式碼的標準化是一個重要的主題，它可以幫助我們提高程式碼品質和可讀性，從而使得我們的程式碼更加易於維護和擴展。通過使用 Swiftlint 和 Swiftformat，我們可以自動檢測和修正我們的程式碼風格問題，從而提高我們的開發效率和應用程式的品質。&lt;/p&gt;

&lt;p&gt;繼續來看一下 Swift 程式碼的標準化所帶來的好處。&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;透過使用 Swiftlint 和 Swiftformat 我們可以自動化檢測和修正我們的程式碼風格問題，這樣可以節省我們大量的時間和精力，提高我們的開發效率。&lt;/li&gt;
  &lt;li&gt;程式碼標準化可以使得我們的程式碼更加一致和易於閱讀，這樣可以提高程式碼的質量和可維護性。&lt;/li&gt;
  &lt;li&gt;透過程式碼標準化，我們可以使得我們的程式碼更加易於擴展和維護，這樣可以使得我們開發的應用程式更加穩定和可靠。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;總體來說，程式碼標準化是一個非常重要的主題，特別是在大型項目中，它可以使得我們的程式碼更加易於維護和擴展。透過使用 Swiftlint 和 Swiftformat，我們可以自動化檢測和修正我們的程式碼風格問題，提高我們的開發效率和應用程式的品質。如果你還沒有開始使用這些工具，我強烈建議你開始使用它們，這樣可以使得你專案的程式碼更加易於閱讀、維護和擴展。&lt;/p&gt;</content><author><name>Marvin Lin</name></author><category term="swift" /><category term="swift" /><category term="programming" /><summary type="html">Swift 程式碼的標準化</summary></entry><entry><title type="html">微軟推出了名為「Microsoft 365 Copilot」的新生產力工具</title><link href="http://localhost:4000/programming/2023/03/17/microsoft-office-copilot-launch.html" rel="alternate" type="text/html" title="微軟推出了名為「Microsoft 365 Copilot」的新生產力工具" /><published>2023-03-17T15:41:00+08:00</published><updated>2023-03-17T15:41:00+08:00</updated><id>http://localhost:4000/programming/2023/03/17/microsoft-office-copilot-launch</id><content type="html" xml:base="http://localhost:4000/programming/2023/03/17/microsoft-office-copilot-launch.html">&lt;p&gt;微軟推出了名為「Microsoft 365 Copilot」的新生產力工具，旨在將下一代人工智慧技術應用到工作中，讓使用者能夠更輕鬆地進行創意和生產力的發揮。Copilot整合了大型語言模型（LLMs）和Microsoft Graph和Microsoft 365應用程序中的數據，可將使用者的語言轉化為最強大的生產力工具，幫助使用者更高效地工作。&lt;/p&gt;

&lt;p&gt;Copilot系統可以在Microsoft 365的多種應用程序中使用，例如Word、Excel、PowerPoint、Outlook和Teams，以提高使用者的生產力、解放創造力和升級技能。Copilot還可以在Outlook中協助用戶節省審閱長電子郵件鏈和快速起草建議答覆的時間，而在Teams中，Copilot則可以實時總結關鍵討論點，包括誰說了什麼，人們在哪裡達成了共識，以及哪些地方存在分歧，同時提供建議性行動計劃。Copilot還可以在Excel中分析趨勢和快速創建專業的數據可視化效果。&lt;/p&gt;

&lt;p&gt;除了加速個人生產力之外，Copilot還為每個組織創建了一個新的知識模型，利用現有的數據和見解，實現知識的自由流通，節省寶貴的時間。這使得組織內部的知識更容易被發現和應用，並且節省了大量搜尋答案的時間。Copilot還可以協助自動化重複性任務、創建聊天機器人並在幾分鐘內將想法轉化為實用應用程序。&lt;/p&gt;

&lt;p&gt;微軟表示，Copilot系統的使用需要一定的學習曲線，但是那些採用這種新的工作方式的人將很快取得優勢。微軟聯席CEO Satya Nadella表示，Copilot將徹底改變人們與AI的互動方式，以及AI與人類之間的互動方式。&lt;/p&gt;

&lt;p&gt;Copilot系統是企業級AI的最佳解決方案，不僅整合了OpenAI的ChatGPT，還包括一個複雜的處理和管控引擎，可在企業級應用場景下實現高效穩定的AI模型開發、部署、管理和維護。Copilot系統的開發者希望透過這個產品，幫助企業在應用AI技術方面更加順利，降低開發難度和成本，並且讓企業能夠更好地應對市場和用戶的需求。隨著人工智能技術的發展和應用越來越廣泛，Copilot系統的應用前景也非常看好。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://blogs.microsoft.com/blog/2023/03/16/introducing-microsoft-365-copilot-your-copilot-for-work/&quot;&gt;Microsoft blog&lt;/a&gt;&lt;/p&gt;</content><author><name>Marvin Lin</name></author><category term="programming" /><category term="life" /><summary type="html">微軟推出了名為「Microsoft 365 Copilot」的新生產力工具，旨在將下一代人工智慧技術應用到工作中，讓使用者能夠更輕鬆地進行創意和生產力的發揮。Copilot整合了大型語言模型（LLMs）和Microsoft Graph和Microsoft 365應用程序中的數據，可將使用者的語言轉化為最強大的生產力工具，幫助使用者更高效地工作。</summary></entry><entry><title type="html">Swiftformat 在設定 swiftversion 5.7，會把 T 改成 some Any</title><link href="http://localhost:4000/swift/2023/03/17/swiftformat-version.html" rel="alternate" type="text/html" title="Swiftformat 在設定 swiftversion 5.7，會把 T 改成 some Any" /><published>2023-03-17T09:12:00+08:00</published><updated>2023-03-17T09:12:00+08:00</updated><id>http://localhost:4000/swift/2023/03/17/swiftformat-version</id><content type="html" xml:base="http://localhost:4000/swift/2023/03/17/swiftformat-version.html">&lt;h2 id=&quot;swiftformat-可調整的各種參數&quot;&gt;Swiftformat 可調整的各種參數&lt;/h2&gt;

&lt;p&gt;swiftformat 在進行 formatting  的時候，有很多參數可以調整。詳細的參數如下。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/nicklockwood/SwiftFormat/blob/master/.swiftformat&quot;&gt;swiftformat 參數連結&lt;/a&gt;&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# file options

--exclude Tests/XCTestManifests.swift,Tests/BadConfig,Snapshots,Build,PluginTests

# format options

--allman false
--binarygrouping 4,8
--commas always
--decimalgrouping 3,6
--elseposition same-line
--voidtype void
--exponentcase lowercase
--exponentgrouping disabled
--fractiongrouping disabled
--header ignore
--hexgrouping 4,8
--hexliteralcase uppercase
--ifdef indent
--indent 4
--indentcase false
--importgrouping testable-bottom
--linebreaks lf
--maxwidth none
--octalgrouping 4,8
--operatorfunc spaced
--patternlet hoist
--ranges spaced
--self remove
--semicolons inline
--stripunusedargs always
--swiftversion 5.1
--trimwhitespace always
--wraparguments preserve
--wrapcollections preserve

# rules

--enable isEmpty
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;當我們把 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;--swiftversion 5.1&lt;/code&gt; 調整到 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;--swiftversion 5.7&lt;/code&gt; 的時候，使用泛型 T，就會被改成 some Any。&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;// --swiftversion 5.1 ~ 5.6
func log&amp;lt;T&amp;gt;(_ message: T) {

// --swiftversion 5.7
func log(_ message: some Any) {
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;如果仍然不希望 swiftformat 改動 T，那可以在 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.swiftformat&lt;/code&gt; 中，加上 disable，&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;--disable opaqueGenericParameters&lt;/code&gt;。這樣就不會讓 T 改成 some Any 了。&lt;/p&gt;</content><author><name>Marvin Lin</name></author><category term="swift" /><category term="swift" /><summary type="html">Swiftformat 可調整的各種參數</summary></entry><entry><title type="html">紀錄：瑞士信貸(CSGN)可能會爆發危機2023年3月16日</title><link href="http://localhost:4000/finance/2023/03/16/CSGN-issue-news.html" rel="alternate" type="text/html" title="紀錄：瑞士信貸(CSGN)可能會爆發危機2023年3月16日" /><published>2023-03-16T08:34:00+08:00</published><updated>2023-03-16T08:34:00+08:00</updated><id>http://localhost:4000/finance/2023/03/16/CSGN-issue-news</id><content type="html" xml:base="http://localhost:4000/finance/2023/03/16/CSGN-issue-news.html">&lt;p&gt;在 SVB 倒閉之後，瑞士信代大股東排除將資金繼續注入瑞士信貸，股價在盤中暴跌30%。大股東為沙國銀行，原因為「監管和法規問題」。瑞士信貸去年虧76億瑞郎，直接將10年來的獲利回吐。去年所有的客戶贖回約1000億美元資產，資金仍然持續外流。&lt;/p&gt;</content><author><name>Marvin Lin</name></author><category term="finance" /><category term="finance" /><category term="news" /><summary type="html">在 SVB 倒閉之後，瑞士信代大股東排除將資金繼續注入瑞士信貸，股價在盤中暴跌30%。大股東為沙國銀行，原因為「監管和法規問題」。瑞士信貸去年虧76億瑞郎，直接將10年來的獲利回吐。去年所有的客戶贖回約1000億美元資產，資金仍然持續外流。</summary></entry><entry><title type="html">紀錄：矽谷銀行(SVB)倒閉於2023年3月10日</title><link href="http://localhost:4000/finance/2023/03/15/SVB-broken-v2.html" rel="alternate" type="text/html" title="紀錄：矽谷銀行(SVB)倒閉於2023年3月10日" /><published>2023-03-15T10:13:00+08:00</published><updated>2023-03-15T10:13:00+08:00</updated><id>http://localhost:4000/finance/2023/03/15/SVB-broken-v2</id><content type="html" xml:base="http://localhost:4000/finance/2023/03/15/SVB-broken-v2.html">&lt;h1 id=&quot;矽谷銀行svb倒閉於2023-03-10&quot;&gt;矽谷銀行(SVB)倒閉於2023-03-10&lt;/h1&gt;

&lt;p&gt;在美國時間2023年3月10日，美國矽谷銀行倒閉。根據 SVB 執行長 Greg Becker 的信，在拋售 210 億美元的債券組合後，稅後損失達到 18 億元。在宣告倒閉後，美國聯邦存款保險公司(FDIC)進行接管。SVB 是 FDIC 接管的銀行中，量體排名第二名的。&lt;/p&gt;

&lt;p&gt;在美國時間 13 日，Fed 和 FDIC 負責人表示。 SVB 儲戶可以順利拿回資產。&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;在收到 FDIC 和聯準會董事會的建議並與總統協商後，葉倫部長批准了使 FDIC 能夠完成的行動，它以充分保護所有儲戶的方式，對矽谷銀行進行決議。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;為什麼矽谷銀行會倒閉&quot;&gt;為什麼矽谷銀行會倒閉&lt;/h3&gt;

&lt;p&gt;SVB 將資產配置在長期的國債，因為長期國債相對短期有比較好的利率。但在 2022 年開始，美國聯準會不斷的進行加息，這一年中加了八次息。市場利率上升，債券價格就會下跌。SVB 的客戶集中在科技業，在 2022 年底業界發現成長難以持續，不斷進行裁員，在業界景氣進入往下的趨勢中，眾多客戶進行資金轉移，導致了 SVB 需要先拋售持有的長期債券。一般來說，長期債券在長期持有的狀況下，很難賠到錢的，但短期價格是會被市場影響的。&lt;/p&gt;

&lt;h3 id=&quot;後續&quot;&gt;後續&lt;/h3&gt;

&lt;p&gt;美國時間 2023年3月12日，Signature Bank 被關閉，但所有存戶 13 日起可以領回所有存款。&lt;/p&gt;

&lt;h3 id=&quot;twitter-觀點&quot;&gt;Twitter 觀點&lt;/h3&gt;

&lt;p&gt;大賣空主角原型 - 貝瑞在 Twitter 上則是說，這次的危機應該很快就會結束，事情會告一個段落。(不過他還是看空)&lt;/p&gt;</content><author><name>Marvin Lin</name></author><category term="finance" /><category term="Finance" /><summary type="html">矽谷銀行(SVB)倒閉於2023-03-10</summary></entry><entry><title type="html">GitHub Page 部落格弄好了，未來文章都會 po 在 GitHub Page 上了</title><link href="http://localhost:4000/life/2023/03/14/future-article-will-post-on-page.html" rel="alternate" type="text/html" title="GitHub Page 部落格弄好了，未來文章都會 po 在 GitHub Page 上了" /><published>2023-03-14T21:09:00+08:00</published><updated>2023-03-14T21:09:00+08:00</updated><id>http://localhost:4000/life/2023/03/14/future-article-will-post-on-page</id><content type="html" xml:base="http://localhost:4000/life/2023/03/14/future-article-will-post-on-page.html">&lt;h1 id=&quot;github-page-部落格弄好了未來文章都會-po-在-github-page-上了&quot;&gt;GitHub Page 部落格弄好了，未來文章都會 po 在 GitHub Page 上了&lt;/h1&gt;

&lt;p&gt;最近抽空花了點時間，使用了 ChatGPT 輔助，在 GitHub Page 上架了自己的部落格。使用的是 Ruby 的 Jekyll 框架，Jekyll 也是 GitHub Page 上直接推薦的框架。&lt;/p&gt;

&lt;p&gt;除了 Jekyll 以外，ChatGPT 還推薦了 Hugo、Hexo、Pelican、Gatsby。但我看了 GitHub 官網都推薦 Jekyll 後，就決定先試試 Jekyll 了。&lt;/p&gt;

&lt;p&gt;Github Page&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://moonandeye.github.io/&quot;&gt;https://moonandeye.github.io&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;現在已經搬移了部分文章，接下來都會繼續在 Page 上寫文章，短期還會在 medium 上貼相同文章，但再過一陣子，我就會停用 medium 了。&lt;/p&gt;

&lt;p&gt;畢竟，我還是想要有一個不是控在別人手上的 blog。&lt;/p&gt;</content><author><name>Marvin Lin</name></author><category term="life" /><category term="Life" /><category term="blog" /><summary type="html">GitHub Page 部落格弄好了，未來文章都會 po 在 GitHub Page 上了</summary></entry><entry><title type="html">AI 寫出來的故事</title><link href="http://localhost:4000/programming/2022/12/30/stories-written-by-ai.html" rel="alternate" type="text/html" title="AI 寫出來的故事" /><published>2022-12-30T16:12:00+08:00</published><updated>2022-12-30T16:12:00+08:00</updated><id>http://localhost:4000/programming/2022/12/30/stories-written-by-ai</id><content type="html" xml:base="http://localhost:4000/programming/2022/12/30/stories-written-by-ai.html">&lt;h1 id=&quot;ai-寫出來的故事&quot;&gt;AI 寫出來的故事&lt;/h1&gt;

&lt;p&gt;上一篇文章寫了我現在用 ChatGPT 來做的事。&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;ai-寫出來的故事-1&quot;&gt;AI 寫出來的故事&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn-images-1.medium.com/max/800/1*91ACQDjnyRok9mEYG0Mg8Q.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;上一篇文章寫了我現在用 ChatGPT 來做的事。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://medium.com/@atimis19/%E6%9C%80%E8%BF%91%E7%94%A8-chatgpt-%E4%BE%86%E5%81%9A%E7%9A%84%E4%BA%8B%E6%83%85-d3f2a789ca53&quot; title=&quot;https://medium.com/@atimis19/%E6%9C%80%E8%BF%91%E7%94%A8-chatgpt-%E4%BE%86%E5%81%9A%E7%9A%84%E4%BA%8B%E6%83%85-d3f2a789ca53&quot;&gt;&lt;strong&gt;最近用 ChatGPT 來做的事情&lt;/strong&gt;&lt;br /&gt;
_最近有個 AI 對話機器人，在短期內爆紅，連結如下。_medium.com&lt;/a&gt;&lt;a href=&quot;https://medium.com/@atimis19/%E6%9C%80%E8%BF%91%E7%94%A8-chatgpt-%E4%BE%86%E5%81%9A%E7%9A%84%E4%BA%8B%E6%83%85-d3f2a789ca53&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;然後，突然想到，如果叫他寫小說，會怎樣呢?&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn-images-1.medium.com/max/800/1*MU9Cg2sa6mMjFZIiui3Nvg.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;整個全文如下&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;AI 寫出來的故事&lt;/p&gt;

&lt;p&gt;在阿根廷，一位叫做 Juan 的軟體開發者，對足球非常熱愛。他每天晚上都會打開他的 iPhone，使用一款叫做 “Fútbol App” 的 iOS 應用程式，觀看最新的足球比賽影片和新聞。&lt;/p&gt;

&lt;p&gt;當世界杯來臨時，Juan 非常興奮。他期待著看到阿根廷隊的比賽，並希望他的國家能夠拿到冠軍。他也特別注意自己的 iPhone，因為他知道這款應用程式將會是他追蹤比賽和新聞的最佳工具。&lt;/p&gt;

&lt;p&gt;在比賽期間，Juan 每天都會第一時間打開 “Fútbol App”，看看阿根廷隊的最新消息。他也會和朋友們一起使用應用程式的即時聊天功能，討論比賽的結果和未來的賽程。&lt;/p&gt;

&lt;p&gt;最終，阿根廷隊沒有拿到冠軍，但 Juan 依然對足球充滿熱情。他期待著下一屆世界杯的到來，並繼續使用 “Fútbol App” 來追蹤最新的足球消息。&lt;/p&gt;

&lt;p&gt;Juan 繼續使用 “Fútbol App”，並希望能夠透過這款軟體，讓更多的足球迷們能夠享受到最新、最準確的足球資訊。因此，他決定專注於改進軟體的功能和使用體驗。&lt;/p&gt;

&lt;p&gt;他開始研究如何使用 iOS 的最新技術，例如蘋果的 ARKit 框架，讓使用者能夠在應用程式中檢視三維足球場地和球員模型。他也考慮加入即時聊天功能，讓球迷們能夠在比賽期間互相交流意見。&lt;/p&gt;

&lt;p&gt;Juan 的努力沒有白費。 “Fútbol App” 的使用者人數迅速增長，並得到許多好評。甚至有足球球隊的經紀人、訓練師和球員也開始使用這款軟體，為他們的比賽做最佳化的準備。&lt;/p&gt;

&lt;p&gt;Juan 很高興看到 “Fútbol App” 的成功，並希望能夠繼續為足球迷們提供最好的服務。他知道，只要他堅持不懈，就能夠讓這款軟體成為足球界不可或缺的工具。&lt;/p&gt;

&lt;p&gt;Juan 繼續努力工作，並希望能夠不斷改進 “Fútbol App” 的功能和使用體驗。他也開始與其他軟體開發者合作，希望能夠借助他們的專業知識，讓 “Fútbol App” 更加完善。&lt;/p&gt;

&lt;p&gt;在他的努力下，”Fútbol App” 得到了更多的肯定和支持。足球俱樂部、足球聯盟和運動媒體機構都開始使用這款軟體，並為它發表了許多好評。甚至有人向 Juan 提出收購 “Fútbol App” 的邀約，但他決定保留自己的軟體，繼續專注於為足球迷們提供最好的服務。&lt;/p&gt;

&lt;p&gt;雖然 “Fútbol App” 的成功讓 Juan 忙碌了許多，但他仍然喜愛足球，並繼續追蹤最新的賽事和新聞。他知道，只要有足球，就會有無限的靈感和樂趣。&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;就內容和架構上來說，當然離「頂尖」的小說家還有很大一段距離。但如果和網路上一般日常的 po 文來比較，是不是很像呢?&lt;/p&gt;

&lt;p&gt;BTW 這篇文章的封面，也是 AI 產生的&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://labs.openai.com/e/87LrehmaBKagLmwVkoVDRKmy/0CMZyla5JLWlwsNjhrVLuW6&quot;&gt;https://labs.openai.com/e/87LrehmaBKagLmwVkoVDRKmy/0CMZyla5JLWlwsNjhrVLuW6&lt;/a&gt;i&lt;/p&gt;

&lt;p&gt;By &lt;a href=&quot;https://medium.com/@atimis19&quot;&gt;Marvin Lin&lt;/a&gt; on &lt;a href=&quot;https://medium.com/p/647af47a0ca1&quot;&gt;December 30, 2022&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://medium.com/@atimis19/ai-%E5%AF%AB%E5%87%BA%E4%BE%86%E7%9A%84%E6%95%85%E4%BA%8B-647af47a0ca1&quot;&gt;Canonical link&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Exported from &lt;a href=&quot;https://medium.com&quot;&gt;Medium&lt;/a&gt; on March 14, 2023.&lt;/p&gt;</content><author><name>Marvin Lin</name></author><category term="programming" /><category term="ai" /><category term="chatgpt" /><summary type="html">AI 寫出來的故事</summary></entry><entry><title type="html">最近用 ChatGPT 來做的事情</title><link href="http://localhost:4000/programming/2022/12/19/the-things-I-delegate-to-chatGPT.html" rel="alternate" type="text/html" title="最近用 ChatGPT 來做的事情" /><published>2022-12-19T15:25:00+08:00</published><updated>2022-12-19T15:25:00+08:00</updated><id>http://localhost:4000/programming/2022/12/19/the-things-I-delegate-to-chatGPT</id><content type="html" xml:base="http://localhost:4000/programming/2022/12/19/the-things-I-delegate-to-chatGPT.html">&lt;p&gt;最近有個 AI 對話機器人，在短期內爆紅，連結如下。&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;最近用-chatgpt來做的事情&quot;&gt;最近用 ChatGPT 來做的事情&lt;/h3&gt;

&lt;p&gt;最近有個 AI 對話機器人，在短期內爆紅，連結如下。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://chat.openai.com/chat&quot;&gt;https://chat.openai.com/chat&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;很多人都會分享他做的事情，這邊我也貼一篇我讓他做的事情。&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;寫詩&quot;&gt;寫詩&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn-images-1.medium.com/max/800/1*TwtFtA3WfnLVXbfKdEh9WQ.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;詩是寫出來了，但…沒有五言，也不是絕句。然後我就問 AI 懂不懂什麼叫五言絕句。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn-images-1.medium.com/max/800/1*9CsaTIzX767XTHDrQ7nYOQ.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;雖然知道五言絕句是什麼，但…寫不出正確的格式。&lt;/p&gt;

&lt;p&gt;所以，你也可以請他寫個程式開發的詩。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn-images-1.medium.com/max/800/1*rIPENTQoE7eQ1oOxXMMSXA.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;然後也試了 Android 的版本，看來是把詞抽換掉而已。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn-images-1.medium.com/max/800/1*9vmtLQ8BtpLwEws8QWUxIg.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;寫文件企劃書得獎感言工作日誌&quot;&gt;寫文件，企劃書，得獎感言，工作日誌&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn-images-1.medium.com/max/800/1*6ieZPzpQDtRafQaLarnBnQ.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;嗯…這個 AI 活在朝九晚五的平行宇宙裡。&lt;/p&gt;

&lt;p&gt;接下來試試得獎感言&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn-images-1.medium.com/max/800/1*2F8NBB42s8soIUkDKxYo5A.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;還可以在得獎感言中加料&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn-images-1.medium.com/max/800/1*yemcnLV3Bvg4MTyHoBGSPg.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;加料加到中樂透，也可以&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn-images-1.medium.com/max/800/1*fYKZapz3GtG2bxiY5eF88A.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;程式解題還可以選語言但這個很多人玩過了&quot;&gt;程式解題，還可以選語言(但這個很多人玩過了)&lt;/h3&gt;

&lt;p&gt;用 Go 寫一個數字是否質數&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn-images-1.medium.com/max/800/1*w29CcGSWeKIzGa6zO2ZCMA.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;用 perl 寫費布納西數列&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn-images-1.medium.com/max/800/1*x2tz0bUatid5h8u4FLR4zg.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;寫一個登入網頁也能做到&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn-images-1.medium.com/max/800/1*ZUVOHz7Lio3DfQGSp6pUDg.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;接下來這個世界，一定會因為這個產品，而開始不一樣的!&lt;/p&gt;

&lt;p&gt;By &lt;a href=&quot;https://medium.com/@atimis19&quot;&gt;Marvin Lin&lt;/a&gt; on &lt;a href=&quot;https://medium.com/p/d3f2a789ca53&quot;&gt;December 29, 2022&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://medium.com/@atimis19/%E6%9C%80%E8%BF%91%E7%94%A8-chatgpt-%E4%BE%86%E5%81%9A%E7%9A%84%E4%BA%8B%E6%83%85-d3f2a789ca53&quot;&gt;Canonical link&lt;/a&gt;&lt;/p&gt;</content><author><name>Marvin Lin</name></author><category term="programming" /><category term="ChatGPT" /><category term="AI" /><summary type="html">最近有個 AI 對話機器人，在短期內爆紅，連結如下。</summary></entry></feed>