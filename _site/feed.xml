<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.9.3">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2023-07-05T15:54:55+08:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">Marvin 的 Swift 與程式開發筆記</title><subtitle>這個 blog 是包含了的軟體開發、投資、經驗和生活故事。透過這個 blog，我希望分享自己的生活和見聞，同時也透過這個平台與讀者交流互動，建立起彼此的社群。</subtitle><author><name>Marvin Lin</name></author><entry><title type="html">Swiftui Color Picker</title><link href="http://localhost:4000/swift/swiftui-color-picker.html" rel="alternate" type="text/html" title="Swiftui Color Picker" /><published>2023-07-05T15:10:00+08:00</published><updated>2023-07-05T15:10:00+08:00</updated><id>http://localhost:4000/swift/swiftui-color-picker</id><content type="html" xml:base="http://localhost:4000/swift/swiftui-color-picker.html">&lt;h2 id=&quot;此文章曾發於-2022-年-it-鐵人賽---使用-swiftui-讓有趣的點子變成-apps&quot;&gt;此文章曾發於 2022 年 IT 鐵人賽 - 使用 SwiftUI 讓有趣的點子變成 Apps&lt;/h2&gt;

&lt;h2 id=&quot;apple-對-color-picker-的文件&quot;&gt;Apple 對 Color Picker 的文件&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://developer.apple.com/documentation/swiftui/colorpicker&quot;&gt;https://developer.apple.com/documentation/swiftui/colorpicker&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Color Picker 是我很喜歡的一個 SwiftUI 元件，這個元件如果是用 UIKit 手刻，雖然是刻的出來，但非常耗時，如果遇到這樣的需求，以前通常都是找別人寫好的第三方套件。在 SwiftUI，現在直接做好了這個元件，只要 iOS 14+ 的版本，都可以使用。在顏色的選擇上，可以使用 格線/光譜/滑桿 來調，真的是美觀又方便。&lt;/p&gt;

&lt;p&gt;我們現在來讓錶盤帶一點顏色&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/swift/color-picker/color_picker_1.png&quot; alt=&quot;color picker&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/swift/color-picker/color_picker_2.jpeg&quot; alt=&quot;color picker&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/swift/color-picker/color_picker_3.png&quot; alt=&quot;color picker&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;新增-colorpickercontainerview&quot;&gt;新增 ColorPickerContainerView&lt;/h3&gt;

&lt;p&gt;ColorPicker 需要輸入一個 Binding 參數，這邊設計讓外部(也就是錶的那一頁)傳入，然後在裡面更新後，讓外面的錶盤有變化。&lt;/p&gt;

&lt;div class=&quot;language-swift highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;ColorPickerContainerView&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;View&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  
  &lt;span class=&quot;kd&quot;&gt;@Binding&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;dialColor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Color&lt;/span&gt;
  
  &lt;span class=&quot;k&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;body&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;some&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;View&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    
    &lt;span class=&quot;kt&quot;&gt;ColorPicker&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;錶盤顏色&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;selection&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dialColor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;padding&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;ColorPickerContainerView_Previews&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;PreviewProvider&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  
  &lt;span class=&quot;kd&quot;&gt;@State&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;previewDialColor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Color&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;white&lt;/span&gt;
  
  &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;previews&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;some&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;View&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;ColorPickerContainerView&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;dialColor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;previewDialColor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;/assets/swift/color-picker/color_picker_4.png&quot; alt=&quot;color picker 4&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/swift/color-picker/color_picker5.png&quot; alt=&quot;color picker 5&quot; /&gt;&lt;/p&gt;

&lt;p&gt;即使是 preview，按下 action 後，也可以把顏色盤叫起來。&lt;/p&gt;

&lt;h3 id=&quot;修改錶盤讓錶盤顏色可以跟著變化&quot;&gt;修改錶盤，讓錶盤顏色可以跟著變化&lt;/h3&gt;

&lt;p&gt;加上一個 dialColor，讓顏色可以被更改。但原來的 Circle().stroke() 下方，要再加一個錶面，這個下方的錶面，是真正變色的地方。&lt;/p&gt;

&lt;div class=&quot;language-swift highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;ClockDialView&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;View&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  
  &lt;span class=&quot;kd&quot;&gt;@Binding&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;dialColor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Color&lt;/span&gt;
  
  &lt;span class=&quot;k&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;tickLength&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;CGFloat&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;
  
  &lt;span class=&quot;k&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;body&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;some&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;View&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    
    &lt;span class=&quot;kt&quot;&gt;ZStack&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;c1&quot;&gt;/// 真的會變色的部分&lt;/span&gt;
      &lt;span class=&quot;kt&quot;&gt;Circle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;fill&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dialColor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;padding&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;c1&quot;&gt;/// 外框&lt;/span&gt;
      &lt;span class=&quot;kt&quot;&gt;Circle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;stroke&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;padding&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
      
      &lt;span class=&quot;n&quot;&gt;ticks&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;padding&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
      
      &lt;span class=&quot;kt&quot;&gt;HStack&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;kt&quot;&gt;Spacer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
        &lt;span class=&quot;kt&quot;&gt;BackwardsClockNumberView&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
        &lt;span class=&quot;kt&quot;&gt;Spacer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  
  &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;isLongTick&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;position&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Bool&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;position&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
 
  &lt;span class=&quot;k&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;ticks&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;some&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;View&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;

    &lt;span class=&quot;kt&quot;&gt;ForEach&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;..&amp;lt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;60&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;position&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;longerTick&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tickLength&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.8&lt;/span&gt;

      &lt;span class=&quot;kt&quot;&gt;Tick&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;tickLength&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;isLongTick&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;position&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;longerTick&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tickLength&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;stroke&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;lineWidth&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;rotationEffect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;radians&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Double&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pi&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;60&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Double&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;position&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)))&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;ClockDialView_Previews&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;PreviewProvider&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  
  &lt;span class=&quot;kd&quot;&gt;@State&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;dialColor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Color&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;green&lt;/span&gt;
  
  &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;previews&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;some&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;View&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;ClockDialView&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;dialColor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dialColor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;tickLength&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;frame&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;200&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;200&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;alignment&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;center&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;在錶盤頁把顏色選擇器叫起來&quot;&gt;在錶盤頁把顏色選擇器叫起來&lt;/h3&gt;

&lt;p&gt;先新增一個檔案 ColorPickerContainer&lt;/p&gt;

&lt;p&gt;在原來的 wiki page button 右邊，再放一個設定 button。&lt;/p&gt;

&lt;div class=&quot;language-swift highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;ClockContainerView&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;View&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  
  &lt;span class=&quot;k&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;CGFloat&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;200&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;CGFloat&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;200&lt;/span&gt;
  
  &lt;span class=&quot;kd&quot;&gt;@StateObject&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;clockwork&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Clockwork&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;init&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
  
  &lt;span class=&quot;kd&quot;&gt;@State&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;dialColor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Color&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;white&lt;/span&gt;
  
  &lt;span class=&quot;kd&quot;&gt;@State&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;isShowingGraceWikiSheet&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;
  
  &lt;span class=&quot;kd&quot;&gt;@State&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;isShowingColorPicker&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;
  
  &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;graceWikiPageURL&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;https://en.wikipedia.org/wiki/Grace_Hopper&quot;&lt;/span&gt;
  
  &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;angleUtility&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;AngleUtility&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;init&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
  
  &lt;span class=&quot;k&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;body&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;some&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;View&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;ZStack&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      
      &lt;span class=&quot;kt&quot;&gt;VStack&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;kt&quot;&gt;HStack&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
          &lt;span class=&quot;kt&quot;&gt;Spacer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
          &lt;span class=&quot;n&quot;&gt;wikiProfileButton&lt;/span&gt;
          &lt;span class=&quot;n&quot;&gt;settingButton&lt;/span&gt;
            &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;padding&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;trailing&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;kt&quot;&gt;Spacer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
      
      &lt;span class=&quot;kt&quot;&gt;Group&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;kt&quot;&gt;ClockDialView&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;dialColor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dialColor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;kt&quot;&gt;HandShape&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;handLength&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;hour&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
          &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;fill&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Color&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;blue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
          &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;rotationEffect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Angle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;degrees&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;clockwork&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;hourAngle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
        &lt;span class=&quot;kt&quot;&gt;HandShape&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;handLength&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;minute&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
          &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;fill&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Color&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cyan&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
          &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;rotationEffect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Angle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;degrees&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;clockwork&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;minuteAngle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
        &lt;span class=&quot;kt&quot;&gt;HandShape&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;handLength&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;second&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
          &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;fill&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Color&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;red&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
          &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;rotationEffect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Angle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;degrees&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;clockwork&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;secondAngle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
        &lt;span class=&quot;kt&quot;&gt;Circle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
          &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;fill&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Color&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;orange&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
          &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;frame&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;alignment&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;center&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
      &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;frame&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;alignment&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;center&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;/// 將 wiki profile button 抽出&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;wikiProfileButton&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;some&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;View&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;Button&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      
      &lt;span class=&quot;n&quot;&gt;isShowingGraceWikiSheet&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;toggle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;label&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;kt&quot;&gt;Image&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;systemName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;person.crop.circle&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;font&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;system&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;50&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;foregroundColor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;black&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;sheet&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;isPresented&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;isShowingGraceWikiSheet&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;kt&quot;&gt;BCWebView&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;urlString&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;graceWikiPageURL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;/// 將設定按鈕抽出&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;settingButton&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;some&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;View&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    
    &lt;span class=&quot;kt&quot;&gt;Button&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      
      &lt;span class=&quot;n&quot;&gt;isShowingColorPicker&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;toggle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;label&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;kt&quot;&gt;Image&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;systemName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;gearshape.circle&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;font&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;system&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;50&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;foregroundColor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;black&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;sheet&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;isPresented&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;isShowingColorPicker&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;kt&quot;&gt;ColorPickerContainerView&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;dialColor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dialColor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;錶盤變色功能，完成。&lt;/p&gt;

&lt;p&gt;如果你想改變針的顏色，也是差不多的事情。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/swift/color-picker/color_picker_6.png&quot; alt=&quot;color picker&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;上架的-app&quot;&gt;上架的 app&lt;/h2&gt;

&lt;p&gt;這個時鐘的 app，我後來有寫一個上架的版本，有串接 Firebase 和 RevenueCat。整個大小只有 5.1 MB。 SwiftUI 真的讓我驚豔！&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://apps.apple.com/backwards-clock/id1632935212&quot;&gt;https://apps.apple.com/backwards-clock/id1632935212&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/swift/color-picker/color_picker_7.png&quot; alt=&quot;backward clock&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;相關文件&quot;&gt;相關文件&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://developer.apple.com/documentation/swiftui/colorpicker&quot;&gt;https://developer.apple.com/documentation/swiftui/colorpicker&lt;/a&gt;&lt;/p&gt;</content><author><name>Marvin Lin</name></author><category term="swift" /><category term="Swift" /><category term="SwiftUI" /><category term="Apple" /><category term="iOS" /><summary type="html">此文章曾發於 2022 年 IT 鐵人賽 - 使用 SwiftUI 讓有趣的點子變成 Apps</summary></entry><entry><title type="html">SwiftUI 專案加入 WebView</title><link href="http://localhost:4000/swift/add-webview-in-swiftui.html" rel="alternate" type="text/html" title="SwiftUI 專案加入 WebView" /><published>2023-06-30T13:41:00+08:00</published><updated>2023-06-30T13:41:00+08:00</updated><id>http://localhost:4000/swift/add-webview-in-swiftui</id><content type="html" xml:base="http://localhost:4000/swift/add-webview-in-swiftui.html">&lt;h2 id=&quot;此文章曾發於-2022-年-it-鐵人賽---使用-swiftui-讓有趣的點子變成-apps&quot;&gt;此文章曾發於 2022 年 IT 鐵人賽 - 使用 SwiftUI 讓有趣的點子變成 Apps&lt;/h2&gt;

&lt;p&gt;現代的 app，基本都會有和網路進行溝通的 feature。這一篇文章會讓 app 加上一頁 WebView，去連到葛麗絲．霍普的 wiki 頁面。這樣可以保證大家在讀取資料的時候，資訊是和 wiki 上的一樣，而不用在每次資訊有更新的時候，需要進行 client 端的更新。&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;葛麗絲．霍普的 wiki &lt;a href=&quot;https://en.wikipedia.org/wiki/Grace_Hopper&quot;&gt;https://en.wikipedia.org/wiki/Grace_Hopper&lt;/a&gt;&lt;/p&gt;

&lt;/blockquote&gt;

&lt;h3 id=&quot;swiftui-使用-webview-的方法&quot;&gt;SwiftUI 使用 WebView 的方法&lt;/h3&gt;

&lt;p&gt;目前 SwiftUI 沒有 WebView 元件，所以需要使用 WebKit 的 WKWebView。橋接 SwiftUI 和 UIKit 的方法很簡單，讓元件 conform UIViewRepresentable 後，實作 makeUIView(:), updateUIView(:,:)。就能使用 UIKit 的元件了。&lt;/p&gt;

&lt;p&gt;在這個 WKWebViewContainer 裡面，我們會放一個 url: URL，讓裡面的 WKWebView，去讀這個 URLRequest。&lt;/p&gt;

&lt;div class=&quot;language-swift highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;WebKit&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;WKWebViewContainer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;UIViewRepresentable&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    
    &lt;span class=&quot;k&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;URL&lt;/span&gt;
    
    &lt;span class=&quot;kd&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;makeUIView&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Context&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;WKWebView&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;WKWebView&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    
    &lt;span class=&quot;kd&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;updateUIView&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;webView&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;WKWebView&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Context&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;request&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;URLRequest&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;webView&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;load&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;再把 WKWebViewContainer 包起來，這樣可以在上下左右加上其他 SwiftUI 元件。&lt;/p&gt;

&lt;div class=&quot;language-swift highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;MyWebView&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;View&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  
  &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;urlString&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;String&lt;/span&gt;
  
  &lt;span class=&quot;k&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;body&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;some&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;View&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;url&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;URL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;urlString&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;kt&quot;&gt;WKWebViewContainer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;kt&quot;&gt;Text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;not a url&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;嗯…🤔🤔🤔🤔🤔 如果解不開，目前的程式碼是會呈現一個  Text，這樣有點怪怪，這邊加上一個 Error View 好了。&lt;/p&gt;

&lt;p&gt;在 Image 上，可以直接使用 SF Symbole 的 wifi.exclamationmark，不用特別去找素材。&lt;/p&gt;

&lt;p&gt;SF Symbols 的網站，這邊可以下載 SF Symbols 的 app。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://developer.apple.com/sf-symbols/&quot;&gt;https://developer.apple.com/sf-symbols/&lt;/a&gt;&lt;/p&gt;

&lt;div class=&quot;language-swift highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// 如果 URLString 給錯，就會跳 Error view&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;URLNotCorrectView&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;View&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  
  &lt;span class=&quot;k&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;body&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;some&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;View&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    
    &lt;span class=&quot;kt&quot;&gt;VStack&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;kt&quot;&gt;Image&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;systemName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;wifi.exclamationmark&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;font&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;system&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;150&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;padding&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
      &lt;span class=&quot;kt&quot;&gt;Text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Oops! Internet got error&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;bold&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;multilineTextAlignment&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;center&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;font&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;system&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;44&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;/assets/swift/webview-in-swiftui/no_internet.png&quot; alt=&quot;no internet view&quot; width=&quot;50%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;最後， MyWebView 看起來就像這樣&lt;/p&gt;

&lt;div class=&quot;language-swift highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;MyWebView&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;View&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  
  &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;urlString&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;String&lt;/span&gt;
  
  &lt;span class=&quot;k&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;body&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;some&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;View&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;url&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;URL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;urlString&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;kt&quot;&gt;WKWebViewContainer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;kt&quot;&gt;URLNotCorrectView&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;不過， preview 是沒辦法看到網頁的，所以我們在進入點，把 View 換成 BCWebView，看一下結果。&lt;/p&gt;

&lt;div class=&quot;language-swift highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;SwiftUI&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;@main&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;DemoApp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;App&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;body&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;some&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Scene&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;kt&quot;&gt;WindowGroup&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
          &lt;span class=&quot;kt&quot;&gt;MyWebView&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;urlString&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;https://en.wikipedia.org/wiki/Grace_Hopper&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;你也可以故意塞一個不是網址的 string，當無法轉換成 URL，就會出現前面寫好的網路故障 View。&lt;/p&gt;

&lt;h3 id=&quot;展示-grace-hopper-的-wiki&quot;&gt;展示 Grace Hopper 的 wiki&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/assets/swift/webview-in-swiftui/grace_hopper_wiki.png&quot; alt=&quot;Wiki of Grace Hopper&quot; width=&quot;50%&quot; /&gt;&lt;/p&gt;</content><author><name>Marvin Lin</name></author><category term="swift" /><category term="Swift" /><category term="SwiftUI" /><category term="WebView" /><summary type="html">此文章曾發於 2022 年 IT 鐵人賽 - 使用 SwiftUI 讓有趣的點子變成 Apps</summary></entry><entry><title type="html">Apple 開發者需要知道的 WWDC23 大小事</title><link href="http://localhost:4000/swift/what-apple-developers-need-to-know-at-wwdc23.html" rel="alternate" type="text/html" title="Apple 開發者需要知道的 WWDC23 大小事" /><published>2023-06-27T14:46:00+08:00</published><updated>2023-06-27T14:46:00+08:00</updated><id>http://localhost:4000/swift/what-apple-developers-need-to-know-at-wwdc23</id><content type="html" xml:base="http://localhost:4000/swift/what-apple-developers-need-to-know-at-wwdc23.html">&lt;h2 id=&quot;下方圖片連結到-apple-的-wwdc23-sessions-頁面---what-apple-developers-need-to-know-at-wwdc23&quot;&gt;下方圖片連結到 Apple 的 WWDC23 sessions 頁面 - What Apple developers need to know at WWDC23&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://developer.apple.com/videos/play/wwdc2023/111488/&quot;&gt;&lt;img src=&quot;/assets/swift/wwdc23/developer_needs_to_know_wwdc23.png&quot; alt=&quot;What Apple developers need to know at WWDC23&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;這個敏捷燕子飛行的下方有個-platformsappend-加的就是-vision-pro&quot;&gt;這個敏捷燕子飛行的下方，有個 platforms.append() 加的就是 vision pro&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;(https://developer.apple.com/videos/play/wwdc2023/111488/)&quot;&gt;&lt;img src=&quot;/assets/swift/wwdc23/platform_append.png&quot; alt=&quot;Platform append vision pro&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;影片文字檔&quot;&gt;影片文字檔&lt;/h2&gt;

&lt;p&gt;Hey, developers, it’s Dub Dub ‘23, where we’re talking infinite possibilities.&lt;/p&gt;

&lt;p&gt;175 new sessions helping you bring your ideas onto two billion Apple devices, from hundreds of Apple engineers and designers.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Hello, everyone. - Hey, Allen.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If you want to catch up on Swift data…&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;I’m excited to see what you will build.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;…take widgets to new places, or design for watchOS 10, there’s a session for that.&lt;/p&gt;

&lt;p&gt;SwiftUI custom animations, Xcode’s enhanced test navigator, and Xcode previews, there’s a session for that.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Let’s jump right in.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Swift-DocC documentation, anyone? - Yeah.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;You can unleash your AAA game with Apple silicon now on Mac Pro and Mac Studio with M2.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Boom! And of course, immerse yourself in visionOS and Reality Composer Pro.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;It looks like we’re up and running.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;There’s a bunch of sessions for that.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;♪ Upbeat electronic music ♪ Get all of this and the platform State of the Union at developer.apple.com.&lt;/p&gt;

&lt;p&gt;And if you find yourself dreaming about the future, there’s a session for that.&lt;/p&gt;

&lt;p&gt;♪&lt;/p&gt;

&lt;h2 id=&quot;影片文字檔中文翻譯&quot;&gt;影片文字檔中文翻譯&lt;/h2&gt;

&lt;p&gt;嘿，開發者們，這是Dub Dub ‘23，我們將談論無限的可能性。&lt;/p&gt;

&lt;p&gt;有175個新的研討會，幫助你將你的想法帶到20億台蘋果設備上，由數百名蘋果工程師和設計師提供支持。&lt;/p&gt;

&lt;p&gt;大家好。- 嘿，艾倫。
如果你想了解Swift數據…&lt;/p&gt;

&lt;p&gt;我很期待看到你們的建設成果。
…將小工具應用到新的領域，或者為watchOS 10設計，都有相關的研討會。&lt;/p&gt;

&lt;p&gt;SwiftUI自定義動畫、Xcode增強版測試導航器和Xcode預覽，都有相應的研討會。&lt;/p&gt;

&lt;p&gt;讓我們開始吧。&lt;/p&gt;

&lt;p&gt;Swift-DocC文檔，有人有興趣嗎？- 是的。&lt;/p&gt;

&lt;p&gt;現在你可以在Mac Pro和Mac Studio上利用Apple silicon打造出AAA級遊戲。&lt;/p&gt;

&lt;p&gt;轟隆隆！當然，還有著陶醉於visionOS和Reality Composer Pro。&lt;/p&gt;

&lt;p&gt;看起來我們已經準備好了。&lt;/p&gt;

&lt;p&gt;還有很多相關的研討會。&lt;/p&gt;

&lt;p&gt;♪ 歡快的電子音樂 ♪ 在developer.apple.com上了解所有這些內容，以及平台的年度報告。&lt;/p&gt;

&lt;p&gt;如果你發現自己對未來充滿夢想，也有相應的研討會供你參加。&lt;/p&gt;

&lt;h2 id=&quot;相關連結&quot;&gt;相關連結&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://developer.apple.com/videos/play/wwdc2023/111488/&quot;&gt;&lt;img src=&quot;/assets/swift/wwdc23/developer_needs_to_know_wwdc23.png&quot; alt=&quot;What Apple developers need to know at WWDC23&quot; /&gt;&lt;/a&gt;&lt;/p&gt;</content><author><name>Marvin Lin</name></author><category term="swift" /><category term="Swift" /><category term="WWDC" /><summary type="html">下方圖片連結到 Apple 的 WWDC23 sessions 頁面 - What Apple developers need to know at WWDC23</summary></entry><entry><title type="html">17 件 WWDC23 的大小事</title><link href="http://localhost:4000/swift/things17-wwdc23.html" rel="alternate" type="text/html" title="17 件 WWDC23 的大小事" /><published>2023-06-27T14:28:00+08:00</published><updated>2023-06-27T14:28:00+08:00</updated><id>http://localhost:4000/swift/things17-wwdc23</id><content type="html" xml:base="http://localhost:4000/swift/things17-wwdc23.html">&lt;h2 id=&quot;下方影片連結整理了-wwdc23-的-17-件大小事我特別喜歡影片開頭的那個-picker-效果&quot;&gt;下方影片連結，整理了 WWDC23 的 17 件大小事，我特別喜歡影片開頭的那個 picker 效果&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://developer.apple.com/videos/play/wwdc2023/111486/&quot;&gt;&lt;img src=&quot;/assets/swift/wwdc23/things17_in_wwdc23.png&quot; alt=&quot;17 件 WWDC23 的大小事&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;重點當然是-vision-pro&quot;&gt;重點，當然是 vision pro&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://developer.apple.com/videos/play/wwdc2023/111486/&quot;&gt;&lt;img src=&quot;/assets//swift/wwdc23/things17_visionPro.png&quot; alt=&quot;vision pro&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;影片文字檔&quot;&gt;影片文字檔&lt;/h2&gt;

&lt;p&gt;Seventeen big and little things from Apple WWDC23.&lt;/p&gt;

&lt;p&gt;Meet a new friend? Swap info, like that, with NameDrop.&lt;/p&gt;

&lt;p&gt;And your contact poster that you’ll design and redesign will show up when you call or FaceTime.&lt;/p&gt;

&lt;p&gt;They missed it? Leave a FaceTime message.&lt;/p&gt;

&lt;p&gt;And when you do connect, easily switch from iPhone to Apple TV.&lt;/p&gt;

&lt;p&gt;Wait, where’s the Siri remote?  Now iPhone will find that too.&lt;/p&gt;

&lt;p&gt;And you’ll find the perfect reaction with stickers from your own photos.&lt;/p&gt;

&lt;p&gt;Ooh, shiny.&lt;/p&gt;

&lt;p&gt;Reflect on your day with suggestions from your photos, music, locations, even workouts, or just get some stuff off your chest.&lt;/p&gt;

&lt;p&gt;Then clear your head with a long ride.&lt;/p&gt;

&lt;p&gt;Get lost for a little while, but not like lost, lost, because you can take topographic and offline maps with you.&lt;/p&gt;

&lt;p&gt;And Snoopy too! Check In automatically lets a friend know when you get home.&lt;/p&gt;

&lt;p&gt;And while you’re out, Adaptive Audio keeps your attention on the important sounds around you.&lt;/p&gt;

&lt;p&gt;Speaking of, multiple timers and widgets are now on all your devices, including the world’s thinnest 15-inch laptop, the new MacBook Air.&lt;/p&gt;

&lt;p&gt;Put in some serious work with Game Mode on Mac.&lt;/p&gt;

&lt;p&gt;When you’re charging iPhone, Standby will turn it into a simple clock, a music player, or even a live scoreboard.&lt;/p&gt;

&lt;p&gt;Ugh, I might have to take this.&lt;/p&gt;

&lt;p&gt;♪ Elevator music ♪ Nope! Screen your calls with Live Voicemail.&lt;/p&gt;

&lt;p&gt;That’s so  cool! A-ha! New and improved Autocorrect.&lt;/p&gt;

&lt;p&gt;And you can log your moods and emotions right on iPhone, iPad, and watch.&lt;/p&gt;

&lt;p&gt;Hold on.&lt;/p&gt;

&lt;p&gt;There was something else – something really big.&lt;/p&gt;

&lt;p&gt;♪ Piano music bridge ♪ This.&lt;/p&gt;

&lt;p&gt;♪  ♪ Yeah. It was a big day.&lt;/p&gt;

&lt;p&gt;Get all the updates on apple.com.&lt;/p&gt;

&lt;h2 id=&quot;影片文字檔中文翻譯&quot;&gt;影片文字檔中文翻譯&lt;/h2&gt;

&lt;p&gt;蘋果WWDC23大大小小的十七項新功能。&lt;/p&gt;

&lt;p&gt;遇到新朋友了嗎？使用NameDrop交換資訊就像這樣。&lt;/p&gt;

&lt;p&gt;當你打電話或FaceTime時，你所設計和重新設計的聯絡人海報將會顯示出來。&lt;/p&gt;

&lt;p&gt;他們沒有接電話嗎？留下一個FaceTime訊息。&lt;/p&gt;

&lt;p&gt;當你連接時，可以輕鬆地從iPhone切換到Apple TV。&lt;/p&gt;

&lt;p&gt;等等，Siri遙控器在哪裡？現在iPhone也能找到它。&lt;/p&gt;

&lt;p&gt;你可以從自己的照片中找到完美的反應，使用貼紙。&lt;/p&gt;

&lt;p&gt;噢，閃閃發亮。&lt;/p&gt;

&lt;p&gt;從你的照片、音樂、位置甚至是運動建議中反思你的一天，或者只是把一些東西從你的胸口拿出來。&lt;/p&gt;

&lt;p&gt;然後騎著長途旅行，清空你的頭腦。&lt;/p&gt;

&lt;p&gt;迷路一陣子，但不是真的迷路，因為你可以帶著地形圖和離線地圖。&lt;/p&gt;

&lt;p&gt;還有史努比！Check In功能可以在你到家時自動通知朋友。&lt;/p&gt;

&lt;p&gt;而當你外出時，自適應音效功能將讓你注意到周圍重要的聲音。&lt;/p&gt;

&lt;p&gt;說到這個，多個計時器和小工具現在可以在你的所有設備上使用，包括世界上最薄的15英寸筆記型電腦——新款MacBook Air。&lt;/p&gt;

&lt;p&gt;在Mac上使用遊戲模式進行嚴肅的工作。&lt;/p&gt;

&lt;p&gt;當你充電iPhone時，待機模式可以將其變成一個簡單的時鐘、音樂播放器，甚至是一個實時比分板。&lt;/p&gt;

&lt;p&gt;唉，我可能得接這個電話。&lt;/p&gt;

&lt;p&gt;♪ 電梯音樂 ♪ 不！使用實時語音郵件篩選你的來電。&lt;/p&gt;

&lt;p&gt;這太酷了！啊哈！新版且改進的自動更正功能。&lt;/p&gt;

&lt;p&gt;你可以在iPhone、iPad和手錶上記錄你的心情和情緒。&lt;/p&gt;

&lt;p&gt;等等。&lt;/p&gt;

&lt;p&gt;還有其他的東西——非常重要的東西。&lt;/p&gt;

&lt;p&gt;♪ 鋼琴樂橋段 ♪ 就是這個。&lt;/p&gt;

&lt;p&gt;♪ ♪ 是的。這是一個重要的一天。&lt;/p&gt;

&lt;p&gt;了解所有的更新，請前往apple.com。&lt;/p&gt;

&lt;h2 id=&quot;相關連結&quot;&gt;相關連結&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://developer.apple.com/videos/play/wwdc2023/111486/&quot;&gt;&lt;img src=&quot;/assets/swift/wwdc23/things17_in_wwdc23.png&quot; alt=&quot;17 件 WWDC23 的大小事&quot; /&gt;&lt;/a&gt;&lt;/p&gt;</content><author><name>Marvin Lin</name></author><category term="swift" /><category term="Swift" /><category term="WWDC" /><summary type="html">下方影片連結，整理了 WWDC23 的 17 件大小事，我特別喜歡影片開頭的那個 picker 效果</summary></entry><entry><title type="html">Xcode 15 beta 2 Release notes ChatGPT 繁中翻譯</title><link href="http://localhost:4000/swift/xcode15-beta2-release-notes.html" rel="alternate" type="text/html" title="Xcode 15 beta 2 Release notes ChatGPT 繁中翻譯" /><published>2023-06-26T16:30:00+08:00</published><updated>2023-06-26T16:30:00+08:00</updated><id>http://localhost:4000/swift/xcode15-beta2-release-notes</id><content type="html" xml:base="http://localhost:4000/swift/xcode15-beta2-release-notes.html">&lt;p&gt;以下是 Xcode 15 beta 2 的 Release notes，將將整個文字丟入 ChatGPT 後翻譯出來的繁體中文結果。&lt;/p&gt;

&lt;h3 id=&quot;概觀&quot;&gt;概觀&lt;/h3&gt;
&lt;p&gt;Xcode 15 beta 2 包括 iOS 17、iPadOS 17、tvOS 17、watchOS 10、macOS Sonoma 和 visionOS 的 SDK。Xcode 15 beta 2 版本支援在 iOS 12 及更高版本、tvOS 12 及更高版本、watchOS 4 及更高版本上進行設備上的調試。Xcode 15 beta 2 需要在運行 macOS Ventura 13.4 或更高版本的 Mac 上使用。&lt;/p&gt;

&lt;h3 id=&quot;一般&quot;&gt;一般&lt;/h3&gt;
&lt;p&gt;Xcode 15 Beta 2 中已解決的問題
修復：Catalyst 應用程式連結 GameKit 框架的單元測試在啟動時會因 dyld 的「找不到符號」錯誤而崩潰。 (109730080)&lt;/p&gt;

&lt;h3 id=&quot;已知問題&quot;&gt;已知問題&lt;/h3&gt;
&lt;p&gt;如果任何圖層小於 1024x1024 像素，visionOS 應用程式圖示在主畫面中不會顯示視覺效果（深度、動畫、邊緣紋理）。Xcode 對此行為不提供警告或錯誤訊息。 (107568059)&lt;/p&gt;

&lt;p&gt;解決方法：使 visionOS 應用程式圖示的所有圖層都為 1024x1024 像素 (@2x)，並在每個圖層的 Asset Catalog 檢視器中啟用「置中於畫布」和「匹配內容圖像」選項。&lt;/p&gt;

&lt;p&gt;使用 Xcode 15 無法進行針對 AMD 硬體和 macOS Ventura 的離線編譯。 (108372489)&lt;/p&gt;

&lt;p&gt;解決方法：使用 Xcode 14 創建針對 AMD 硬體的 macOS Ventura 相容的離線編譯二進位檔。&lt;/p&gt;

&lt;p&gt;運行 iOS 17 的裝置在使用 USB 纜線連接到 Mac 時，可能會連續快速提示用戶兩次信任該 Mac。第二個信任提示可能會遮擋第一個提示，使用戶無法輸入密碼。 (109539668)&lt;/p&gt;

&lt;p&gt;解決方法：要設定 iOS 裝置信任該 Mac，請在任何未被遮擋的密碼螢幕上點擊「信任」並輸入裝置密碼。然後斷開並重新連接 iOS 裝置至 Mac。iOS 裝置可能會再次提示信任該 Mac。要接受，請點擊「信任」並再次輸入裝置密碼。&lt;/p&gt;

&lt;p&gt;當 Apple Vision Pro 透過無線配對但目前未連接時，Xcode 的「Apple Vision（專為 iPad 設計）」選項中會缺少運行目標。此狀態下，Xcode 的「設備和模擬器」視窗將顯示「Apple Vision Pro 將按需連接」的訊息。 (109744525)&lt;/p&gt;

&lt;p&gt;解決方法：在「設備和模擬器」視窗中，對 Apple Vision Pro 進行控制點擊或右鍵點擊，然後點擊「連接」。&lt;/p&gt;

&lt;p&gt;Xcode 15 可能無法與運行 iOS 17+ 和 tvOS 17+ 的裝置以及與運行 iOS 17+ 的 iPhone 配對的手錶通訊，如果某些 VPN 啟用的話。 (110337781)&lt;/p&gt;

&lt;p&gt;解決方法：停用 VPN 以與裝置互動，並聯絡 VPN 供應商解決問題。&lt;/p&gt;

&lt;p&gt;在 macOS Sonoma 上，當嘗試自動安裝命令列工具（例如執行 xcode-select –install 後），您可能會收到一個錯誤訊息，指出這些工具目前無法使用。 (110346766)&lt;/p&gt;

&lt;p&gt;解決方法：手動安裝命令列工具，或在終端中執行以下命令：&lt;/p&gt;

&lt;p&gt;sudo mkdir -p /Library/Developer/CommandLineTools
sudo touch /Library/Developer/CommandLineTools/.beta
然後再試一次。&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;應用程式捷徑預覽&quot;&gt;應用程式捷徑預覽&lt;/h3&gt;
&lt;p&gt;已知問題
如果一個應用程式新增了一個與相應的 AppShortcuts.strings 或 AppShortcuts.xcstrings 檔案中已存在的 App 捷徑觸發片語相同的字串，重新編譯後，應用程式捷徑預覽可能不會更新。 (109494636)&lt;/p&gt;

&lt;p&gt;解決方法：在重新編譯應用程式之前進行清理操作，使應用程式捷徑預覽處於最新狀態。&lt;/p&gt;

&lt;p&gt;資源目錄
已知問題
當嘗試查看 visionOS 資源目錄時，Xcode 可能會崩潰。 (110739616)&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;console&quot;&gt;Console&lt;/h3&gt;
&lt;p&gt;已知問題
在 macOS Ventura 13.3 上運行時，從 Xcode 啟動時禁用「除錯執行檔」的可執行文件會將 NSLog 調用的輸出在 Xcode 調試控制台中重複顯示兩次。 (106648026)&lt;/p&gt;

&lt;p&gt;解決方法：升級到 macOS 13.4。&lt;/p&gt;

&lt;p&gt;在調試控制台中顯示的 os_log 訊息的最大允許大小比之前的 Xcode 版本更小。這可能導致較長的訊息在調試控制台中更常被截斷。 (109381234)&lt;/p&gt;

&lt;p&gt;解決方法：在項目中配置運行方案操作，將環境變數 IDELogRedirectionPolicy 的值設為 oslogToStdio，以通過標準輸入輸出流進行日誌流式傳輸，並增加大小限制。該策略禁用 os 日誌的結構化元數據。&lt;/p&gt;

&lt;h3 id=&quot;debugging&quot;&gt;Debugging&lt;/h3&gt;
&lt;p&gt;已知問題
無法從 LLDB 表達式求值器中調用外部 Swift 宏。 (109854291)&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;devicediscoveryui&quot;&gt;DeviceDiscoveryUI&lt;/h3&gt;
&lt;p&gt;已知問題
在構建 tvOS 模擬器時，DeviceDiscoveryUI 不可用。 (109224355)&lt;/p&gt;

&lt;h3 id=&quot;設備&quot;&gt;設備&lt;/h3&gt;
&lt;p&gt;已知問題
運行 iOS 17 的設備不支援從 Xcode 15 啟動的應用程式指定「Routing App Coverage File」。(80105713)&lt;/p&gt;

&lt;p&gt;Xcode 的「設備和模擬器」視窗無法準確顯示連接到 Mac 的設備的顏色。(98003308)&lt;/p&gt;

&lt;p&gt;當使用者從「設定」應用程式重新命名設備時，Xcode 不會自動刷新運行 iOS 17、watchOS 10 或 tvOS 17 的設備名稱。(98406919)&lt;/p&gt;

&lt;p&gt;解決方法：退出並重新啟動 Xcode。&lt;/p&gt;

&lt;p&gt;Xcode 的「設備和模擬器」視窗不會顯示安裝在運行 iOS 17、watchOS 10 和 tvOS 17 的設備上的應用程式圖示。(108568165)&lt;/p&gt;

&lt;p&gt;當 Xcode 透過無線連接到運行 iOS 17 的設備時，當設備使用 USB 纜線連接到 Mac 時，Xcode 不會自動切換到使用最快的連接方式。如果無線連接速度比 USB 連接慢，Xcode 可能會繼續使用無線連接與設備通訊。 (109466074)&lt;/p&gt;

&lt;p&gt;解決方法：在 Mac 上禁用並重新啟用 Wi-Fi 以中斷無線連接。Xcode 將自動通過 USB 重新連接到設備。&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;instruments&quot;&gt;Instruments&lt;/h3&gt;
&lt;p&gt;Xcode 15 Beta 2 的新功能
Instruments 15 包含了一個新的 RealityKit Trace 模板。此模板包含了幾個新的工具，用於在 visionOS 上進行應用程式和遊戲的性能分析。RealityKit Frames 工具將視覺化渲染一個幀的不同階段。RealityKit Metrics 偵測渲染堆疊中的瓶頸，並提供建議和關鍵指標以診斷和消除渲染瓶頸。這些關鍵指標包括 CoreAnimation 統計數據、3D 渲染統計數據、RealityKit 系統 CPU 時間、系統功耗影響等等。(104091516)&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;metal&quot;&gt;Metal&lt;/h3&gt;
&lt;p&gt;已知問題
Xcode 的 GPU 調試服務會自動嘗試連接到所有運行 iOS 17、watchOS 10 和 tvOS 17 的設備，這些設備已在本地區域網路中被發現。如果設備信任 Mac，它將接受連接，並可能比一般待機設備更快地耗盡電池電量。(108682066)&lt;/p&gt;

&lt;p&gt;解決方法：如果你不打算從 Xcode 開發使用該設備，請在 Xcode 的「設備和模擬器」視窗中，右鍵點擊設備，然後選擇「取消配對」。如果你希望在該設備上進行開發，請將其連接到電源來減輕電池耗盡的問題。&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;organizer&quot;&gt;Organizer&lt;/h3&gt;
&lt;p&gt;已知問題
從 TestFlight 在 visionOS 上安裝的 iOS 應用程式崩潰可能不會出現在 Organizer 的崩潰部分中。(107965403)&lt;/p&gt;

&lt;p&gt;解決方法：在 App Store Connect 中的你的應用程式的「定價和可用性」部分，啟用允許你的應用程式在 visionOS 上運行的核取方塊。&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;particle-emitters&quot;&gt;Particle Emitters&lt;/h3&gt;
&lt;p&gt;已知問題
在 Reality Composer Pro 中添加粒子發射器或載入粒子發射器可能會導致在基於 Intel 的 Mac 上崩潰。(110794948)&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;previews&quot;&gt;Previews&lt;/h3&gt;
&lt;p&gt;Xcode 15 Beta 2 中已解決的問題
修正：在 Seed 2 上編譯並在 macOS 15.0 Seed 1 上運行，或反之亦然時，預覽將崩潰。(110649872)&lt;/p&gt;

&lt;p&gt;已知問題
在由 watchOS 應用程式和 iOS 應用程式共用的小工具中預覽檔案時，預覽可能會失敗。(108017929)&lt;/p&gt;

&lt;p&gt;使用固定位置並導航到不與固定預覽相同目標的檔案時，預覽將失敗。(108738163)&lt;/p&gt;

&lt;p&gt;預覽畫布中的時間軸條目可能不會更新。(109223294)&lt;/p&gt;

&lt;p&gt;解決方法：關閉並重新開啟預覽畫布。&lt;/p&gt;

&lt;p&gt;返回 UIViewController 和 NSViewController 的預覽實例始終遵循安全區域。(109281049)&lt;/p&gt;

&lt;p&gt;解決方法：將您的視圖控制器封裝在一個 UIViewControllerRepresentable 中並附加 ignoresSafeArea 修改器。&lt;/p&gt;

&lt;p&gt;當採用 #Preview 宏語法時，部署目標 &amp;lt; iOS 17.0 的專案可能無法編譯。(109428179)&lt;/p&gt;

&lt;p&gt;解決方法：可以在 #Preview 上添加 @available 注釋。&lt;/p&gt;

&lt;p&gt;在預覽中連接新設備到 Mac 時，預覽畫布中的設備選擇器不會刷新。(109661791)&lt;/p&gt;

&lt;p&gt;解決方法：打開方案編輯器並在不進行更改的情況下關閉它。&lt;/p&gt;

&lt;p&gt;在 macOS 13 上創建的新小工具專案無法建構。(109897205)&lt;/p&gt;

&lt;p&gt;解決方法：移除模板中的 containerBackground 修改器。&lt;/p&gt;

&lt;p&gt;使用 Apple Vision Pro 預覽內容時，有時會出現陳舊的內容。(110509660)&lt;/p&gt;

&lt;p&gt;解決方法：等待更新的內容出現。&lt;/p&gt;

&lt;p&gt;當在相同模塊中定義的 Swift 類型擴展中的符號無法在 #Preview 中引用時，將使用 PreviewProvider，或直接將擴展的實現複製到 #Preview 本身或將其設為全局符號。(110671628)&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;reality-composer-pro&quot;&gt;Reality Composer Pro&lt;/h3&gt;
&lt;p&gt;已知問題
底部面板顯示的統計數據在展開的動畫部分中不顯示具有動畫的物件。(103162531)&lt;/p&gt;

&lt;p&gt;底部面板顯示的統計數據在計算紋理時忽略了 Shader Graph Materials。(109681637)&lt;/p&gt;

&lt;p&gt;在從 Studio Display 切換音頻設備到其他設備（如 AirPods 或內建揚聲器）後，Reality Composer Pro 可能會意外退出。(109912081)&lt;/p&gt;

&lt;p&gt;解決方法：保存項目並退出 Reality Composer Pro，切換音頻輸出設備，然後重新加載項目。&lt;/p&gt;

&lt;p&gt;在選擇模式下，底部面板顯示的統計數據可能會將資源計數兩次（例如，同一紋理計數兩次）。(110007062)&lt;/p&gt;

&lt;p&gt;當場景中未選中任何項目時，複製和粘貼菜單項目可能在編輯菜單中被禁用。(110181840)&lt;/p&gt;

&lt;p&gt;解決方法：在視口中打開上下文菜單進行粘貼，或先選中任何項目。&lt;/p&gt;

&lt;p&gt;某些庫資源無法通過點擊下載按鈕或使用下載菜單項目進行下載。(110209688)&lt;/p&gt;

&lt;p&gt;解決方法：將項目從庫拖動到主視口以啟動下載。&lt;/p&gt;

&lt;p&gt;在從 Reality Composer Pro 導出場景為 USDZ 文件時，某些圖像格式將按原樣導出，導致生成的 USDZ 文件無效。(110538624)&lt;/p&gt;

&lt;p&gt;場景層級結構中的鎖定項目仍然允許執行編輯操作。(110545827)&lt;/p&gt;

&lt;p&gt;音頻資源 “AtmosphereJungle” 不能加載，並將在後續版本中被移除。(110725118)&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;ShazamKit
已知問題
SHManagedSession.State 不可用。(109670750)&lt;/p&gt;

&lt;p&gt;SHLibrary.default.items 不可用。(109670918)&lt;/p&gt;

&lt;p&gt;SHManagedSession 在模擬器上不起作用。(109672477)&lt;/p&gt;

&lt;p&gt;解決方法：使用實體設備。&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;簽名和分發&quot;&gt;簽名和分發&lt;/h3&gt;
&lt;p&gt;已知問題
Xcode Organizer 窗口中的 TestFlight 內部測試分發支持目前不可用。(106239462)&lt;/p&gt;

&lt;p&gt;Xcode Organizer 窗口中的簡化分發方法不支持與使用自定義工作流時可用的所有錯誤恢復選項相同的功能。例如：使用簡化分發的方式上傳應用時，如果沒有應用記錄，Xcode 會顯示錯誤，而不允許您創建應用記錄。(109097705)&lt;/p&gt;

&lt;p&gt;解決方法：使用自定義方法。&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;simulator&quot;&gt;Simulator&lt;/h3&gt;
&lt;p&gt;Known Issues
在使用 iOS 14 或更高版本的模擬器運行時，狀態欄覆蓋可能被設置錯誤。(101511614)&lt;/p&gt;

&lt;p&gt;當使用 #Preview 宏定義的 iOS 應用目標 Apple Vision Pro (Designed for iPad) 時，可能會意外退出。(110801867)&lt;/p&gt;

&lt;p&gt;解決方法：註釋掉 #Preview 宏定義，使用傳統的 PreviewProvider API。&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;source-control&quot;&gt;Source Control&lt;/h3&gt;
&lt;p&gt;已知問題
上游更改可能會在 Xcode 編輯器中顯示為暫存更改。(109285038)&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;source-editor&quot;&gt;Source Editor&lt;/h3&gt;
&lt;p&gt;已知問題
在某些情況下，從其他宏擴展中展開的宏可能無法完全顯示。(107718413)&lt;/p&gt;

&lt;p&gt;宏擴展中不顯示實時問題。(108375601)&lt;/p&gt;

&lt;p&gt;如果當前工具鏈不匹配所選的 Xcode，打開文件時，源代碼編輯器可能會出現短暫的停頓。(109723219)&lt;/p&gt;

&lt;p&gt;解決方法：運行 xcode-select -s /Applications/YourXcodePath.app。&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;storekit-testing-in-xcode&quot;&gt;StoreKit Testing in Xcode&lt;/h3&gt;
&lt;p&gt;Known Issues
在事務管理器中通過“訂閱選項”對話框編輯自動續訂訂閱時，會創建一個新的事務，但續訂被禁用。這導致新選擇的訂閱到期並且不會續訂。(109403724)&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;storekittest&quot;&gt;StoreKitTest&lt;/h3&gt;
&lt;p&gt;已知問題
新的 StoreKitTest API 在 SDK 中不可用。受影響的 API 包括：setSimulatedError(_:forAPI:)、simulatedError(forAPI:) 和 buyProduct(identifier:options:)。(110547289)&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;swift&quot;&gt;Swift&lt;/h3&gt;

&lt;p&gt;已知問題
非可拷貝（Noncopyable）類型目前無法在元組中使用，也無法作為泛型類型使用。特別是，這意味著它們無法存儲在陣列（Arrays）、字典（Dictionaries）或集合（Sets）中，也無法形成非可拷貝類型的選擇性（Optionals）或打印它們。(104669935)&lt;/p&gt;

&lt;p&gt;在啟用庫演進模式時，非可拷貝類型目前無法正常工作。(107371421)&lt;/p&gt;

&lt;p&gt;借用（borrowing）和消耗（consuming）參數修飾符只能用於非可拷貝類型的參數。在可拷貝類型的參數上使用這兩個修飾符將導致編譯錯誤。(108383660)&lt;/p&gt;

&lt;p&gt;非可拷貝類型無法在其 deinit 方法中進行變異（mutate）或消耗（consume）自身。(108682993)&lt;/p&gt;

&lt;p&gt;無法在泛型非可拷貝類型的消耗方法中丟棄自身。（108975216）&lt;/p&gt;

&lt;p&gt;如果一個~Copyable類型包含了泛型或協議類型的存儲屬性，那麼嘗試訪問該類型的計算屬性可能會導致編譯器崩潰。&lt;/p&gt;

&lt;p&gt;例如：&lt;/p&gt;
&lt;div class=&quot;language-swift highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Foo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;~&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Copyable&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;T&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;property&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Int&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;109161396&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;解決方法：嘗試將泛型或協議類型的字段封裝在一個類實例中。例如：&lt;/p&gt;

&lt;div class=&quot;language-swift highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Box&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;T&lt;/span&gt;
&lt;span class=&quot;nf&quot;&gt;init&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;value&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Foo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;~&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Copyable&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;box&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Box&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;T&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;box&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;value&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;property&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Int&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;在引入新變量的 if 或 switch 表達式中，當該 if 或 switch 用於賦值時，可能會產生虛假的“無法在作用域中找到’variableName’”錯誤。(109192116)&lt;/p&gt;

&lt;p&gt;逃逸閉包目前會消耗非可拷貝的捕獲值，而不是按照 SE-390 中指定的借用（borrowing）方式。(109217216)&lt;/p&gt;

&lt;p&gt;當消耗非可拷貝類型並重新賦值時，lldb 不再在當前框架中顯示該變量。(109218404)&lt;/p&gt;

&lt;p&gt;對非可拷貝變量應用消耗運算符會導致不必要的拷貝。(109222496)&lt;/p&gt;

&lt;p&gt;解決方法：使用 let _ = variableName 來消耗該值。&lt;/p&gt;

&lt;p&gt;在嘗試對可選鏈進行賦值時，if 或 switch 表達式可能會產生虛假的“僅可在…中使用”錯誤。(109305454)&lt;/p&gt;

&lt;p&gt;具有大量擴展的 Swift 模塊可能會遇到編譯時間過長的問題。(109543968)&lt;/p&gt;

&lt;p&gt;具有在定義文件之外被引用的非可拷貝類型的 deinits 將導致編譯時崩潰。(109679168)&lt;/p&gt;

&lt;p&gt;非可拷貝枚舉不能有 deinit 或包含 indirect 案例，與 SE-390 不同。(109686538)&lt;/p&gt;

&lt;p&gt;解決方法：若要為枚舉添加 deinit，請在相關案例中添加帶有 deinit 的結構體。若要解決 indirect 案例，請將枚舉的 payload 包裝在一個類中。&lt;/p&gt;

&lt;p&gt;在某些情況下，使用 _ = x 來抑制關於借用參數的“未使用變量”警告可能會引發不正確的“無法被消耗”的錯誤。(109958008)&lt;/p&gt;

&lt;p&gt;解決方法：使用 _ 作為綁定名稱標記參數為未使用：&lt;/p&gt;

&lt;div class=&quot;language-swift highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;method&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;parameter&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;borrowing&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;Type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;swift-和-c-互操作性&quot;&gt;Swift 和 C++ 互操作性&lt;/h3&gt;
&lt;p&gt;已知問題
從 Swift 中調用 std::string 值的 append 函數可能會導致編譯器崩潰。(107018724)&lt;/p&gt;

&lt;p&gt;解決方法：在需要時，使用 += 運算符將內容添加到 C++ 字符串，而不是使用 append。&lt;/p&gt;

&lt;p&gt;在啟用調試時，為 C++ 類型添加初始化器的 Swift 擴展可能會導致編譯器崩潰。(107561753)&lt;/p&gt;

&lt;p&gt;在 Swift 中使用一個 C++ 類模板的多個特化可能會導致重複定義的鏈接錯誤。(107757051)&lt;/p&gt;

&lt;p&gt;無法使用 Swift 中的 Set 值初始化 C++ 的 std::set 類型。(107909624)&lt;/p&gt;

&lt;p&gt;Xcode 的程式碼補全結果在 Swift 代碼中有時會顯示具有不正確參數類型（Any）的 C++ 方法。(108855791)&lt;/p&gt;

&lt;p&gt;Xcode 在 Swift 中不會為 C++ 命名空間成員提供程式碼補全結果。(109714059)&lt;/p&gt;

&lt;p&gt;通過 SWIFT_COMPUTED_PROPERTY 注解將 C++ 成員作為屬性導入到 Swift 中，Swift 文件中的索引無法正確工作。(109714153)&lt;/p&gt;

&lt;p&gt;包含 Objective-C 指針數據成員且沒有其他非平凡數據成員或特殊成員函數的 C++ 結構或類型，在 Intel 架構上從 Swift 中調用的 Objective-C 方法中傳遞不正確，導致運行時行為不正確或崩潰。(109714315)&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;swift-packages&quot;&gt;Swift Packages&lt;/h3&gt;
&lt;p&gt;已解決的問題（在 Xcode 15 Beta 2 中）
修復：在項目編輯器中查看套件依賴時，任何具有 Exact Version 規則的套件的版本號都會重置為 1.0.0。(110303613)&lt;/p&gt;

&lt;p&gt;已知問題
當目標目的地是 macOS 以外的平台時，Swift 宏可能無法構建。(110541100)&lt;/p&gt;

&lt;p&gt;解決方法：選擇 macOS 目的地進行構建，或從 package.swift 中刪除 .testTarget。&lt;/p&gt;

&lt;h3 id=&quot;swiftdata&quot;&gt;SwiftData&lt;/h3&gt;
&lt;p&gt;已知問題
在刪除項目後，SwiftUI 在動畫期間可能嘗試引用已刪除的內容，導致崩潰。(109838173)&lt;/p&gt;

&lt;p&gt;解決方法：在刪除後明確保存。&lt;/p&gt;

&lt;h3 id=&quot;test-navigator&quot;&gt;Test Navigator&lt;/h3&gt;
&lt;p&gt;已知問題
測試套件偶爾顯示為“(Missing Suite)”。(109423329)&lt;/p&gt;

&lt;p&gt;解決方法：打開其他導航器，然後重新打開測試導航器。&lt;/p&gt;

&lt;h3 id=&quot;testflight&quot;&gt;TestFlight&lt;/h3&gt;
&lt;p&gt;已知問題
具有低於 6.0 的最小部署目標的 watchOS 應用可能無法正確安裝 TestFlight。(109797881)&lt;/p&gt;

&lt;p&gt;解決方法：暫時將最小部署目標設置為 6.0 或更高。&lt;/p&gt;

&lt;p&gt;測試
Xcode 15 Beta 2 中的新功能
watchOS 上的 UI 測試現在會在未處理的情況下自動關閉警報窗口。(59571331)&lt;/p&gt;

&lt;p&gt;已解決的問題（在 Xcode 15 Beta 2 中）
現在為 Objective-C 測試啟用了完整的例外處理，這可能導致某些對象在以前泄漏時被釋放或解構。(47727351)&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;UI Automation
已知問題
當 UI 自動化運行時，visionOS 沒有任何視覺指示。仍需要輸入設備的密碼才能開始 UI 自動化。(85512012)&lt;/p&gt;

&lt;p&gt;UI 測試
已知問題
選擇截圖而非屏幕錄製的 UI 測試可能無法看到附加的截圖。(109908952)&lt;/p&gt;

&lt;p&gt;VideoToolbox
已知問題
canImport(VideoToolbox) 在 watchOS 上不返回 false。(109324910)&lt;/p&gt;

&lt;p&gt;解決方法：使用條件 !os(watchOS)。&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;visionos-模擬器&quot;&gt;visionOS 模擬器&lt;/h3&gt;
&lt;p&gt;已知問題
沒有用於模擬 Apple Vision Pro 的沉浸式皇冠的用戶界面。(109429267)&lt;/p&gt;

&lt;p&gt;解決方法：使用 XCTest 的 XCUIDevice.rotateDigitalCrown(delta:) 方法。&lt;/p&gt;

&lt;p&gt;模擬器不支持 Spatial Audio 的所有功能。您可以使用模擬器測試部分音頻功能，但最終測試應在實際設備上進行。(109912117)&lt;/p&gt;

&lt;p&gt;僅在 Intel Mac 上運行時，visionOS 模擬器的紋理容量有限。渲染某些材質可能導致模擬器重新啟動。(110746210)&lt;/p&gt;

&lt;p&gt;僅在 Intel Mac 上運行時，在 visionOS 模擬器上，Diorama 示例應用程序將崩潰。(110864503)&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;xcode&quot;&gt;Xcode&lt;/h3&gt;
&lt;p&gt;已知問題
在將任何設備從「一般 &amp;gt; 支援的目標」中添加或刪除後，「Apple Vision (Designed for iPad)」運行目標將從可用目標中消失。「顯示 Apple Vision (Designed for iPhone &amp;amp; iPad) 目標」建構設置將自動設置為 No，但 Apple Vision (Designed for iPhone &amp;amp; iPad) 仍然保留在支援的目標清單中。在添加或刪除其他設備類型時，可能會自動添加「Designed for iPad」目標。(110810619)&lt;/p&gt;

&lt;p&gt;解決方法：在修改「支援的目標」清單後，將「顯示 Apple Vision (Designed for iPhone &amp;amp; iPad) 目標」建構設置設為 Yes。&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;xcode-cloud&quot;&gt;Xcode Cloud&lt;/h3&gt;
&lt;p&gt;已知問題
在為 Xcode Cloud 上的新產品進行設置後，可能會立即顯示「無法打開編輯器」對話框。(109781276)&lt;/p&gt;

&lt;p&gt;解決方法：關閉對話框。&lt;/p&gt;

&lt;p&gt;Xcode Cloud 目前不支援 visionOS 的測試操作。(110793833)&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;updates-in-xcode-15-beta&quot;&gt;Updates in Xcode 15 Beta&lt;/h3&gt;

&lt;h3 id=&quot;general&quot;&gt;General&lt;/h3&gt;
&lt;p&gt;已解決的問題 (Xcode 15 Beta)
修復：現在可以直接在 canvas 中與 macOS 預覽互動。您可以按住實時預覽模式按鈕，在 Xcode 和應用程序預覽之間切換。(49271058)&lt;/p&gt;

&lt;p&gt;修復：對於在 iOS 17 或更高版本上進行鏈接的應用程序，URL 解析已從過時的 RFC 1738/1808 解析更新為與 URLComponents 相同的 RFC 3986 解析。這統一了 URL 和 URLComponents API 的解析行為。現在，URL 會自動對無效字符進行百分比編碼或 IDNA 編碼，以幫助創建有效的 URL。&lt;/p&gt;

&lt;p&gt;要檢查 urlString 是否嚴格符合 RFC，請使用新的 URL(string: urlString, encodingInvalidCharacters: false) 初始化程序。該初始化程序將所有字符保持不變，如果 urlString 明確無效，則返回 nil。(93368104)&lt;/p&gt;

&lt;p&gt;修復：Xcode 更可靠地固定了跨多行的 Swift 函數聲明，以便與 Xcode 的“滾動時顯示代碼結構”功能配合使用。(94476783)&lt;/p&gt;

&lt;p&gt;修復：控制台、Safari 和 Accessibility Inspector 無法無線連接到運行 iOS 和 tvOS 16.4 和 16.5 的設備。(108032308)&lt;/p&gt;

&lt;p&gt;修復：在系統內存壓力下，測試可能因“與 testmanagerd 的連接丟失”而失敗。(109163111)&lt;/p&gt;

&lt;p&gt;修復：首次嘗試時可能無法下載平台。(110278080)&lt;/p&gt;

&lt;p&gt;Apple Clang 編譯器
Xcode 15 Beta 的新功能
有一個關於 Apple 平台上 C++ 支持的新參考頁面：https://developer.apple.com/xcode/cpp/。(100245338)&lt;/p&gt;

&lt;p&gt;Clang 和構建系統支持一種名為“explicit modules”的模塊依賴項構建模式，它提高了構建性能、可靠性和正確性。新模式是可選的，可以通過在使用模塊的 C 和 Objective-C 項目中設置 _EXPERIMENTAL_CLANG_EXPLICIT_MODULES 作為用戶定義的構建設置來啟用。(104438594)&lt;/p&gt;

&lt;p&gt;在 C 和 C++ 中，現在禁止使用寬多字符字面量，例如 L’ab’，之前會將其解釋為 L’b’。這個變化的動機在字符字面量 P2362 中有說明。&lt;/p&gt;

&lt;p&gt;已實現以下 C++20 語言功能：&lt;/p&gt;

&lt;p&gt;完全實現了立即函數 [consteval]。(P1073R3)&lt;/p&gt;

&lt;p&gt;已實現以下 C++23 語言功能：&lt;/p&gt;

&lt;p&gt;取消對 volatile 複合操作的棄用。(P2327R1)&lt;/p&gt;

&lt;p&gt;支援 #warning。(P2437R1)&lt;/p&gt;

&lt;p&gt;界定的轉義序列。(P2290R3)&lt;/p&gt;

&lt;p&gt;命名通用字符轉義。(P2071R2)&lt;/p&gt;

&lt;p&gt;支援將 UTF-8 作為可移植源文件編碼。(P2295R6)&lt;/p&gt;

&lt;p&gt;放寬對 wchar_t 的要求，以匹配現有實踐。(P2460R2) (108334479)&lt;/p&gt;

&lt;p&gt;已解決的問題 (Xcode 15 Beta)
改進了 ARC 優化器，使 Objective-C 和 Swift 對象可以更早地被銷毀。這會導致依賴弱引用或無主引用而無需對目標對象進行強引用的代碼出現問題或崩潰。例如，這可能會在不必要地在一次性異步塊回調中使用“弱 self”捕獲的代碼中意外發生。(108386578)&lt;/p&gt;

&lt;p&gt;x86 矢量化器使用飽和算術指令，可以獲得更短且更快的代碼。這可能會改變程序的行為，對於隱含依賴溢出行為的應用程序，例如將浮點值轉換為無法表示原始值的整數類型。(108386879)&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Xcode 15 Beta 中已解決的問題：&lt;/p&gt;

&lt;p&gt;修正：ARC 優化器的改進使得 Objective-C 和 Swift 對象可以更早地被銷毀。這導致依賴於弱引用或無主引用而保持有效的代碼在沒有對目標對象進行強引用的情況下出現問題或崩潰。例如，在一次性異步塊回調中不必要地使用了”weak self”捕獲的代碼可能會發生這種情況。 (108386578)&lt;/p&gt;

&lt;p&gt;修正：x86 矢量化器使用飽和算術指令，可以產生更短更快的代碼。這可能會改變應用程序的行為，例如，將浮點值轉換為無法表示原始值的整數類型時，應用程序可能會隱式依賴溢出行為。 (108386879)&lt;/p&gt;

&lt;p&gt;資源目錄：
Xcode 15 Beta 中的新功能：&lt;/p&gt;

&lt;p&gt;Xcode 現在為資源目錄中的每個顏色和圖像生成 Swift 和 Objective-C 符號。這些符號提供了一種更安全、更易於使用的引用資源的方式，可以防止重命名和拼寫錯誤，利用編譯器的類型檢查功能，並與代碼完成集成。
Swift 資源符號生成為 ColorResource 和 ImageResource 類型的靜態屬性。可以使用 SwiftUI、UIKit 和 AppKit 的初始化器來實例化顏色和圖像。
Objective-C 資源符號提供為字符串常量，可以通過導入 “GeneratedAssetSymbols.h” 標頭文件來訪問。
資源符號生成默認情況下為啟用，但可以通過設置 “Generate Asset Symbols” 的構建設置來禁用。
默認情況下為 SwiftUI、UIKit 和 AppKit 生成符號支持，但可以使用 “Generate Swift Asset Symbol Framework Support” 的構建設置進行自定義。
Xcode 15 Beta 中已解決的問題：&lt;/p&gt;

&lt;p&gt;修正：在”添加新資源”菜單中現在有一個”帶有命名空間的文件夾”項目，用於創建帶有命名空間的新文件夾。 (108468310)&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;build-system&quot;&gt;Build System：&lt;/h3&gt;
&lt;p&gt;Xcode 15 Beta 的新功能：&lt;/p&gt;

&lt;p&gt;存檔構建現在支持與其他構建操作相同的一組積極編譯優化，提高構建性能。 (98526053)
Xcode 現在會自動為項目中的動態庫和框架生成中間的基於文本的動態庫 (TBD) 文件。這些存根允許更準確地跟踪鏈接器依賴關係，這意味著不會改變導出符號集的更改不再需要重新鏈接所有的傳遞依賴關係，從而加快增量構建的速度。 (99972271)
Xcode 現在支持構建和使用在 Swift Packages 中定義的宏。 (101818756)
Xcode 15 Beta 中已解決的問題：&lt;/p&gt;

&lt;p&gt;修正：使用”複製文件”構建階段嵌入靜態框架時，現在會從框架中刪除靜態存檔，當它被嵌入到目標捆綁包中時。可以將 REMOVE_STATIC_EXECUTABLES_FROM_EMBEDDED_BUNDLES 構建設置設置為 NO，以選擇退出此行為。以前在傳統構建系統中使用的 COPY_RESOURCES_FROM_STATIC_FRAMEWORKS 構建設置，用於從靜態框架中提取和複製資源到目標捆綁包，對於新的構建系統已不再起作用，因為整個框架都被複製（如上所述，不包括靜態存檔）。 (47164939)
修正：在增量構建後，Swift 文件中的構建警告有時會消失的問題。 (105421512)
修正：如果未使用 Xcode 生成用於 App Store 提交的內容，則需要將 xcarchive 中的 Signatures 文件夾添加為附加內容。 (106438176)
修正：當在具有覆蓋文件類型的文件上使用預處理或組合等單文件構建操作時，現在可以正常工作了。以前，可能會出現”缺少輸入且沒有構建規則可用”的錯誤。 (107736241)
修正：在運行項目的常規構建後，依賴框架的本地化導出可能會失敗的問題。 (108867135)
Xcode 15 Beta 中的棄用功能：&lt;/p&gt;

&lt;p&gt;刪除了對 Bitcode 的支持，ENABLE_BITCODE 構建設置不再起作用。 (105281961)&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;c標準庫&quot;&gt;C++標準庫：&lt;/h3&gt;
&lt;p&gt;Xcode 15 Beta 的新功能：&lt;/p&gt;

&lt;p&gt;實現了以下新功能：&lt;/p&gt;

&lt;p&gt;實現了 C++17 中的 &lt;memory_resource&gt; 库
P2499R0 - string_view 範圍構造函數應該是 explicit 的
P2417R2 - 更多 constexpr bitset
P2445R1 - std::forward_like
P2273R3 - 使 std::unique_ptr 成為 constexpr
P0591R4 - 用於實現使用分配器的構造的實用函數
P2291R3 - 在 &lt;charconv&gt; 標頭中為整數類型的函數 to_chars 和 from_chars 添加 constexpr 修飾符
P0220R1 - 採用 C++17 的 Library Fundamentals V1 TS 組件
P0482R6 - char8_t：用於 UTF-8 字符和字符串的類型
P2438R2 - std::string::substr() &amp;amp;&amp;amp;
P0600R1 - 在庫中使用 nodiscard
P0339R6 - polymorphic_allocator&amp;lt;&amp;gt; 作為一個詞彙類型
P1169R4 - 實現了 static operator() 的庫部分
P0415R1 - constexpr for std::complex
P1208R6 - std::source_location
P0323R12 - std::expected
P1035R7 - 輸入範圍適配器
P2325R3 - Views 不應該要求是可默認構造的
P2446R2 - views::as_rvalue
P1020R1 - 使用默認初始化進行智能指針創建
P2210R2 - 優越的字符串分割
copy、move、copy_backward 和 move_backward 的 ranges 版本現在也對 std::deque&amp;lt;&amp;gt;::iterator 進行了優化，這可以在某些算法上提供多達 20 倍的性能改進。&lt;/charconv&gt;&lt;/memory_resource&gt;&lt;/p&gt;

&lt;p&gt;copy、move、copy_backward 和 move_backward 的 std 和 ranges 版本現在也對 join_view::iterator 進行了優化，這可以在某些迭代器和算法的組合上提供多達 20 倍的性能改進。 (108380402)&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Xcode 15 Beta 中的棄用功能：&lt;/p&gt;

&lt;h4 id=&quot;以下項目已被棄用或移除&quot;&gt;以下項目已被棄用或移除：&lt;/h4&gt;

&lt;p&gt;在 C++17 和更新的標準模式中不再提供 unary_function 和 binary_function。可以通過 _LIBCPP_ENABLE_CXX17_REMOVED_UNARY_BINARY_FUNCTION 重新啟用它們。&lt;/p&gt;

&lt;p&gt;從 libc++ 中刪除了幾個附帶的遞歸包含項。這些包含項基於使用的語言版本進行了刪除。如果在升級後的代碼中出現與缺少 std:: 實體相關的錯誤，請確保您包含了所有所需的頭文件。&lt;/p&gt;

&lt;p&gt;整數類型的 to_chars 和 from_chars 函數僅在 C++17 起可用。libc++ 在 C++11 和 C++14 中提供了這些函數作為一個未記錄的擴展。該擴展使得實現這些函數的 C++23 規範變得困難，因此該擴展已被刪除。
已刪除了 _LIBCPP_ENABLE_CXX03_FUNCTION 宏，該宏允許重新啟用現已棄用的 C++03 std::function 實現。需要使用 std::function 的用戶應切換到 C++11 或更高版本。&lt;/p&gt;

&lt;p&gt;&amp;lt;experimental/memory_resource&amp;gt; 的內容現在已被棄用，因為 libc++ 現在提供了 &lt;memory_resource&gt;。請改用 &lt;memory_resource&gt;。根據 libc++ 的 TS 棄用政策，&amp;lt;experimental/memory_resource&amp;gt; 將在下一個版本中被移除。&lt;/memory_resource&gt;&lt;/memory_resource&gt;&lt;/p&gt;

&lt;p&gt;std::char_traits 的基本模板已被標記為棄用，將在下一個版本中被移除。如果您正在使用 std::char_traits 與除 char、wchar_t、char8_t、char16_t、char32_t 或自定義字符類型（已對 std::char_traits 進行特化）之外的其他類型，當我們刪除基本模板時，您的代碼將停止工作。標準並不要求提供基本模板，而這樣的基本模板對於某些類型來說是不正確的，這可能會導致當前未被檢測到的意外行為。&lt;/p&gt;

&lt;p&gt;_LIBCPP_ENABLE_NODISCARD 和 _LIBCPP_DISABLE_NODISCARD_AFTER_CXX17 不再生效。C++20 中的標準所要求的 [[nodiscard]] 應用現在始終啟用。任何擴展的應用現在默認啟用，可以通過定義 _LIBCPP_DISABLE_NODISCARD_EXT 來禁用。&lt;/p&gt;

&lt;p&gt;在自由站立模式下，如果平台可以為該大小實現無鎖原子，則 atomic&lt;small enum=&quot;&quot; class=&quot;&quot;&gt; 不再包含鎖定字節。此 ABI 破壞僅影響使用 -ffreestanding 編譯的用戶，僅針對 atomic&lt;T&gt;，其中 T 是可能在平台上具有無鎖特性的非內建類型。 (108380359)&lt;/T&gt;&lt;/small&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Console
Xcode 15 Beta 中的新功能：
默认情况下，Xcode 通过统一的日志记录和活动跟踪基础设施来流式传输 os_logs。与之前版本的 Xcode 相比，输出可能以不同的格式进行，并且相对于标准 IO 的顺序也可能发生变化。要自定义日志记录的行为，请编辑运行方案操作以设置环境变量 IDELogRedirectionPolicy。值“oslogToStdio”将 os_log 消息重定向到标准 IO，并以与之前版本的 Xcode 相同的样式进行格式化。值 stdioToOSLog 将标准 IO 重定向到 os_log 消息，并在调试控制台中以附加元数据的方式呈现它们。 (109380695)&lt;/p&gt;

&lt;p&gt;Xcode 15 Beta 中已解决的问题：
修复：调试控制台中从 os_log 消息跳转到发出该消息的源代码行的操作仅在本地 Mac 或模拟器上调试可执行文件时受支持。在调试连接设备上的可执行文件时，菜单项将被禁用。 (109171925)&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;create-ml&quot;&gt;Create ML&lt;/h3&gt;
&lt;p&gt;Xcode 15 Beta 中已解决的问题：
修复：在新的 macOS Seed 1 构建中，使用 Xcode 内的开发人员工具中的 CreateML 应用程序无法使用手势动作分类器和手势姿势分类器训练机器学习模型。特定的错误消息是在单击“训练”按钮时出现的“意外错误”。 (108227967)&lt;/p&gt;

&lt;p&gt;调试
Xcode 15 Beta 中的新功能：
LLDB 现在在类型摘要中省略了默认的模板参数。&lt;/p&gt;

&lt;p&gt;例如：&lt;/p&gt;

&lt;p&gt;(lldb) frame variable
(std::vector&amp;lt;std::vector&amp;lt;std::basic_string&amp;lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &amp;gt;, std::allocator&amp;lt;std::basic_string&amp;lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &amp;gt; &amp;gt; &amp;gt;, std::allocator&amp;lt;std::vector&amp;lt;std::basic_string&amp;lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &amp;gt;, std::allocator&amp;lt;std::basic_string&amp;lt;char, std::char_traits&lt;char&gt;, std::allocator &lt;char&gt; &amp;gt; &amp;gt; &amp;gt; &amp;gt; &amp;gt;) nested = size=0 {}
现在显示为：&lt;/char&gt;&lt;/char&gt;&lt;/char&gt;&lt;/char&gt;&lt;/char&gt;&lt;/char&gt;&lt;/char&gt;&lt;/char&gt;&lt;/p&gt;

&lt;p&gt;(lldb) frame variable
(std::vector&amp;lt;std::vectorstd::string &amp;gt;) nested = size=0 {}
通过使用 frame variable –raw-output 选项，仍然可以查看默认参数。 (101329922)&lt;/p&gt;

&lt;p&gt;LLDB 现在支持在表达式求值中引用泛型类型参数。例如，给定以下代码：&lt;/p&gt;

&lt;p&gt;func use&lt;T&gt;(_ t: T) {
print(t) // 在此处设置断点
}&lt;/T&gt;&lt;/p&gt;

&lt;p&gt;use(5)
use(“Hello!”)
当在 use 处停止时，运行 po T.self 将在第一次调用中打印 Int，并在第二次中打印 String。这在与条件断点组合使用时特别有用，可以仅在泛型函数实例化为特定具体类型时停止。例如，将以下表达式作为断点的条件添加到 use 内部时，只有当变量 t 为 String 时才会停止：T.self == String.self。 (101976441)&lt;/p&gt;

&lt;p&gt;Xcode 现在显示 AppKit 运行时问题，例如通过代码构建的自动布局约束问题。 (105229806)&lt;/p&gt;

&lt;p&gt;创建监视点时，可以看到其祖先路径层次结构。这可以为您提供更好的上下文，尤其是在发生冲突时。 (106777931)&lt;/p&gt;

&lt;p&gt;Xcode 15 Beta 中已解决的问题：
修复：当您尝试从菜单中附加时，Xcode 不再显示僵尸进程。以前在筛选要调试的实际进程时，需要费力浏览这些无法调试的进程，这很令人困惑。此功能适用于所有平台。 (11113209)&lt;/p&gt;

&lt;p&gt;修复：重新定义了 p 和 po 命令别名，将其重新定义为新的 dwim-print 命令。dwim-print 命令使用最友好的实现来打印值。“DWIM” 是“Do What I Mean”的缩写。具体来说，当打印变量时，dwim-print 将使用与 frame variable 或 v 相同的实现。&lt;/p&gt;

&lt;p&gt;p 的输出不再包括持久的结果变量，例如 $0、$R0 等。偶尔需要持久结果的用户可以直接使用 expression（或唯一的前缀，如 expr），而不是使用 p。要每次启用持久结果，可以在 ~/.lldbinit 文件中重新定义 p 别名：&lt;/p&gt;

&lt;p&gt;command unalias p
command alias p dwim-print –persistent-result on –
dwim-print 还为 po 提供了新功能。po 命令现在可以通过地址打印 Swift 对象。当运行 po &lt;object-address&gt; 时，内嵌的 Swift 编译器将使用表达式 unsafeBitCast(&lt;object-address&gt;, to: AnyObject.self) 进行评估。 (104348863)&lt;/object-address&gt;&lt;/object-address&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Devices
Xcode 15 Beta 中已解决的问题：
修复：Apple Watch 模拟器现在在“设备和模拟器”窗口中作为独立的模拟器显示。 (106664675)&lt;/p&gt;

&lt;p&gt;修复：Xcode 需要连接到互联网才能准备运行 iOS 17、watchOS 10 或 tvOS 17 的设备进行开发。当由于缺乏互联网连接而导致开发准备失败时，Xcode 不会自动重新尝试准备设备进行开发。 (109511717)&lt;/p&gt;

&lt;p&gt;文档
Xcode 15 Beta 中的新功能：
Xcode 15 现在包括一个助理编辑器，可在您输入时实时预览 Swift-DocC 文档。&lt;/p&gt;

&lt;p&gt;您可以通过首先激活助理编辑器（通过编辑器 &amp;gt; 助理）然后在助理编辑器的跳转栏中选择“文档预览”来访问文档预览。&lt;/p&gt;

&lt;p&gt;助理编辑器支持 Swift 文件、Objective-C 头文件和文档标记文件。 (56250383)&lt;/p&gt;

&lt;p&gt;使用 Xcode 15 构建的文档现在包括外部模块的 Swift 扩展页面。&lt;/p&gt;

&lt;p&gt;例如，您可以扩展 SwiftUI 的 Image 结构以包含额外的初始化器：&lt;/p&gt;

&lt;p&gt;public extension Image {
/// 从给定的树懒创建图像。
///
/// 此初始化器对于显示静态树懒图像很有用。
/// 要创建包含树懒的交互式视图，请使用SlothView。
///
/// 一个冰树懒的屏幕截图，下方显示文本“冰树懒”。
init(_ sloth: Sloth) {
self.init(“(sloth.power)-sloth”)
}
}
该初始化器的文档现在将与您的项目的其他文档一起包含在内。&lt;/p&gt;

&lt;p&gt;如果您希望排除这些页面，请将 DOCC_EXTRACT_EXTENSION_SYMBOLS 构建设置设置为 NO。有关详细信息，请参阅构建设置参考。 (63987302)&lt;/p&gt;

&lt;p&gt;为了支持从其他文档工具更轻松迁移，Swift-DocC 现在支持一些基本的 Doxygen 样式命令，如 @param 和 @returns。 (69835334)&lt;/p&gt;

&lt;p&gt;文档链接的诊断现在包括关于链接失败的详细信息，并提供建议如何更新链接以引用已知符号。 (73903936)&lt;/p&gt;

&lt;p&gt;Swift-DocC 现在通过使用 @Row、@TabNavigator、@Links 和 @Metadata 等新指令来支持使用完全自定义布局设计页面。了解更多信息，请参阅 API 文档。 (97705029)&lt;/p&gt;

&lt;p&gt;使用 Xcode 15 构建的 Swift-DocC 网站现在包括快速导航功能，可以通过激活键盘快捷键并输入页面名称直接导航到页面。在浏览 Swift-DocC 网站时，按下 Shift+Cmd+O 或 Shift+/ 来激活新的快速导航弹出窗口。 (100346089)&lt;/p&gt;

&lt;p&gt;Xcode 15 Beta 中已解决的问题：
修复：Swift-DocC 现在正确地允许您使用 Markdown 的链接语法自定义 API 链接的标题。&lt;/p&gt;

&lt;p&gt;SlothCreator 包含一些您可以喂给虚拟树懒的不同树懒食物。
(79992417)&lt;/p&gt;

&lt;p&gt;修复：带有 Unicode 字符的符号名称的文档链接无法解析。 (85531439)&lt;/p&gt;

&lt;p&gt;修复：来自协议要求的符号的文档链接需要进行消歧义，以区分它们与可能的默认实现。 (98781530)&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;instruments-1&quot;&gt;Instruments&lt;/h3&gt;
&lt;p&gt;Xcode 15 Beta中的新功能
儀器現在可以在分配、洩漏和VM Tracker儀器中打開.memgraph文件，如果為進程啟用了Malloc Stack Logging，則可以可視化活動分配的時間軸。 Xcode Memory Graph調試器功能中增加了一個新的共享按鈕，可以在儀器中查看捕獲的.memgraph文件。（53014738）&lt;/p&gt;

&lt;p&gt;Instruments 15增加了一個新的dyld Activity儀器，可以可視化與應用程序啟動性能分析相關的dlopen、dlclose、靜態初始化器和其他dyld統計信息。 dyld Activity包含在App Launch模板中，並取代了Static Initializer儀器。（106383871）&lt;/p&gt;

&lt;p&gt;Instruments 15新增了一個新的音頻系統跟踪模板，提供了音頻和操作系統的全面視圖。它可視化應用程序如何與音頻服務器交互，使您瞭解音頻線程I/O循環和其他一般性能指標。（106843172）&lt;/p&gt;

&lt;p&gt;Xcode 15 Beta中解決的問題
修復：大大提高了使用複雜模板（如遊戲性能、系統跟踪和金屬系統跟踪）打開新文檔的性能。（72983621）&lt;/p&gt;

&lt;p&gt;修復了在HTTP Traffic儀器中選擇包含大型請求或響應主體的HTTP事務時應用程序卡死的問題。（87893253）&lt;/p&gt;

&lt;h3 id=&quot;interface-builder&quot;&gt;Interface Builder&lt;/h3&gt;
&lt;p&gt;Xcode 15 Beta中的新功能
Cocoa故事板Popover演示跳躍支持全尺寸內容檢查器屬性，允許呈現的內容超出安全區域插入並超過氣泡窗的箭頭區域。（102107829）&lt;/p&gt;

&lt;p&gt;NSView支持Clips Bounds屬性檢查器，更精細地控制視圖的內容是否應該被裁剪。（104581720）&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;鏈接&quot;&gt;鏈接&lt;/h3&gt;
&lt;p&gt;Xcode 15 Beta中的新功能
為了顯著提高靜態鏈接的速度，編寫了一個新的鏈接器。它是所有iOS二進制文件的默認鏈接器，以及使用“可合併庫”功能的任何人。可以通過使用-ld64明確要求使用經典鏈接器，但該經典鏈接器將在未來版本中被刪除。（108915312）&lt;/p&gt;

&lt;h3 id=&quot;本地化&quot;&gt;本地化&lt;/h3&gt;
&lt;p&gt;Xcode 15 Beta中的新功能
String Catalogs（.xcstrings）是Xcode中的一種新文件類型，可通過管理字符串並跟踪翻譯進度，輕鬆實現應用程序的本地化。Xcode會自動從源代碼中提取可本地化字符串，以使任何String Catalogs保持同步。可以在本地編輯器中查看和編輯String Catalogs，以預覽和管理項目中的本地化字符串。要開始使用，可以通過文件選擇器添加新的String Catalog，或者在菜單欄中選擇編輯&amp;gt;轉換&amp;gt;為String Catalog…，從而遷移現有的.strings和.stringsdict文件。（67254382）&lt;/p&gt;

&lt;p&gt;本地化目錄編輯器現在在查看和編輯導出的字符串時（對於具有此信息的文件）顯示字符串的翻譯狀態。（79101944）&lt;/p&gt;

&lt;p&gt;Xcode現在在本地化App Intents短語時給您更多靈活性。您現在可以在每個地區獨立地使用String Catalog編輯器在AppShortcuts.xcstrings中添加或刪除短語，以管理本地化字符串。（97283450）&lt;/p&gt;

&lt;p&gt;Xcode 15 Beta中解決的問題
修復：Xcode現在在文件檢查器中從可本地化文件中刪除所有本地化時，給您提供了取消本地化資源的選項。（11795220）&lt;/p&gt;

&lt;p&gt;修復了在導出Swift包的本地化時無法添加新的本地化的問題。現在可以使用String Catalog編輯器添加新的本地化。（92296781）&lt;/p&gt;

&lt;p&gt;修復：Xcode現在在導出本地化時在所有平台上構建多平台目標。（99457038）&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;metal調試器&quot;&gt;Metal調試器&lt;/h3&gt;
&lt;p&gt;Xcode 15 Beta中的新功能
幾何查看器和Shader調試器現在支持Mesh和Object渲染階段。綁定資源現在支持按照Mesh管線的Shader訪問進行過濾。（81698727）&lt;/p&gt;

&lt;p&gt;Metal調試器已更新，增強了對MetalFX的支持。您可以輕鬆導航到MetalFX調用，查看綁定資源，比較輸入和輸出結果。依賴關係查看器也已更新，您可以查看輸入依賴關係的來源，甚至查看完成升頻作業所需的時間。（101047483）&lt;/p&gt;

&lt;p&gt;緩衝區查看器已更新，具有新功能、改進的用戶界面和性能改進。新功能包括數據搜索、列固定、列過濾和類型轉換。（101241716）&lt;/p&gt;

&lt;p&gt;組織器
Xcode 15 Beta中的新功能
組織器中顯示了由於Foundation異常而導致的一些崩潰的異常原因。如果存在異常原因，它會顯示在Inspector中，在回溯視圖的右側顯示。（103453197）&lt;/p&gt;

&lt;p&gt;Playgrounds
Xcode 15 Beta中的新功能
Playgrounds控制台使用了Xcode 15的新控制台，並增加了內嵌查找等功能。（42891656）&lt;/p&gt;

&lt;p&gt;Xcode Playgrounds中的結果側邊欄顯示了該行中所有表達式的摘要，並提供了一個新的控件，可以查看有關每個表達式的詳細信息的彈出窗口。（105740414）&lt;/p&gt;

&lt;p&gt;Playgrounds地圖模板已更新，使用了現代的MapKit API。（107284909）&lt;/p&gt;

&lt;p&gt;Xcode 15 Beta中解決的問題
修復：Xcode Playgrounds中的結果側邊欄始終顯示最近結果的摘要，而不是結果的數量。（105108520）&lt;/p&gt;

&lt;p&gt;修復：在Xcode Playgrounds中選擇內聯結果會突出顯示生成結果的源代碼。（105426026）&lt;/p&gt;

&lt;p&gt;修復：SwiftUI彈簧動畫現在有專用的可視化結果。（106978230）&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;預覽&quot;&gt;預覽&lt;/h3&gt;
&lt;p&gt;Xcode 15 Beta中的新功能
預覽畫布新增了一個控制項，用於選擇預覽時使用的設備。默認情況下，它跟踪所選運行目的地的設備系列，但可以選擇特定的設備。這應優先使用previewDevice修飾符。（100562366）&lt;/p&gt;

&lt;p&gt;現在可以使用＃Preview宏創建預覽。這包括支援預覽SwiftUI、UIView＆UIViewController、NSView＆NSViewController和小部件時間軸提供程序、時間軸項目和實時活動。（101566716）&lt;/p&gt;

&lt;p&gt;macOS預覽現在在畫布中顯示窗口外框和工具欄。（105705642）&lt;/p&gt;

&lt;p&gt;選擇連接到Mac的設備進行預覽現在僅為該設備進行預覽。選擇模式和變體模式現在還使用連接的設備來渲染在Xcode中顯示的內容。（106208191）&lt;/p&gt;

&lt;p&gt;Xcode 15 Beta中解決的問題
修復：在某些類型上使用@objc註釋時，預覽失敗。（96018813）&lt;/p&gt;

&lt;p&gt;修復：在導航文件時保留畫布設置，例如畫布模式、設備設置和所選的預覽設備。（100999447）&lt;/p&gt;

&lt;h3 id=&quot;簽署和分發&quot;&gt;簽署和分發&lt;/h3&gt;
&lt;p&gt;Xcode 15 Beta中的新功能
選擇模擬器運行目的地時，現在可用於存檔操作。使用模擬器進行存檔操作將生成適用於所選平台上所有設備的CPU架構的應用程式。（13094592）&lt;/p&gt;

&lt;p&gt;項目編輯器中的Xcode簽署和功能選項卡現在支持添加與您的開發團隊和App ID關聯的Apple批准的受管功能。關聯的受管功能可在庫中看到，並與自動簽署一起使用。（27253063）&lt;/p&gt;

&lt;p&gt;xcodebuild -exportArchive支持使用App Store Connect身份驗證金鑰上傳應用程式到App Store Connect和Apple驗證服務。（76036452）&lt;/p&gt;

&lt;p&gt;Xcode現在向上傳到App Store Connect的人員發送應用程式上傳狀態推送通知。（100033585）&lt;/p&gt;

&lt;p&gt;Xcode組織器窗口現在支持簡化的存檔分發。現在可以通過點擊一次來上傳或導出存檔。簡化的分發方法使用建議的設置。自定義方法允許選擇其他選項。（103967573）&lt;/p&gt;

&lt;p&gt;Xcode 15 Beta中解決的問題
修復：如果您的應用程式與Game Center集成，請確保Entitlements.plist文件中存在com.apple.developer.game-center權限。之前的Xcode版本會自動將該權限注入到您的應用程式簽名中，如果它在您的設置文件中存在。這種行為與大多數其他權限不一致，已在Xcode 15中刪除。（106596235）&lt;/p&gt;

&lt;p&gt;修復：解決了在Xcode和Xcode Cloud中“管理版本和構建號”分發選項覆蓋應用程式中框架依賴項的版本和構建號的問題。分發應用程式時，框架依賴項將保留其原始版本和構建號。（106869375）&lt;/p&gt;

&lt;p&gt;修復：自動簽署可能無法為DriverKit驅動程序目標創建設置文件。（109588156）&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;模擬器
Xcode 15 Beta中解決的問題
修復：在運行於macOS 14 beta 1上的模擬器應用程式可能在連接遊戲控制器時崩潰。（110038857）&lt;/p&gt;

&lt;p&gt;原始碼控制
Xcode 15 Beta中的新功能
原始碼控制操作和Xcode Cloud操作已移至新的結合的“整合”菜單，取代了“原始碼控制”菜單。（105752873）&lt;/p&gt;

&lt;p&gt;Xcode現在完全與git的分段功能整合，提交代碼現在以非模態方式執行。（107490188）&lt;/p&gt;

&lt;p&gt;Xcode 15 Beta中解決的問題
修復了在審查拉取請求時可能錯誤插入額外撇號的問題。（107586336）&lt;/p&gt;

&lt;p&gt;Xcode 15 Beta中的廢棄項目
Xcode 15不再包括Xcode Server。Xcode Cloud是獲取代碼更改的自動構建/測試/部署工作流程的最佳方法。xcodebuild工具也可用於自定義自動化需求。（99606507）&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;source-editor-1&quot;&gt;Source Editor&lt;/h3&gt;
&lt;p&gt;Xcode 15 Beta中的新功能
#if…#endif區塊中的非活動代碼現在會變暗。可以在「文本編輯」&amp;gt;「顯示」偏好設定中關閉此功能。（2450148）&lt;/p&gt;

&lt;p&gt;Quick Help現在支援在文件註解中包含的圖像呈現。支援通過URL引用的外部圖像以及項目的文件目錄中的本地圖像。（45258339）&lt;/p&gt;

&lt;p&gt;Xcode現在支援通過在模塊名稱的引用上調用Quick Help來訪問SDK框架文件。例如，通過在import SwiftUI語句上進行Option點擊來激活Quick Help，現在會顯示SwiftUI的文件。（46583395）&lt;/p&gt;

&lt;p&gt;現在支援“gd” Vim命令跳轉到定義。（81116920）&lt;/p&gt;

&lt;p&gt;“顯示程式碼動作”命令已被替換為“顯示快速動作”，以快速訪問任何菜單命令。預設情況下，編輯器中Command點擊一個標記現在執行“跳轉到定義”。這可以在「導航」偏好設定中進行更改。Control點擊一個標記會彈出標準上下文菜單，該菜單現在包含了所有在“程式碼動作”中可用的命令。（86179596）&lt;/p&gt;

&lt;p&gt;添加了一個“格式化為多行”重構動作，將代碼拆分到獨立的行中。（93150897）&lt;/p&gt;

&lt;p&gt;改進了VoiceOver支援的編輯功能。源代碼的地標和行號信息現在顯示在VoiceOver的“更多內容”菜單中。配件，包括斷點、源控制更改和代碼折疊標籤出現為VoiceOver鏈接項目。源編輯器縮排偏好設定也與VoiceOver的語音和聲音縮排偏好設定同步。此外，使用VoiceOver導航源編輯器已經改進，編輯器的重要部分現在作為VoiceOver視窗標誌包含在內。（100877198）&lt;/p&gt;

&lt;p&gt;在使用QuickHelp時，當類型不明確時，會顯示多個符號的信息。（101256759）&lt;/p&gt;

&lt;p&gt;在代碼完成中，只包含一個默認參數的函數現在在代碼完成中自動展開顯示。在一個包含多個默認參數的函數上按右箭頭，會展開顯示其參數的所有可能排列。（103815908）&lt;/p&gt;

&lt;p&gt;現在支援選擇內部區塊的“i&amp;lt;”和“i&amp;gt;”Vim命令。（104433144）&lt;/p&gt;

&lt;p&gt;代碼完成現在在聲明Swift類型時建議名稱。（106005529）&lt;/p&gt;

&lt;p&gt;Xcode 15 Beta中解決的問題
修復：快速說明彈出窗口中使用的字體大小現在會自動調整以匹配編輯器當前主題的大小。（6955736）&lt;/p&gt;

&lt;p&gt;修復：在右括號之前按回車鍵時，源編輯器不應該添加額外的一行。（64872737）&lt;/p&gt;

&lt;p&gt;修復：修復了多行字符串文字和字符串插值的語法突出顯示的一些問題。（75009350）&lt;/p&gt;

&lt;p&gt;修復：“%”Vim命令在視覺模式下現在可以正常工作。（79076961）&lt;/p&gt;

&lt;p&gt;修復：在選擇整行內容時，當輸入開括號時錯誤地在所選代碼之前和之後插入換行符。（98690994）&lt;/p&gt;

&lt;p&gt;修復：打開“刪除行末多餘空白”時，在放棄對一段代碼或整個文件的更改時不要去除空白。（102984729）&lt;/p&gt;

&lt;p&gt;修復：上滾“^u”/下滾“^d”Vim命令現在在視覺模式下擴展選擇。（103835213）&lt;/p&gt;

&lt;p&gt;修復：插入光標後的文本“p”Vim命令現在插入文本而不會插入額外的新行。（104037351）&lt;/p&gt;

&lt;p&gt;修復：上滾“^u”/下滾“^d”Vim命令現在處理計數前綴。（104635013）&lt;/p&gt;

&lt;p&gt;修復：向前選擇段落“{”/向後選擇段落“}”Vim命令現在在視覺模式下擴展選擇。（104782625）&lt;/p&gt;

&lt;p&gt;修復：“更改大小寫“gu{motion}”和“gU{motion}”Vim命令現在更改字符而不是整個單詞。（104870847）&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;storekit-testing-in-xcode-1&quot;&gt;StoreKit Testing in Xcode&lt;/h3&gt;
&lt;p&gt;Xcode 15 Beta中的新功能
您現在可以在Xcode的StoreKit事務管理器中創建新的應用內購買事務。只需在事務管理器中點擊“+”按鈕，然後使用菜單配置您的新事務。只有在macOS 14.0、iOS 17.0、watchOS 10.0或tvOS 17.0上測試應用時才能使用部分功能。&lt;/p&gt;

&lt;p&gt;您可以在SKTestSession上使用新的buyProduct(identifier:options:) API，根據產品識別符在自動化測試中編程地創建應用內購買事務。當您在自動化測試中使用StoreKitTest框架時，可以使用額外的新的Product.PurchaseOption值來配置測試事務的屬性，例如購買日期。（101591947）&lt;/p&gt;

&lt;p&gt;StoreKit配置編輯器有一個新的“應用配置”菜單，允許您配置本地StoreKit測試環境的全局屬性。在應用配置菜單中，您可以選擇模擬任何可能出現的StoreKit 2 API錯誤。這會導致該API始終以您配置的錯誤失敗，以便您可以驗證您的應用正確處理每個StoreKit錯誤。您還可以在SKTestSession上使用新的setSimulatedError(_:forAPI:)方法，在自動化測試中編程地模擬失敗。（101592113）&lt;/p&gt;

&lt;p&gt;您現在可以在Xcode的StoreKit事務管理器中管理無活動調試會話的事務。一旦使用StoreKit配置從Xcode安裝應用，只要設備或模擬器已連接並運行，該應用就會顯示在事務管理器的導航器中。要在Mac應用程序中在沒有調試會話的情況下管理事務，您需要運行macOS 14.0或更高版本。要在其他設備和模擬器上管理事務，您需要測試系統運行iOS 17.0、watchOS 10.0或tvOS 17.0。只要有活動的調試會話，您仍然可以在舊操作系統上管理事務。（101592166）&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;swift-1&quot;&gt;Swift&lt;/h2&gt;
&lt;p&gt;Xcode 15 Beta中的新功能
Swift 5.9引入了參數包(parameter packs)的概念，允許您編寫接受任意數量的類型參數的通用代碼。使用each關鍵字聲明參數包，使用repeat關鍵字遍歷參數包中的類型：&lt;/p&gt;

&lt;div class=&quot;language-swift highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Pair&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;First&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Second&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nf&quot;&gt;init&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;first&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;First&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;second&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Second&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;makePairs&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;each&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;First&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;each&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Second&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;firsts&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;first&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;repeat&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;each&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;First&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;seconds&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;second&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;repeat&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;each&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Second&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;repeat&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Pair&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;each&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;First&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;each&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Second&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nf&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;repeat&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Pair&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;each&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;first&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;each&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;second&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;pairs&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;makePairs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;firsts&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;hello&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;seconds&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// &apos;pairs&apos; is &apos;(Pair(1, true), Pair(&quot;hello&quot;, 2.0))&apos;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;參數包的概念由SE-0393和SE-0398引入。（17414398）&lt;/p&gt;

&lt;p&gt;引入了withDiscardingTaskGroup和withThrowingDiscardingTaskGroup。這是一種新的結構化並發(task group)類型，可以在父任務不需要顯式等待其結果時，盡早並高效地丟棄已完成的子任務。這由SE-0381引入。（101965913）&lt;/p&gt;

&lt;p&gt;支持非可拷貝類型，遵循SE-0390。（104489948）&lt;/p&gt;

&lt;p&gt;支持consume運算符，遵循SE-0366。（104490005）&lt;/p&gt;

&lt;p&gt;遵循SE-0377，支持對函數參數使用借用(borrowing)和消耗(consuming)修飾符。這提供了對對象拷貝行為的更詳細控制，在將非可拷貝類型傳遞給函數時需要使用這些修飾符。（108511703）&lt;/p&gt;

&lt;p&gt;禁止使用@available將存儲的屬性標記為不可用(unavailable)，以防止意外的安全漏洞，避免運行任意不可用代碼和在運行時使用不可用的類型元數據：&lt;/p&gt;

&lt;div class=&quot;language-swift highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;@available&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;unavailable&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Unavailable&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nf&quot;&gt;init&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nf&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Unavailable.init()&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;S&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;@available&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;unavailable&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Unavailable&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;_&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;S&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 打印 &quot;Unavailable.init()&quot;&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;出於相同原因，禁止將deinit標記為不可用(unavailable)。（108800140）&lt;/p&gt;

&lt;p&gt;使用consume運算符可以明確結束局部變量值的生命周期，將所有權傳遞給周圍的調用、賦值或初始化，而不進行拷貝：&lt;/p&gt;

&lt;div class=&quot;language-swift highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
&lt;span class=&quot;k&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;apples&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;bananas&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;oranges&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;nf&quot;&gt;process&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;consume&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 將當前值傳遞，而不進行拷貝&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 開始構建新值&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;broccoli&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;cauliflower&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;asparagus&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;這是SE-0366的特性。（108800422）&lt;/p&gt;

&lt;p&gt;現在，函數可以聲明它們通過借用(borrowing)訪問調用方提供的值，還是通過消耗(consuming)允許調用方擁有該值：&lt;/p&gt;

&lt;div class=&quot;language-swift highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
&lt;span class=&quot;kd&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;HealthyFoods&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;values&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;// 聲明以 `consuming` 參數，因為我們想將它加入到我們自己的 `values` 數組中&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;mutating&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;consuming&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;values&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;這是SE-0377的特性。（108800628）&lt;/p&gt;

&lt;p&gt;現在，if和switch語句可以作為表達式使用，可以用於：&lt;/p&gt;

&lt;p&gt;從函數、屬性和閉包中返回值（使用隱式或顯式的return）
使用throw拋出錯誤
為變量賦值
声明变量
if或switch的每個分支必須是一個表達式，當選擇該分支時，該表達式的值將成為整個表達式的值。&lt;/p&gt;

&lt;div class=&quot;language-swift highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;bullet&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;isRoot&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;count&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;willExpand&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;count&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;- &quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;maxDepth&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;▹ &quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;▿ &quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Unicode&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Scalar&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Int&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;switch&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;value&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;..&amp;lt;&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x80&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x80&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;..&amp;lt;&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x0800&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x0800&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;..&amp;lt;&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x1_0000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;default&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;這是SE-0380的特性。（109305622）&lt;/p&gt;

&lt;p&gt;Swift 5.9包括了一個新的宏系統，可以用於消除樣板代碼並提供新的表達式API。宏使用新的宏介紹符號聲明：&lt;/p&gt;

&lt;div class=&quot;language-swift highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
&lt;span class=&quot;kd&quot;&gt;@freestanding&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;expression&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;macro&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;assert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;condition&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Bool&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;#&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;externalMacro&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;module&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;PowerAssertMacros&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;AssertMacro&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;宏具有參數和返回值類型&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;，&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;類似於函數&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;，&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;但它們作為獨立程序進行定義&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;，&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;操作語法樹&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;（&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;使用swift&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;syntax&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;），&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;並產生新的語法樹&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;，&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;將其合併到程序中&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;。&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;使用&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;@freestanding屬性標記的宏會在源代碼中展開&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;，&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;使用領先的&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;#&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;符號&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;：&lt;/span&gt;


&lt;span class=&quot;cp&quot;&gt;#assert(x + y == z) // 展開為檢查 x + y == z 的結果，如果為false則報錯&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;宏也可以標記為&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;@attached&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;，&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;這意味著它們將使用自定義屬性語法進行展開&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;。&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;例如&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;：&lt;/span&gt;


&lt;span class=&quot;kd&quot;&gt;@attached&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;peer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;names&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;overloaded&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;macro&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;AddCompletionHandler&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;#&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;externalMacro&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
  &lt;span class=&quot;nv&quot;&gt;module&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;ConcurrencyHelperMacros&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;nv&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;AddCompletionHandlerMacro&quot;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;@AddCompletionHandler&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;fetchAvatar&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;URL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;throws&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Image&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// 展開為...&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;fetchAvatar&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;URL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;completionHandler&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;@escaping&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Result&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Image&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Error&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kt&quot;&gt;Task&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;detached&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;try&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;fetchAvatar&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;from&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;nf&quot;&gt;completionHandler&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;success&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;catch&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;nf&quot;&gt;completionHandler&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;failure&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;宏是在Swift編譯器中由獨立程序實現的。Swift Package Manager的清單提供了一個新的宏目標類型來描述宏：&lt;/p&gt;

&lt;div class=&quot;language-swift highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
&lt;span class=&quot;kd&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;PackageDescription&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;CompilerPluginSupport&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;package&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Package&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;nv&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;ConcurrencyHelpers&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nv&quot;&gt;dependencies&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
          &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;package&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;https://github.com/apple/swift-syntax&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;from&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;509.0.0&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
    &lt;span class=&quot;nv&quot;&gt;targets&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
          &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;macro&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;ConcurrencyHelperMacros&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                 &lt;span class=&quot;nv&quot;&gt;dependencies&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
                     &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;product&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;SwiftSyntaxMacros&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;package&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;swift-syntax&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
                     &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;product&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;SwiftCompilerPlugin&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;package&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;swift-syntax&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
                 &lt;span class=&quot;p&quot;&gt;]),&lt;/span&gt;
          &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;target&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;ConcurrencyHelpers&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;dependencies&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;ConcurrencyHelperMacros&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]),&lt;/span&gt;
          &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;testTarget&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;ConcurrencyHelperMacroTests&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;dependencies&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;ConcurrencyHelperMacros&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]),&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;這些特性涉及到SE-0382、SE-0389、SE-0394和SE-0397。（109903303）&lt;/p&gt;

&lt;p&gt;Xcode 15 Beta中的已解決問題
修復：＃64927&lt;/p&gt;

&lt;p&gt;Swift 5.9引入了一個警告，當將調用方的inout參數轉換為被調用方的UnsafeRawPointer時，如果原始類型包含對象引用，則會引發警告。&lt;/p&gt;

&lt;div class=&quot;language-swift highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
&lt;span class=&quot;kd&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;inspectString&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;inout&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nf&quot;&gt;readBytes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// 警告：將一個inout類型的變量&apos;UnsafeRawPointer&apos;形成到字符串的內部表示，而不是字符串的內容。&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;inspectData&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;inout&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nf&quot;&gt;readBytes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// 警告：將一個變量&apos;T&apos;形成到&apos;UnsafeRawPointer&apos;中；這可能是不正確的，因為&apos;T&apos;可能包含對象引用。&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;（97963116）&lt;/p&gt;

&lt;p&gt;修復：當忘記寫.element時，可能會出現“無法生成診斷信息”的消息。（107160966）&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;swift和c互操作性&quot;&gt;Swift和C++互操作性&lt;/h2&gt;
&lt;p&gt;Xcode 15 Beta中的新功能
Swift支持與C++ / Objective-C++的雙向互操作性。現在您可以在Swift中使用C++ API的子集，並從C++中使用Swift API。通過在“C++和Objective-C互操作性”構建設置中選擇“C++ / Objective-C++”來啟用C++互操作性。&lt;/p&gt;

&lt;p&gt;有關C++互操作性的更多信息，請參閱https://swift.org/documentation/cxx-interop。（100830806）&lt;/p&gt;

&lt;p&gt;Xcode 15 Beta中已解決的問題
修正：啟用C++互操作性後，無法調用C類型的默認初始化程序。（109727620）&lt;/p&gt;

&lt;p&gt;Swift Packages
Xcode 15 Beta中的新功能
您現在可以使用“文件”&amp;gt;“新增”&amp;gt;“包…”菜單命令創建各種類型的Swift包。模板包括宏、包插件，以及配置為使用swift-argument-parser的命令行工具。（60274812）&lt;/p&gt;

&lt;p&gt;Swift標準庫
Xcode 15 Beta中的新功能
Zip2Sequence的實例（即調用zip()的結果）現在如果它們zip的序列也符合Sendable，則符合Sendable。（103840319）&lt;/p&gt;

&lt;p&gt;測試導航器
Xcode 15 Beta中的新功能
測試導航器已重新設計和重寫，以實現更快的開發-測試-調試循環。它報告和執行測試的速度更快，並且具有新的過濾系統，支持額外的測試結果和記錄先前的過濾器。（94313839）&lt;/p&gt;

&lt;p&gt;測試導航器中的過濾器欄現在使用標記而不是切換開關。可以通過在過濾器欄中單擊過濾器圖標或在欄中輸入“failed”、“skipped”或“expected failure”並進行自動完成來添加標記。通過單擊插入的標記並選擇當前使用的相反斷言的相反斷言來反轉過濾器。（101487428）&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;測試&quot;&gt;測試&lt;/h2&gt;
&lt;p&gt;Xcode 15 Beta中的新功能
xcodebuild現在支持列舉測試套件，該測試套件本來會由測試或測試無需構建的調用執行。測試列舉將以人類可讀或JSON格式列出套件中包含的每個目標、類和方法。此外，列舉的測試可以按層次分組或作為標識符的扁平列表（適用於將來的xcodebuild調用）。示例：&lt;/p&gt;

&lt;p&gt;構建並列舉項目和方案中的測試：&lt;/p&gt;

&lt;p&gt;xcodebuild test -enumerate-tests -project MyProject.xcodeproj -scheme MyScheme -destination ‘platform=iOS Simulator,name=iPhone 14 Pro’
構建並列舉在xctestproducts捆綁包中已編譯的測試：&lt;/p&gt;

&lt;p&gt;xcodebuild test-without-building -enumerate-tests -testProductsPath MyBuiltTests.xctestproducts -destination ‘platform=iOS Simulator,name=iPhone 14 Pro’
構建並列舉由xctestrun文件指定的已編譯測試：&lt;/p&gt;

&lt;p&gt;xcodebuild test-without-building -enumerate-tests -xctestrun MyBuiltTests.xctestrun -destination ‘platform=iOS Simulator,name=iPhone 14 Pro’
有關詳細信息，請參閱xcodebuild的手冊頁面。（27230120）&lt;/p&gt;

&lt;p&gt;XCTest現在支持自動屏幕錄製，除了截圖之外。屏幕錄製可以細緻地查看測試運行期間發生的情況，這對於調查UI測試失敗非常有意義。屏幕錄製默認啟用（優先於截圖）。可以在測試計劃或方案的測試操作選項中禁用它們。（35129014）&lt;/p&gt;

&lt;p&gt;Xcode的測試報告已重新設計，以提供對許多不同設備和測試配置的測試結果的簡化理解。（100825750）&lt;/p&gt;

&lt;p&gt;XCTWaiter的實例現在可以重用。（101293832）&lt;/p&gt;

&lt;p&gt;Xcode 15 Beta中已解決的問題
修正：在iOS和iPadOS上，XCTest提供了一個公共API，用於支持硬件鍵盤的修改器鍵。要訪問此API，請使用XCUIElement.typeKey(_:modifierFlags:)。（20185910）&lt;/p&gt;

&lt;p&gt;修正：已添加對使用其他束的符號對XCTest捕獲的回溯進行符號化的支持。（103923199）&lt;/p&gt;

&lt;p&gt;修正：對於不並行執行的測試，現在設置了一個看門狗計時器，該計時器涵蓋XCTestCase實例構造的期間（即調用指定的初始化程序-initWithInvocation:）。在此期間發生的停頓和長時間延遲導致測試工具提前中止測試並將spindump附加到結果捆綁包以進行進一步調查。如果在測試用例初始化程序中有昂貴的工作，應將該工作移至-setUp或以其他方式重構，使其在測試方法本身中發生。（104390801）&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;ui-testing&quot;&gt;UI Testing&lt;/h2&gt;
&lt;p&gt;Xcode 15 Beta中的新功能
無障礙審核支持：無障礙審核是對給定視圖進行的自動檢查，用於檢測多種無障礙問題。這些問題包括缺少標籤、文字不隨動態類型縮放以及低對比度等。參見XCUIApplication().performAccessibilityAudit()（100732814）&lt;/p&gt;

&lt;h2 id=&quot;xcode-cloud-1&quot;&gt;Xcode Cloud&lt;/h2&gt;
&lt;p&gt;Xcode 15 Beta中的新功能
Xcode現在在Xcode Cloud工作流程中支持macOS產品的新的Notarize後置操作。（64009778）&lt;/p&gt;</content><author><name>Marvin Lin</name></author><category term="swift" /><category term="Swift" /><category term="Xcode" /><category term="release notes" /><summary type="html">以下是 Xcode 15 beta 2 的 Release notes，將將整個文字丟入 ChatGPT 後翻譯出來的繁體中文結果。</summary></entry><entry><title type="html">王國之淚破關 - 開始真正的體驗海拉魯大地的時刻(內有部分破關畫面)</title><link href="http://localhost:4000/life/zelda-kingdom-tear-ending.html" rel="alternate" type="text/html" title="王國之淚破關 - 開始真正的體驗海拉魯大地的時刻(內有部分破關畫面)" /><published>2023-06-24T21:56:00+08:00</published><updated>2023-06-24T21:56:00+08:00</updated><id>http://localhost:4000/life/zelda-kingdom-tear-ending</id><content type="html" xml:base="http://localhost:4000/life/zelda-kingdom-tear-ending.html">&lt;h2 id=&quot;第一次破關所花時間大概用了-120-小時左右&quot;&gt;第一次破關所花時間，大概用了 120 小時左右&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;/assets/life/zelda-kingdom-tear-ending/playing_time_record.JPG&quot; alt=&quot;遊玩時間&quot; /&gt;&lt;/p&gt;

&lt;p&gt;趁著台灣 2023 年的端午連假，我將王國之淚破了第一次。以下會有破關的圖片，如果你還沒破關，但會在意看到破關的相關資訊，建議先行離開。&lt;/p&gt;

&lt;h2 id=&quot;接下來的海拉魯大地&quot;&gt;接下來的海拉魯大地&lt;/h2&gt;

&lt;p&gt;在這系列作品，並沒有所謂的「二週目」這個概念，在打完最終 Boss 之後，會給你一個在打 Boss 前狀態的存檔，玩家可以使用那個存檔開始暢遊海拉魯大地。&lt;/p&gt;

&lt;h3 id=&quot;所以說破關後接下來要做什麼&quot;&gt;所以說破關後接下來要做什麼？&lt;/h3&gt;

&lt;h3 id=&quot;當然是更仔細的去玩遊戲啊沒有要打-boss-的壓力你可以更好的體驗這個箱庭世界&quot;&gt;當然是更仔細的去玩遊戲啊！沒有要打 Boss 的壓力，你可以更好的體驗這個「箱庭」世界&lt;/h3&gt;

&lt;h2 id=&quot;以下是-switch-畫面&quot;&gt;以下是 Switch 畫面&lt;/h2&gt;

&lt;h3 id=&quot;打完-boss-後的城堡&quot;&gt;打完 Boss 後的城堡&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/assets/life/zelda-kingdom-tear-ending/castle.JPG&quot; alt=&quot;打完 Boss 後的城堡&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;薩爾達我回來了&quot;&gt;薩爾達：「我回來了」&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/assets/life/zelda-kingdom-tear-ending/zelda.JPG&quot; alt=&quot;薩爾達公主:我回來了&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;和林克站在一起的薩爾達&quot;&gt;和林克站在一起的薩爾達&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/assets/life/zelda-kingdom-tear-ending/link_and_zelda.JPG&quot; alt=&quot;和林克站在一起的薩爾達&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;魂之使者的道別&quot;&gt;魂之使者的道別&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/assets/life/zelda-kingdom-tear-ending/soul-is-gone.JPG&quot; alt=&quot;道別&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;大家的老婆---露珠&quot;&gt;大家的老婆 - 露珠&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/assets/life/zelda-kingdom-tear-ending/girl.JPG&quot; alt=&quot;露珠&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;相關網站&quot;&gt;相關網站&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://moonandeye.github.io/life/zelda-kingdom-tear-wall-papers.html&quot;&gt;王國之淚桌布下載&lt;/a&gt;&lt;/p&gt;</content><author><name>Marvin Lin</name></author><category term="life" /><category term="Zelda" /><category term="Nintendo" /><category term="Switch" /><summary type="html">第一次破關所花時間，大概用了 120 小時左右</summary></entry><entry><title type="html">WWDC23 - What’s new in UIKit - 重點整理</title><link href="http://localhost:4000/swift/wwdc23-whats-new-in-uikit.html" rel="alternate" type="text/html" title="WWDC23 - What’s new in UIKit - 重點整理" /><published>2023-06-09T13:48:00+08:00</published><updated>2023-06-09T13:48:00+08:00</updated><id>http://localhost:4000/swift/wwdc23-whats-new-in-uikit</id><content type="html" xml:base="http://localhost:4000/swift/wwdc23-whats-new-in-uikit.html">&lt;h2 id=&quot;重點1-uiviewcontroller-可以用-preview-了&quot;&gt;重點1： UIViewController 可以用 Preview 了&lt;/h2&gt;

&lt;p&gt;在 WWDC23 中，我們可以看到 UIKit 中的 UIViewController 可以用 Preview 了，這個功能在 SwiftUI 中已經有了，但在 UIKit 中，我們可以看到在 storyboard 中的 UIViewController 可以用 Preview 了。使用上也和 SwiftUI 新的 Macro preview 方式一樣，在下面那一段加上 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;#Preview&lt;/code&gt;，就可以在右邊看到 UI 元件 Preview 的畫面了。&lt;/p&gt;

&lt;h3 id=&quot;preview-in-uiviewcontroller&quot;&gt;Preview in UIViewController&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/assets/swift/wwdc23/uikit_preview_uiviewcontroller.png&quot; alt=&quot;Preview in UIVC&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;preview-in-uiview&quot;&gt;Preview in UIView&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/assets/swift/wwdc23/uikit_preview_uiview.png&quot; alt=&quot;Preview in UIVC&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;重點2-uiviewcontroller-加了一個-call-back-viewisappearing_且這個生命週期有-back-deploys-到-ios-130&quot;&gt;重點2： UIViewController 加了一個 call back &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;viewIsAppearing(_:)&lt;/code&gt;，且這個生命週期有 back-deploys 到 iOS 13.0&lt;/h2&gt;

&lt;p&gt;在 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;viewWillAppear(_:)&lt;/code&gt; 和 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;viewDidAppear(_:)&lt;/code&gt; 之間，多了一個 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;viewIsAppearing(_:)&lt;/code&gt; 的生命週期 call back。這個 call back 是為了解決 view 在過場時，尺寸正確性的問題。在 WWDC23 - What’s new in UIKit 中，也附上了生命週期 call back 順序。在以前會使用 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;viewWillLayoutSubviews()&lt;/code&gt; &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;viewDidLayoutSubviews()&lt;/code&gt; 進行 animation 的變化，但在未來，如果使用 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;viewIsAppearing&lt;/code&gt; 照 WWDC 的介紹，他只會被呼叫一次，而不是像 layoutSubviews 的 call back 會被呼叫多次。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/swift/wwdc23/view_is_appearing.png&quot; alt=&quot;view is appearing&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;重點3uicollectionview-效能優化&quot;&gt;重點3：UICollectionView 效能優化&lt;/h2&gt;

&lt;p&gt;在效能比較上，以 10k item 為例，在新的 iOS 上，collection view 的效能快了將近1倍，bench mark 在下圖&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/swift/wwdc23/collection_view_performance.png&quot; alt=&quot;collection view performance&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;重點4-nscollectionlayout-多了-uniformacrosssiblingsestimate-讓-uicollectionviewcell-可以自適應&quot;&gt;重點4: NSCollectionLayout 多了 uniformAcrossSiblings(estimate:) ，讓 UICollectionViewCell 可以自適應&lt;/h2&gt;

&lt;h3 id=&quot;新的-nscollectionlayoudimension---uniform-layout&quot;&gt;新的 NSCollectionLayouDimension - Uniform layout&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/assets/swift/wwdc23/uniform_layout.png&quot; alt=&quot;layout in uniform layout&quot; /&gt;&lt;/p&gt;

&lt;p&gt;請注意這個投影片的第二點，Use only with small numbers of sibling items。可以看出這並沒辦法保證在很複雜元件下，他也能良好的自適應。&lt;/p&gt;

&lt;p&gt;簡報的原文如下&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Keep in mind, when you use this feature, it requires all sibling items to be created and sized to determine the size of the largest item; so avoid using it when you have large numbers of items in a group.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;uniform-across-siblings-demo&quot;&gt;Uniform Across Siblings Demo&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/assets/swift/wwdc23/uniform_layout_demo.png&quot; alt=&quot;layout in uniform demo&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;感想&quot;&gt;感想&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;UIKit 可以做到 preview 讓我覺得驚豔，因為很多時候我們還是需要將整個專案建置起來，再開始進行 UI 的細節調整。有了 preview (如果 preview 不會影響效能)，這個時間應該會大輻縮減。&lt;/li&gt;
  &lt;li&gt;以前會在 SwiftUI 中使用 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;UIViewControllerRepresentable&lt;/code&gt; 包一個 VC 來看 UIKit 的 UI，但如果已經有很多 UI 元件，這個 SwiftUI 的 target 也需要 import 相關元件，最後也會很肥大。不過，現在只要 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;#Preview&lt;/code&gt; 即可。要猜的話，UIKit 的 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;#Preview&lt;/code&gt; 可能也是用 SwiftUI 的 preview 用 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;UIViewControllerRepresentable&lt;/code&gt; 來包 UIKit 的 VC 吧。&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;viewIsAppearing(_:)&lt;/code&gt; 這個生命週期的 call back 的 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Is&lt;/code&gt; 是以前不常見的，常常都是 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;will&lt;/code&gt; 表示這個動作開始之前，用 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;did&lt;/code&gt; 表示這個動作結束之後。這個 call back name 讓我想到 SwiftUI 中的 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;onAppear&lt;/code&gt; 。是不是後面還有其他招式會在 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;viewIsAppearing&lt;/code&gt; 呢？讓我拭目以待。&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;相關連結&quot;&gt;相關連結&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://moonandeye.github.io/swift/wwdc23-state-union.html&quot;&gt;WWDC23 - State of the union&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://developer.apple.com/videos/play/wwdc2023/10055/&quot;&gt;What’s new in UIKit&lt;/a&gt;&lt;/p&gt;</content><author><name>Marvin Lin</name></author><category term="swift" /><category term="Swift" /><category term="WWDC" /><summary type="html">重點1： UIViewController 可以用 Preview 了</summary></entry><entry><title type="html">WWDC23 - Swift 加入了 Macros 特性 - State of the union</title><link href="http://localhost:4000/swift/wwdc23-state-union.html" rel="alternate" type="text/html" title="WWDC23 - Swift 加入了 Macros 特性 - State of the union" /><published>2023-06-08T18:21:00+08:00</published><updated>2023-06-08T18:21:00+08:00</updated><id>http://localhost:4000/swift/wwdc23-state-union</id><content type="html" xml:base="http://localhost:4000/swift/wwdc23-state-union.html">&lt;p&gt;在前面的文章，寫過了 &lt;a href=&quot;https://moonandeye.github.io/swift/async-await-connect-closure.html&quot;&gt;使用 swift async/await 串接 closure 的方法&lt;/a&gt;，但在 WWDC23 的 State of the union 影片上，我看到了 macros 可以只使用一個 anootation 達到，還可以泛用到以前每個寫的 escaping closure，這一篇的作法，會需要在每個 escaping closure 包上 async func 才能運用，這之間的程式碼數量差距真的是太多了，讓我對 Swift 5.9 有了更多的期待。&lt;/p&gt;

&lt;h3 id=&quot;這是原來你寫的-fetch-content使用-completion-handler&quot;&gt;這是原來你寫的 fetch content，使用 completion handler&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/assets/swift/wwdc23/origin.png&quot; alt=&quot;completion handler&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;這是使用了-addasync-macros-後-addasync-應該不是-swift-原生的-annotation應該要自己寫&quot;&gt;這是使用了 @AddAsync Macros 後 (@AddAsync 應該不是 Swift 原生的 annotation，應該要自己寫)&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/assets/swift/wwdc23/using_macros.png&quot; alt=&quot;using macros&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;macros-還用在哪大量的用在-swiftui-上&quot;&gt;Macros 還用在哪？大量的用在 SwiftUI 上&lt;/h2&gt;

&lt;p&gt;從 &lt;a href=&quot;https://developer.apple.com/videos/play/wwdc2023/10164/&quot;&gt;What’s new in Swift 的影片中&lt;/a&gt;，我們可以看到 SwiftUI 中的 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ObservableObject&lt;/code&gt; 未來可以用 Macros 大量的簡化，讓你少寫很多 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;@Published&lt;/code&gt; 在 property 前面。&lt;/p&gt;

&lt;h3 id=&quot;以前寫-observableobject-都要在要曝露出的-property-前面加上-published&quot;&gt;以前寫 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ObservableObject&lt;/code&gt; 都要在要曝露出的 property 前面加上 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;@Published&lt;/code&gt;&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/assets/swift/wwdc23/origin_observable.png&quot; alt=&quot;origin observable&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;現在只要使用-observable-macros-就可以了&quot;&gt;現在只要使用 @Observable Macros 就可以了&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/assets/swift/wwdc23/macros_observable.png&quot; alt=&quot;Macros observable&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;在-wwdc23-中對-observable-的解釋&quot;&gt;在 WWDC23 中對 Observable 的解釋&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/assets/swift/wwdc23/behind_observable.png&quot; alt=&quot;behind observable&quot; /&gt;&lt;/p&gt;

&lt;p&gt;相信 SwiftUI 會愈來愈好寫&lt;/p&gt;

&lt;h2 id=&quot;相關連結&quot;&gt;相關連結&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://moonandeye.github.io/swift/async-await-connect-closure.html&quot;&gt;使用 swift async/await 串接 closure 的方法&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://developer.apple.com/videos/play/wwdc2023/102/&quot;&gt;WWDC23 - Platforms State of the Union&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://developer.apple.com/videos/play/wwdc2023/10164/&quot;&gt;WWDC23 - What’s new in Swift&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.hackingwithswift.com/articles/258/whats-new-in-swift-5-9&quot;&gt;Hacking with Swift 對 Macros 的介紹&lt;/a&gt;&lt;/p&gt;</content><author><name>Marvin Lin</name></author><category term="swift" /><category term="Swift" /><category term="WWDC" /><summary type="html">在前面的文章，寫過了 使用 swift async/await 串接 closure 的方法，但在 WWDC23 的 State of the union 影片上，我看到了 macros 可以只使用一個 anootation 達到，還可以泛用到以前每個寫的 escaping closure，這一篇的作法，會需要在每個 escaping closure 包上 async func 才能運用，這之間的程式碼數量差距真的是太多了，讓我對 Swift 5.9 有了更多的期待。</summary></entry><entry><title type="html">ChatGPT 官方 App 上架台灣區 App Store，台灣區可以使用</title><link href="http://localhost:4000/programming/ChatGPT-offical-app-on-AppStore.html" rel="alternate" type="text/html" title="ChatGPT 官方 App 上架台灣區 App Store，台灣區可以使用" /><published>2023-05-31T13:09:00+08:00</published><updated>2023-05-31T13:09:00+08:00</updated><id>http://localhost:4000/programming/ChatGPT-offical-app-on-AppStore</id><content type="html" xml:base="http://localhost:4000/programming/ChatGPT-offical-app-on-AppStore.html">&lt;p&gt;今天開始，台灣區 App Store 可以下載 ChatGPT 官方 App 了。連結在下方，之前在 iPhone 手機上，只能透過 Safari 將 ChatGPT 網頁存放在桌面。相信未來，ChatGPT 上的新 feature 也可以在這個 iPhone 上直接使用了。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://apps.apple.com/us/app/chatgpt/id6448311069&quot;&gt;ChatGPT 官方 App&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/programming/chatgpt/chatgpt.png&quot; alt=&quot;ChatGPT App 頁面&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;chatgpt-下載連結&quot;&gt;ChatGPT 下載連結&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://apps.apple.com/us/app/chatgpt/id6448311069&quot;&gt;ChatGPT 官方 App&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;相關連結&quot;&gt;相關連結&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://moonandeye.github.io/finance/ChatGPT-plugins.html&quot;&gt;ChatGPT 推出了 plugins，這會不會是 ChatGPT 的 AppStores?&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://moonandeye.github.io/programming/professor-article-about-ai.html&quot;&gt;大學教授對於 ChatGPT 在資訊相關領域的學生，開始了不同立場的論戰&lt;/a&gt;&lt;/p&gt;</content><author><name>Marvin Lin</name></author><category term="programming" /><category term="AI" /><category term="OpenAI" /><summary type="html">今天開始，台灣區 App Store 可以下載 ChatGPT 官方 App 了。連結在下方，之前在 iPhone 手機上，只能透過 Safari 將 ChatGPT 網頁存放在桌面。相信未來，ChatGPT 上的新 feature 也可以在這個 iPhone 上直接使用了。</summary></entry><entry><title type="html">從 Podfile.lock 確認專案使用的第三方套件的版本</title><link href="http://localhost:4000/swift/check-third-party-pod-version-from-podfilelock.html" rel="alternate" type="text/html" title="從 Podfile.lock 確認專案使用的第三方套件的版本" /><published>2023-05-30T14:29:00+08:00</published><updated>2023-05-30T14:29:00+08:00</updated><id>http://localhost:4000/swift/check-third-party-pod-version-from-podfilelock</id><content type="html" xml:base="http://localhost:4000/swift/check-third-party-pod-version-from-podfilelock.html">&lt;p&gt;iOS App 開發中，通常會用到第三方 libs，本篇文章主要是要介紹如何從 Podfile.lock 確認專案使用的第三方套件的版本。在 iOS 專案中，紀錄所有第三方 libs 和相依關係的檔案，是 Pofile.lock，當協同的開發者進行開發時，我們只要在 terminal 的同層目錄下，下指令 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pod install&lt;/code&gt; ，pod 就會依照 Podfile.lock 的內容，安裝 Podfile 上符合版本修件的第三方套件。接下來會說明 Podfile.lock 的結構。&lt;/p&gt;

&lt;h2 id=&quot;podfilelock-的結構&quot;&gt;Podfile.lock 的結構&lt;/h2&gt;

&lt;p&gt;使用的第三方 lib 版本，和每個第三方依賴的 lib 會在第一段，就是下方圖片 Pods: 的下方。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/swift/podfile-lock/podfile-lock-sample.png&quot; alt=&quot;Podfile lock sample&quot; /&gt;&lt;/p&gt;

&lt;p&gt;在 Podfile.lock 裡面，空兩格接一個短線，表示專案安裝的第三方 lib 與對應的版本號。在範例圖片中，你可以看到紅色框起來的地方，下兩行都是空四個空格再接一個短線。這表示你安裝的這個第三方有另外依賴第三方。以這個例子為，&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Firebase/CoreOnly&lt;/code&gt; 與  &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;FirebaseAnalytics (= 7.6.0)&lt;/code&gt;。而其中依賴的 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;FirebaseAnalytics&lt;/code&gt; 的第三方是固定版本 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;7.6.0&lt;/code&gt;。因為有 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;FirebaseAnalytics&lt;/code&gt; 的依賴，所以你會在 Podfile.lock 裡面也看到 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Firebase/CoreOnly&lt;/code&gt;，&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;FirebaseAnalytics&lt;/code&gt; 的版本號。&lt;/p&gt;

&lt;h2 id=&quot;提醒不要將-podfilelock-加入-gitignore&quot;&gt;提醒：不要將 Podfile.lock 加入 gitignore&lt;/h2&gt;

&lt;p&gt;這個檔案明確的紀錄這個專案所使用的第三方與版本號，在接手專案時，只要下 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pod install&lt;/code&gt;，就可以在專案上安裝對應的程式碼，所以請不要將 Podfile.lock 加入 gitignore，這會造成大家的困擾。&lt;/p&gt;

&lt;h2 id=&quot;相關連結&quot;&gt;相關連結&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://cocoapods.org/&quot;&gt;Cocoapods.org 的文件&lt;/a&gt;&lt;/p&gt;</content><author><name>Marvin Lin</name></author><category term="swift" /><category term="Swift" /><category term="第三方" /><category term="CocoaPods" /><summary type="html">iOS App 開發中，通常會用到第三方 libs，本篇文章主要是要介紹如何從 Podfile.lock 確認專案使用的第三方套件的版本。在 iOS 專案中，紀錄所有第三方 libs 和相依關係的檔案，是 Pofile.lock，當協同的開發者進行開發時，我們只要在 terminal 的同層目錄下，下指令 pod install ，pod 就會依照 Podfile.lock 的內容，安裝 Podfile 上符合版本修件的第三方套件。接下來會說明 Podfile.lock 的結構。</summary></entry></feed>